{"version":3,"file":"js/gallery.76f8f8b5.js","mappings":"iLAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACA,EAAG,YAAY,CAACE,YAAY,qBAAqBC,MAAM,CAAC,OAASL,EAAIM,OAAO,OAAS,IAAI,GAAK,gBAAgB,EAC3L,EACIC,EAAkB,GCFlBR,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,UAAUC,MAAM,CAAC,GAAKL,EAAIQ,KAAKR,EAAIS,GAAIT,EAAIU,YAAY,SAASC,EAAMC,GAAK,OAAOV,EAAG,IAAI,CAACU,IAAIA,EAAIR,YAAY,iBAAiBC,MAAM,CAAC,KAAOM,EAAME,SAAS,kBAAkBF,EAAMG,MAAM,mBAAmBH,EAAMI,OAAO,eAAe,OAAO,OAAS,SAAS,IAAM,eAAe,CAACb,EAAG,MAAM,CAACG,MAAM,CAAC,IAAMM,EAAMK,aAAa,IAAM,OAAO,IAAG,EAC3a,EACIT,EAAkB,G;;;;;ACOf,SAASU,EAAcC,EAAWC,EAASC,GAChD,MAAMC,EAAKC,SAASL,cAAcE,GAOlC,OANID,IACFG,EAAGH,UAAYA,GAEbE,GACFA,EAAWG,YAAYF,GAElBA,CACT,CAoEO,SAASG,EAAkBC,EAAGC,EAAGC,GACtC,IAAIC,EAAa,eAAcH,OAAOC,GAAK,SAM3C,YAJcG,IAAVF,IACFC,GAAc,YAAWD,KAASA,QAG7BC,CACT,CAwCO,SAASE,EAAeT,EAAIU,EAAGC,GACpCX,EAAGY,MAAMnB,MAAsB,kBAANiB,EAAmB,GAAEA,MAAQA,EACtDV,EAAGY,MAAMlB,OAAuB,kBAANiB,EAAmB,GAAEA,MAAQA,CACzD,CA8BO,MAAME,EAAa,CACxBC,KAAM,OACNC,QAAS,UACTC,OAAQ,SACRC,MAAO,SAWF,SAASC,EAAeC,GAC7B,MAAQ,WAAYA,GAAkB,IAAbA,EAAEC,QAAiBD,EAAEE,SAAWF,EAAEG,SAAWH,EAAEI,QAAUJ,EAAEK,QACtF,CAUO,SAASC,EAAsBC,EAAQC,EAAgBC,EAAS3B,UAErE,IAAI4B,EAAW,GAEf,GAAIH,aAAkBI,QACpBD,EAAW,CAACH,QACP,GAAIA,aAAkBK,UAAYC,MAAMC,QAAQP,GACrDG,EAAWG,MAAME,KAAKR,OACjB,CACL,MAAMS,EAA6B,kBAAXT,EAAsBA,EAASC,EACnDQ,IACFN,EAAWG,MAAME,KAAKN,EAAOQ,iBAAiBD,IAEpD,CAEE,OAAON,CACT,CAQO,SAASQ,EAAYC,GAC1B,MAAqB,oBAAPA,GACTA,EAAGC,WACHD,EAAGC,UAAUC,IACpB,CAOO,SAASC,IACd,SAAUC,UAAUC,SAAUD,UAAUC,OAAOC,MAAM,UACvD,CCzBA,MAAMC,EAKJC,YAAYC,EAAMC,GAChBpE,KAAKmE,KAAOA,EACZnE,KAAKqE,kBAAmB,EACpBD,GACFE,OAAOC,OAAOvE,KAAMoE,EAE1B,CAEEI,iBACExE,KAAKqE,kBAAmB,CAC5B,EAOA,MAAMI,EACJP,cAIElE,KAAK0E,WAAa,CAAC,EAKnB1E,KAAK2E,SAAW,CAAC,EAGjB3E,KAAK4E,UAAOhD,EAGZ5B,KAAK6E,aAAUjD,CACnB,CAQEkD,UAAUC,EAAMrB,EAAIsB,EAAW,KACxBhF,KAAK2E,SAASI,KACjB/E,KAAK2E,SAASI,GAAQ,IAGxB/E,KAAK2E,SAASI,IAAOE,KAAK,CAAEvB,KAAIsB,aAChChF,KAAK2E,SAASI,IAAOG,MAAK,CAACC,EAAIC,IAAOD,EAAGH,SAAWI,EAAGJ,WAEvDhF,KAAK4E,MAAME,UAAUC,EAAMrB,EAAIsB,EACnC,CAOEK,aAAaN,EAAMrB,GACb1D,KAAK2E,SAASI,KAEhB/E,KAAK2E,SAASI,GAAQ/E,KAAK2E,SAASI,GAAMO,QAAOA,GAAWA,EAAO5B,KAAOA,KAGxE1D,KAAK4E,MACP5E,KAAK4E,KAAKS,aAAaN,EAAMrB,EAEnC,CAQE6B,aAAaR,KAASS,GAKpB,OAJAxF,KAAK2E,SAASI,IAAOU,SAASH,IAE5BE,EAAK,GAAKF,EAAO5B,GAAGgC,MAAM1F,KAAMwF,EAAK,IAEhCA,EAAK,EAChB,CAOEG,GAAGZ,EAAMrB,GACF1D,KAAK0E,WAAWK,KACnB/E,KAAK0E,WAAWK,GAAQ,IAE1B/E,KAAK0E,WAAWK,IAAOE,KAAKvB,GAK5B1D,KAAK4E,MAAMe,GAAGZ,EAAMrB,EACxB,CAOEkC,IAAIb,EAAMrB,GACJ1D,KAAK0E,WAAWK,KAElB/E,KAAK0E,WAAWK,GAAQ/E,KAAK0E,WAAWK,GAAMO,QAAOO,GAAanC,IAAOmC,KAG3E7F,KAAK4E,MAAMgB,IAAIb,EAAMrB,EACzB,CAQEoC,SAASf,EAAMX,GACb,GAAIpE,KAAK4E,KACP,OAAO5E,KAAK4E,KAAKkB,SAASf,EAAMX,GAGlC,MAAM2B,EAA0C,IAAI9B,EAAgBc,EAAMX,GAM1E,OAJApE,KAAK0E,WAAWK,IAAOU,SAASI,IAC9BA,EAASG,KAAKhG,KAAM+F,EAAM,IAGrBA,CACX,ECrVA,MAAME,EAKJ/B,YAAYgC,EAAUC,GAUpB,GANAnG,KAAKoG,QAAUpF,EACb,mCACAkF,EAAW,MAAQ,MACnBC,GAGED,EAAU,CACZ,MAAMG,EAAyCrG,KAAKoG,QACpDC,EAAMC,SAAW,QACjBD,EAAME,IAAM,GACZF,EAAMG,IAAMN,EACZG,EAAMI,aAAa,OAAQ,eACjC,CAEIzG,KAAKoG,QAAQK,aAAa,cAAe,OAC7C,CAMEC,iBAAiB7F,EAAOC,GACjBd,KAAKoG,UAImB,QAAzBpG,KAAKoG,QAAQlF,SAIfW,EAAe7B,KAAKoG,QAAS,IAAK,QAClCpG,KAAKoG,QAAQpE,MAAM2E,gBAAkB,MACrC3G,KAAKoG,QAAQpE,MAAM4E,UAAYrF,EAAkB,EAAG,EAAGV,EAAQ,MAE/DgB,EAAe7B,KAAKoG,QAASvF,EAAOC,GAE1C,CAEE+F,UACM7G,KAAKoG,SAASU,YAChB9G,KAAKoG,QAAQW,SAEf/G,KAAKoG,QAAU,IACnB,EC9CA,MAAMY,EAMJ9C,YAAY+C,EAAUC,EAAUC,GAC9BnH,KAAKkH,SAAWA,EAChBlH,KAAKoH,KAAOH,EACZjH,KAAKmH,MAAQA,EAGbnH,KAAKoG,aAAUxE,EAEf5B,KAAKqH,iBAAczF,EAEnB5B,KAAKsH,WAAQ1F,EAEb5B,KAAKuH,oBAAsB,EAC3BvH,KAAKwH,qBAAuB,EAE5BxH,KAAKa,MAAQ4G,OAAOzH,KAAKoH,KAAKtF,IAAM2F,OAAOzH,KAAKoH,KAAKvG,QAAU,EAC/Db,KAAKc,OAAS2G,OAAOzH,KAAKoH,KAAKrF,IAAM0F,OAAOzH,KAAKoH,KAAKtG,SAAW,EAEjEd,KAAK0H,YAAa,EAClB1H,KAAK2H,UAAW,EAChB3H,KAAK4H,YAAa,EAElB5H,KAAK6H,MAAQ5F,EAAWC,KAEpBlC,KAAKoH,KAAKjD,KACZnE,KAAKmE,KAAOnE,KAAKoH,KAAKjD,KACbnE,KAAKoH,KAAKZ,IACnBxG,KAAKmE,KAAO,QAEZnE,KAAKmE,KAAO,OAGdnE,KAAKkH,SAASpB,SAAS,cAAe,CAAEgC,QAAS9H,MACrD,CAEE+H,oBACM/H,KAAKqH,cAAgBrH,KAAKgI,mBAE5BC,YAAW,KACLjI,KAAKqH,cACPrH,KAAKqH,YAAYR,UACjB7G,KAAKqH,iBAAczF,EAC7B,GACS,IAET,CAQEsG,KAAKC,EAAQC,GACX,GAAIpI,KAAKsH,OAAStH,KAAKqI,iBACrB,GAAKrI,KAAKqH,YAYH,CACL,MAAMiB,EAAgBtI,KAAKqH,YAAYjB,QAEnCkC,IAAkBA,EAAcC,eAClCvI,KAAKsH,MAAMnB,UAAUqC,QAAQF,EAEvC,KAlB6B,CACrB,MAAMG,EAAiBzI,KAAKkH,SAAS3B,aACnC,oBAGCvF,KAAKoH,KAAKsB,OAAQ1I,KAAKsH,MAAMqB,eAAgB3I,KAAKoH,KAAKsB,KACxD1I,MAEFA,KAAKqH,YAAc,IAAIpB,EACrBwC,EACAzI,KAAKsH,MAAMnB,UAErB,CASQnG,KAAKoG,UAAYgC,GAIjBpI,KAAKkH,SAASpB,SAAS,cAAe,CAAEgC,QAAS9H,KAAMmI,WAAU9D,mBAIjErE,KAAK4I,kBACP5I,KAAKoG,QAAUpF,EAAc,YAAa,OAGtChB,KAAKuH,qBACPvH,KAAK6I,UAAUV,KAGjBnI,KAAKoG,QAAUpF,EAAc,gBAAiB,OAC9ChB,KAAKoG,QAAQ0C,UAAY9I,KAAKoH,KAAK2B,MAAQ,IAGzCX,GAAUpI,KAAKsH,OACjBtH,KAAKsH,MAAM0B,mBAAkB,GAEnC,CAOEH,UAAUV,GACR,IAAKnI,KAAK4I,mBACJ5I,KAAKoG,SACNpG,KAAKkH,SAASpB,SAAS,mBAAoB,CAAEgC,QAAS9H,KAAMmI,WAAU9D,iBACzE,OAGF,MAAM4E,EAA8CjJ,KAAKoG,QAEzDpG,KAAKkJ,oBAEDlJ,KAAKoH,KAAK+B,SACZF,EAAaE,OAASnJ,KAAKoH,KAAK+B,QAGlCF,EAAazC,IAAMxG,KAAKoH,KAAKZ,KAAO,GACpCyC,EAAa1C,IAAMvG,KAAKoH,KAAKb,KAAO,GAEpCvG,KAAK6H,MAAQ5F,EAAWE,QAEpB8G,EAAaG,SACfpJ,KAAKqJ,YAELJ,EAAaK,OAAS,KACpBtJ,KAAKqJ,UAAU,EAGjBJ,EAAaM,QAAU,KACrBvJ,KAAKwJ,SAAS,EAGtB,CAOEC,SAASnC,GACPtH,KAAKsH,MAAQA,EACbtH,KAAK2H,UAAW,EAChB3H,KAAKkH,SAAWI,EAAM1C,IAG1B,CAKEyE,WACErJ,KAAK6H,MAAQ5F,EAAWG,OAEpBpC,KAAKsH,OAAStH,KAAKoG,UACrBpG,KAAKkH,SAASpB,SAAS,eAAgB,CAAEwB,MAAOtH,KAAKsH,MAAOQ,QAAS9H,OAGjEA,KAAKsH,MAAMoC,UACR1J,KAAKsH,MAAMqC,gBACV3J,KAAKoG,QAAQU,aACnB9G,KAAK4J,SACL5J,KAAKsH,MAAM0B,mBAAkB,IAG3BhJ,KAAK6H,QAAU5F,EAAWG,QAAUpC,KAAK6H,QAAU5F,EAAWI,OAChErC,KAAK+H,oBAGb,CAKEyB,UACExJ,KAAK6H,MAAQ5F,EAAWI,MAEpBrC,KAAKsH,QACPtH,KAAK6J,eACL7J,KAAKkH,SAASpB,SAAS,eAAgB,CAAEwB,MAAOtH,KAAKsH,MAAOwC,SAAS,EAAMhC,QAAS9H,OACpFA,KAAKkH,SAASpB,SAAS,YAAa,CAAEwB,MAAOtH,KAAKsH,MAAOQ,QAAS9H,OAExE,CAKE+J,YACE,OAAO/J,KAAKkH,SAAS3B,aACnB,mBACAvF,KAAK6H,QAAU5F,EAAWE,QAC1BnC,KAEN,CAKE8J,UACE,OAAO9J,KAAK6H,QAAU5F,EAAWI,KACrC,CAKEuG,iBACE,MAAqB,UAAd5I,KAAKmE,IAChB,CAQEuC,iBAAiB7F,EAAOC,GACtB,GAAKd,KAAKoG,UAINpG,KAAKqH,aACPrH,KAAKqH,YAAYX,iBAAiB7F,EAAOC,IAGvCd,KAAKkH,SAASpB,SAChB,gBACA,CAAEgC,QAAS9H,KAAMa,QAAOC,WAAUuD,mBAKpCxC,EAAe7B,KAAKoG,QAASvF,EAAOC,GAEhCd,KAAK4I,mBAAqB5I,KAAK8J,YAAW,CAC5C,MAAME,GAAwBhK,KAAKuH,qBAAuB1G,EAE1Db,KAAKuH,oBAAsB1G,EAC3Bb,KAAKwH,qBAAuB1G,EAExBkJ,EACFhK,KAAK6I,WAAU,GAEf7I,KAAKkJ,oBAGHlJ,KAAKsH,OACPtH,KAAKkH,SAASpB,SACZ,kBACA,CAAEwB,MAAOtH,KAAKsH,MAAOzG,QAAOC,SAAQgH,QAAS9H,MAGvD,CACA,CAKEiK,aACE,OAAOjK,KAAKkH,SAAS3B,aACnB,oBACAvF,KAAK4I,kBAAqB5I,KAAK6H,QAAU5F,EAAWI,MACpDrC,KAEN,CAKEkJ,oBAME,IAAKlJ,KAAK4I,mBAAqB5I,KAAKoG,UAAYpG,KAAKoH,KAAK+B,OACxD,OAGF,MAAMzI,EAAuCV,KAAKoG,QAC5C8D,EAAalK,KAAKkH,SAAS3B,aAC/B,mBACAvF,KAAKuH,oBACLvH,QAICU,EAAMyJ,QAAQC,iBACZF,EAAaG,SAAS3J,EAAMyJ,QAAQC,gBAAiB,OAExD1J,EAAM4J,MAAQJ,EAAa,KAC3BxJ,EAAMyJ,QAAQC,gBAAkBG,OAAOL,GAE7C,CAKE7B,iBACE,OAAOrI,KAAKkH,SAAS3B,aACnB,wBACAvF,KAAK4I,iBACL5I,KAEN,CAKEwK,WACMxK,KAAKkH,SAASpB,SAAS,kBAAmB,CAAEgC,QAAS9H,OAAQqE,kBAIjErE,KAAKkI,MAAK,EACd,CAKEF,kBACE,OAAOhI,KAAKkH,SAAS3B,aACnB,uBACAvF,KAAK+J,YACL/J,KAEN,CAKE6G,UACE7G,KAAK2H,UAAW,EAChB3H,KAAKsH,WAAQ1F,EAET5B,KAAKkH,SAASpB,SAAS,iBAAkB,CAAEgC,QAAS9H,OAAQqE,mBAIhErE,KAAK+G,SAED/G,KAAKqH,cACPrH,KAAKqH,YAAYR,UACjB7G,KAAKqH,iBAAczF,GAGjB5B,KAAK4I,kBAAoB5I,KAAKoG,UAChCpG,KAAKoG,QAAQkD,OAAS,KACtBtJ,KAAKoG,QAAQmD,QAAU,KACvBvJ,KAAKoG,aAAUxE,GAErB,CAKEiI,eACE,GAAI7J,KAAKsH,MAAO,CACd,IAAImD,EAAazJ,EAAc,kBAAmB,OAClDyJ,EAAWC,UAAY1K,KAAKkH,SAASrC,SAAS8F,UAAY,GAC1DF,EAA4CzK,KAAKkH,SAAS3B,aACxD,sBACAkF,EACAzK,MAEFA,KAAKoG,QAAUpF,EAAc,0CAA2C,OACxEhB,KAAKoG,QAAQ9E,YAAYmJ,GACzBzK,KAAKsH,MAAMnB,UAAUuE,UAAY,GACjC1K,KAAKsH,MAAMnB,UAAU7E,YAAYtB,KAAKoG,SACtCpG,KAAKsH,MAAM0B,mBAAkB,GAC7BhJ,KAAK+H,mBACX,CACA,CAKE6B,SACE,GAAI5J,KAAK0H,aAAe1H,KAAKoG,QAC3B,OAKF,GAFApG,KAAK0H,YAAa,EAEd1H,KAAK6H,QAAU5F,EAAWI,MAE5B,YADArC,KAAK6J,eAIP,GAAI7J,KAAKkH,SAASpB,SAAS,gBAAiB,CAAEgC,QAAS9H,OAAQqE,iBAC7D,OAGF,MAAMuG,EAAkB,WAAY5K,KAAKoG,QAErCpG,KAAK4I,iBAaHgC,GAAkB5K,KAAKsH,SAAWtH,KAAKsH,MAAMoC,UAAY7F,MAC3D7D,KAAK4H,YAAa,EAIjB5H,KAAKoG,QAASyE,SAASC,OAAM,SAAUC,SAAQ,KAC9C/K,KAAK4H,YAAa,EAClB5H,KAAKgL,aAAa,KAGpBhL,KAAKgL,cAEEhL,KAAKsH,QAAUtH,KAAKoG,QAAQU,YACrC9G,KAAKsH,MAAMnB,UAAU7E,YAAYtB,KAAKoG,QAE5C,CAOE6E,YACMjL,KAAKkH,SAASpB,SAAS,kBAAmB,CAAEgC,QAAS9H,OAAQqE,kBAC3DrE,KAAKsH,QAIPtH,KAAK4I,kBAAoB5I,KAAK4H,aAAe/D,IAG/C7D,KAAKgL,cACIhL,KAAK8J,WACd9J,KAAKkI,MAAK,GAAO,GAGflI,KAAKsH,MAAM4D,eACblL,KAAKsH,MAAM4D,cAAczE,aAAa,cAAe,SAE3D,CAKE0E,aACEnL,KAAKkH,SAASpB,SAAS,oBAAqB,CAAEgC,QAAS9H,OACnDA,KAAKsH,OAAStH,KAAKsH,MAAM4D,eAC3BlL,KAAKsH,MAAM4D,cAAczE,aAAa,cAAe,OAE3D,CAMEM,SACE/G,KAAK0H,YAAa,EAEd1H,KAAKkH,SAASpB,SAAS,gBAAiB,CAAEgC,QAAS9H,OAAQqE,mBAI3DrE,KAAKoG,SAAWpG,KAAKoG,QAAQU,YAC/B9G,KAAKoG,QAAQW,SAGX/G,KAAKqH,aAAerH,KAAKqH,YAAYjB,SACvCpG,KAAKqH,YAAYjB,QAAQW,SAE/B,CAKEiE,cACOhL,KAAK0H,aAIN1H,KAAKkH,SAASpB,SAAS,qBAAsB,CAAEgC,QAAS9H,OAAQqE,mBAKhErE,KAAKsH,OAAStH,KAAKoG,UAAYpG,KAAKoG,QAAQU,YAC9C9G,KAAKsH,MAAMnB,UAAU7E,YAAYtB,KAAKoG,SAGpCpG,KAAK6H,QAAU5F,EAAWG,QAAUpC,KAAK6H,QAAU5F,EAAWI,OAChErC,KAAK+H,qBAEX,EC1fO,SAASqD,EAAgBvG,EAASD,GACvC,GAAIC,EAAQwG,kBAAmB,CAC7B,MAAMC,EAAkBzG,EAAQwG,kBAAkBxG,EAASD,GAC3D,GAAI0G,EACF,OAAOA,CAEb,CAEE,MAAO,CACL9J,EAAGH,SAASkK,gBAAgBC,YAM5B/J,EAAGgK,OAAOC,YAEd,CAqCO,SAASC,EAAmBC,EAAM/G,EAASgH,EAAc5E,EAAUE,GACxE,IAAI2E,EAAe,EAEnB,GAAIjH,EAAQkH,UACVD,EAAejH,EAAQkH,UAAUF,EAAc5E,EAAUE,GAAOyE,QAC3D,GAAI/G,EAAQmH,QACjBF,EAAejH,EAAQmH,QAAQJ,OAC1B,CACL,MAAMK,EAAiB,UAAYL,EAAK,GAAGM,cAAgBN,EAAKO,MAAM,GAElEtH,EAAQoH,KAEVH,EAAejH,EAAQoH,GAE7B,CAEE,OAAOxE,OAAOqE,IAAiB,CACjC,CASO,SAASM,EAAevH,EAASgH,EAAc5E,EAAUE,GAC9D,MAAO,CACL3F,EAAGqK,EAAarK,EACZmK,EAAmB,OAAQ9G,EAASgH,EAAc5E,EAAUE,GAC5DwE,EAAmB,QAAS9G,EAASgH,EAAc5E,EAAUE,GACjE1F,EAAGoK,EAAapK,EACZkK,EAAmB,MAAO9G,EAASgH,EAAc5E,EAAUE,GAC3DwE,EAAmB,SAAU9G,EAASgH,EAAc5E,EAAUE,GAEtE,CCnGA,MAAMkF,EAAkB,IAaxB,MAAMC,EAOJpI,YAAYW,EAASoC,EAAUE,EAAOvC,GACpC5E,KAAK4E,KAAOA,EACZ5E,KAAK6E,QAAUA,EACf7E,KAAKiH,SAAWA,EAChBjH,KAAKmH,MAAQA,EAEbnH,KAAKuM,YAAc,KAEnBvM,KAAKwM,YAAc,KACnBxM,KAAKyM,IAAM,EACXzM,KAAK0M,KAAO,EACZ1M,KAAK2M,MAAQ,EACb3M,KAAK4M,QAAU,EACf5M,KAAK6M,UAAY,EACjB7M,KAAK8M,IAAM,EACX9M,KAAK+M,IAAM,CACf,CAWEC,OAAOC,EAAUC,EAAWX,GAE1B,MAAMC,EAAc,CAAEhL,EAAGyL,EAAUxL,EAAGyL,GACtClN,KAAKwM,YAAcA,EACnBxM,KAAKuM,YAAcA,EAEnB,MAAMY,EAASZ,EAAY/K,EAAIgL,EAAYhL,EACrC4L,EAASb,EAAY9K,EAAI+K,EAAY/K,EAE3CzB,KAAKyM,IAAMY,KAAKN,IAAI,EAAGI,EAASC,EAASD,EAASC,GAClDpN,KAAK0M,KAAOW,KAAKN,IAAI,EAAGI,EAASC,EAASD,EAASC,GAInDpN,KAAK2M,MAAQU,KAAKN,IAAI,EAAGK,GAEzBpN,KAAK4M,QAAU5M,KAAKsN,cACpBtN,KAAK6M,UAAY7M,KAAKuN,gBACtBvN,KAAK8M,IAAMO,KAAKP,IACd9M,KAAK4M,QACL5M,KAAK6M,UACL7M,KAAKwN,WAGPxN,KAAK+M,IAAMM,KAAKN,IACd/M,KAAKyM,IACLzM,KAAK4M,QACL5M,KAAK6M,WAGH7M,KAAK4E,MACP5E,KAAK4E,KAAKkB,SAAS,mBAAoB,CAAE2H,WAAYzN,KAAM0N,UAAW1N,KAAKiH,UAEjF,CASE0G,sBAAsBC,GACpB,MAAMC,EACJD,EAAe,YAEXE,EAAc9N,KAAK6E,QAAQgJ,GAEjC,GAAKC,EAIL,MAA2B,oBAAhBA,EACFA,EAAY9N,MAGD,SAAhB8N,EACK9N,KAAK0M,KAGM,QAAhBoB,EACK9N,KAAKyM,IAGPhF,OAAOqG,EAClB,CAWEP,gBACE,IAAIQ,EAAgB/N,KAAK2N,sBAAsB,aAE/C,OAAII,IAKJA,EAAgBV,KAAKN,IAAI,EAAc,EAAX/M,KAAKyM,KAE7BzM,KAAKwM,aAAeuB,EAAgB/N,KAAKwM,YAAYhL,EAAI6K,IAC3D0B,EAAgB1B,EAAkBrM,KAAKwM,YAAYhL,GAG9CuM,EACX,CAQET,cACE,OAAOtN,KAAK2N,sBAAsB,YAAc3N,KAAKyM,GACzD,CAUEe,UAGE,OAAOxN,KAAK2N,sBAAsB,QAAUN,KAAKP,IAAI,EAAc,EAAX9M,KAAKyM,IACjE,EC7IO,SAASuB,EAAa/G,EAAUC,EAAUC,GAC/C,MAAMW,EAAUZ,EAAS+G,sBAAsBhH,EAAUE,GAEzD,IAAI+G,EAEJ,MAAM,QAAErJ,GAAYqC,EAIpB,GAAIrC,EAAS,CAGX,IAAIgH,EAFJqC,EAAY,IAAI5B,EAAUzH,EAASoC,GAAW,GAI5C4E,EADE3E,EAAStC,KACIsC,EAAStC,KAAKiH,aAEdT,EAAgBvG,EAASqC,GAG1C,MAAMqF,EAAcH,EAAevH,EAASgH,EAAc5E,EAAUE,GACpE+G,EAAUlB,OAAOlF,EAAQjH,MAAOiH,EAAQhH,OAAQyL,EACpD,CAWE,OATAzE,EAAQ0C,WAEJ0D,GACFpG,EAAQpB,iBACN2G,KAAKc,KAAKrG,EAAQjH,MAAQqN,EAAUtB,SACpCS,KAAKc,KAAKrG,EAAQhH,OAASoN,EAAUtB,UAIlC9E,CACT,CAcO,SAASsG,EAAcjH,EAAOD,GACnC,MAAMD,EAAWC,EAASmH,YAAYlH,GAEtC,IAAID,EAASpB,SAAS,gBAAiB,CAAEqB,QAAOF,aAAY5C,iBAI5D,OAAO2J,EAAa/G,EAAUC,EAAUC,EAC1C,CChEA,MAAMmH,UAAuB7J,EAM3B8J,cACE,IAAIC,EAAW,EACf,MAAMC,EAAazO,KAAK6E,SAAS4J,WAE7BA,GAAc,WAAYA,EAE5BD,EAAWC,EAAWC,OACbD,GAAc,YAAaA,IAE/BA,EAAWE,QACdF,EAAWE,MAAQ3O,KAAK4O,uBAAuBH,EAAWI,UAGxDJ,EAAWE,QACbH,EAAWC,EAAWE,MAAMD,SAKhC,MAAM3I,EAAQ/F,KAAK8F,SAAS,WAAY,CACtC2I,aACAD,aAEF,OAAOxO,KAAKuF,aAAa,WAAYQ,EAAMyI,SAAUC,EACzD,CAOER,sBAAsBP,EAAWvG,GAC/B,OAAO,IAAIH,EAAQ0G,EAAW1N,KAAMmH,EACxC,CAYEkH,YAAYlH,GACV,MAAMsH,EAAazO,KAAK6E,SAAS4J,WAEjC,IAAIK,EAAiB,CAAC,EAClB1L,MAAMC,QAAQoL,GAEhBK,EAAiBL,EAAWtH,GACnBsH,GAAc,YAAaA,IAM/BA,EAAWE,QACdF,EAAWE,MAAQ3O,KAAK4O,uBAAuBH,EAAWI,UAG5DC,EAAiBL,EAAWE,MAAMxH,IAGpC,IAAIF,EAAW6H,EAEX7H,aAAoB/D,UACtB+D,EAAWjH,KAAK+O,sBAAsB9H,IAKxC,MAAMlB,EAAQ/F,KAAK8F,SAAS,WAAY,CACtCmB,SAAUA,GAAY,CAAC,EACvBE,UAGF,OAAOnH,KAAKuF,aAAa,WAAYQ,EAAMkB,SAAUE,EACzD,CASEyH,uBAAuBI,GACrB,OAAIhP,KAAK6E,SAASoK,UAAYjP,KAAK6E,SAASqK,cACnCrM,EACL7C,KAAK6E,QAAQoK,SACbjP,KAAK6E,QAAQqK,cACbF,IACG,GAGA,CAACA,EACZ,CAQED,sBAAsB3I,GAEpB,MAAMa,EAAW,CACfb,WAGI+I,EACgB,MAApB/I,EAAQlF,QACJkF,EACAA,EAAQgJ,cAAc,KAG5B,GAAID,EAAQ,CAGVlI,EAAST,IAAM2I,EAAOhF,QAAQkF,SAAWF,EAAOG,KAE5CH,EAAOhF,QAAQoF,aACjBtI,EAASkC,OAASgG,EAAOhF,QAAQoF,YAGnCtI,EAASpG,MAAQsO,EAAOhF,QAAQqF,UAAYnF,SAAS8E,EAAOhF,QAAQqF,UAAW,IAAM,EACrFvI,EAASnG,OAASqO,EAAOhF,QAAQsF,WAAapF,SAAS8E,EAAOhF,QAAQsF,WAAY,IAAM,EAGxFxI,EAASnF,EAAImF,EAASpG,MACtBoG,EAASlF,EAAIkF,EAASnG,OAElBqO,EAAOhF,QAAQuF,WACjBzI,EAAS9C,KAAOgL,EAAOhF,QAAQuF,UAGjC,MAAMC,EAAcvJ,EAAQgJ,cAAc,OAEtCO,IAGF1I,EAASyB,KAAOiH,EAAYC,YAAcD,EAAYnJ,IACtDS,EAASV,IAAMoJ,EAAYE,aAAa,QAAU,KAGhDV,EAAOhF,QAAQ2F,aAAeX,EAAOhF,QAAQ4F,WAC/C9I,EAAS+I,cAAe,EAEhC,CAEI,OAAOhQ,KAAKuF,aAAa,cAAe0B,EAAUb,EAAS+I,EAC/D,CASEnB,aAAa/G,EAAUE,GACrB,OAAO6G,EAAa/G,EAAUjH,KAAMmH,EACxC,EC5IA,MAAM8I,UAA2B3B,EAI/BpK,YAAYW,GACVqL,QAEAlQ,KAAK6E,QAAUA,GAAW,CAAC,EAC3B7E,KAAKmQ,KAAO,EACZnQ,KAAKoQ,YAAa,EAKlBpQ,KAAKqQ,uBAAoBzO,EAEzB5B,KAAKsQ,kBAAoBtQ,KAAKsQ,kBAAkBC,KAAKvQ,KACzD,CAMEwQ,OAEE3N,EAAsB7C,KAAK6E,QAAQgK,QAAS7O,KAAK6E,QAAQ4L,iBACtDhL,SAASuJ,IACRA,EAAe0B,iBAAiB,QAAS1Q,KAAKsQ,mBAAmB,EAAM,GAE/E,CAKEA,kBAAkB/N,GAEhB,GAAID,EAAeC,IACZkJ,OAAO7G,OACqB,IAA5B6G,OAAO3H,UAAU6M,OACtB,OAWF,IAAIC,EAAe,CAAEpP,EAAGe,EAAEsO,QAASpP,EAAGc,EAAEuO,SAEnCF,EAAapP,GAAMoP,EAAanP,IACnCmP,EAAe,MAGjB,IAAIG,EAAe/Q,KAAKgR,gBAAgBzO,GACxCwO,EAAe/Q,KAAKuF,aAAa,eAAgBwL,EAAcxO,EAAGvC,MAElE,MAAMyO,EAAa,CACjBI,QAAqCtM,EAAE0O,eAGrCF,GAAgB,IAClBxO,EAAEiC,iBACFxE,KAAKkR,YAAYH,EAActC,EAAYmC,GAEjD,CAQEI,gBAAgBzO,GAEd,GAAIvC,KAAK6E,QAAQsM,kBACf,OAAOnR,KAAK6E,QAAQsM,kBAAkBnL,KAAKhG,KAAMuC,GAGnD,MAAM6O,EAA4C7O,EAAE8O,OAC9CC,EAAgBzO,EACpB7C,KAAK6E,QAAQoK,SACbjP,KAAK6E,QAAQqK,cACe3M,EAAE0O,eAE1BM,EAAoBD,EAAcE,WACtCC,GAASA,IAAUL,GAAiBK,EAAMC,SAASN,KAGrD,OAA2B,IAAvBG,EACKA,EACEvR,KAAK6E,QAAQoK,UAAYjP,KAAK6E,QAAQqK,eAEvC,EAIH,CACX,CAUEgC,YAAY/J,EAAOsH,EAAYmC,GAE7B,OAAInF,OAAO7G,OAKX5E,KAAK6E,QAAQsC,MAAQA,EAGrBnH,KAAK6E,QAAQ8M,kBAAoBf,EAEjC5Q,KAAKoQ,YAAa,EAClBpQ,KAAK4R,QAAQzK,EAAOsH,IACb,EACX,CAQEmD,QAAQzK,EAAOsH,GACb,MAAM,QAAE5J,GAAY7E,KAEhByO,IACF5J,EAAQ4J,WAAaA,GAKvB,MAAMoD,EAAe,GAEfC,SAAwBjN,EAAQkN,WACtC,GAAItO,EAAYoB,EAAQkN,YACtBF,EAAa5M,KAAK+M,QAAQC,QAAyCpN,EAAQkN,iBACtE,IAAuB,WAAnBD,EACT,MAAM,IAAII,MAAM,+CACX,GAAuB,aAAnBJ,EAGT,MAAM,IAAII,MAAM,2BAFhBL,EAAa5M,KAAqDJ,EAAQkN,aAGhF,CAGuC,oBAAxBlN,EAAQsN,aAEjBN,EAAa5M,KAAKJ,EAAQsN,gBAGM,IAA9BtN,EAAQuN,mBAA+BjL,GAAS,IAClDnH,KAAKqQ,kBAAoBjC,EAAcjH,EAAOnH,OAIhD,MAAMqS,IAAQrS,KAAKmQ,KACnB6B,QAAQM,IAAIT,GAAcU,MAAMC,IAC9B,GAAIxS,KAAKoQ,WAAY,CACnB,MAAMqC,EAAaD,EAAgB,GACnCxS,KAAK0S,gBAAgBD,EAAYJ,EACzC,IAEA,CAOEK,gBAAgBC,EAAQN,GAMtB,GAAIA,IAAQrS,KAAKmQ,MAAQnQ,KAAKoQ,WAC5B,OAMF,GAHApQ,KAAKoQ,YAAa,EAGd3E,OAAO7G,KACT,OAQF,MAAMA,EAAyB,kBAAX+N,EACd,IAAIA,EAAOC,QAAQ5S,KAAK6E,SACxB,IAAI8N,EAAO3S,KAAK6E,SAEtB7E,KAAK4E,KAAOA,EACZ6G,OAAO7G,KAAOA,EAIbN,OAAOuO,KAAK7S,KAAK0E,YAAae,SAASV,IACtC/E,KAAK0E,WAAWK,IAAOU,SAAS/B,IAC9BkB,EAAKe,GAAGZ,EAAgDrB,EAAI,GAC5D,IAKHY,OAAOuO,KAAK7S,KAAK2E,UAAWc,SAASV,IACpC/E,KAAK2E,SAASI,IAAOU,SAASH,IAC5BV,EAAKE,UAAUC,EAAMO,EAAO5B,GAAI4B,EAAON,SAAS,GAChD,IAGAhF,KAAKqQ,oBACPzL,EAAKkO,cAAcC,WAAW/S,KAAKqQ,mBACnCrQ,KAAKqQ,uBAAoBzO,GAG3BgD,EAAKe,GAAG,WAAW,KAEjB3F,KAAK4E,UAAOhD,SACL6J,OAAO7G,IAAI,IAGpBA,EAAK4L,MACT,CAKE3J,UACE7G,KAAK4E,MAAMiC,UAEX7G,KAAKoQ,YAAa,EAClBpQ,KAAK0E,WAAa,CAAC,EAEnB7B,EAAsB7C,KAAK6E,QAAQgK,QAAS7O,KAAK6E,QAAQ4L,iBACtDhL,SAASuJ,IACRA,EAAegE,oBAAoB,QAAShT,KAAKsQ,mBAAmB,EAAM,GAElF,E;;;;;AR7RO,SAAStP,EAAcC,EAAWC,EAASC,GAChD,MAAMC,EAAKC,SAASL,cAAcE,GAOlC,OANID,IACFG,EAAGH,UAAYA,GAEbE,GACFA,EAAWG,YAAYF,GAElBA,CACT,CAOO,SAAS6R,EAAeC,EAAIC,GAMjC,OALAD,EAAG1R,EAAI2R,EAAG3R,EACV0R,EAAGzR,EAAI0R,EAAG1R,OACIG,IAAVuR,EAAG5S,KACL2S,EAAG3S,GAAK4S,EAAG5S,IAEN2S,CACT,CAKO,SAASE,EAAWC,GACzBA,EAAE7R,EAAI6L,KAAKiG,MAAMD,EAAE7R,GACnB6R,EAAE5R,EAAI4L,KAAKiG,MAAMD,EAAE5R,EACrB,CASO,SAAS8R,EAAmBL,EAAIC,GACrC,MAAM3R,EAAI6L,KAAKmG,IAAIN,EAAG1R,EAAI2R,EAAG3R,GACvBC,EAAI4L,KAAKmG,IAAIN,EAAGzR,EAAI0R,EAAG1R,GAC7B,OAAO4L,KAAKoG,KAAMjS,EAAIA,EAAMC,EAAIA,EAClC,CASO,SAASiS,EAAYR,EAAIC,GAC9B,OAAOD,EAAG1R,IAAM2R,EAAG3R,GAAK0R,EAAGzR,IAAM0R,EAAG1R,CACtC,CAUO,SAASkS,EAAMC,EAAK7G,EAAKD,GAC9B,OAAOO,KAAKN,IAAIM,KAAKP,IAAI8G,EAAK7G,GAAMD,EACtC,CAUO,SAASvL,EAAkBC,EAAGC,EAAGC,GACtC,IAAIC,EAAa,eAAcH,OAAOC,GAAK,SAM3C,YAJcG,IAAVF,IACFC,GAAc,YAAWD,KAASA,QAG7BC,CACT,CAUO,SAASkS,EAAazS,EAAII,EAAGC,EAAGC,GACrCN,EAAGY,MAAM4E,UAAYrF,EAAkBC,EAAGC,EAAGC,EAC/C,CAEA,MAAMoS,EAAmB,2BAUlB,SAASC,EAAmB3S,EAAIwK,EAAMoI,EAAUC,GAIrD7S,EAAGY,MAAMkS,WAAatI,EACjB,GAAEA,KAAQoI,OAAcC,GAAQH,IACjC,MACN,CASO,SAASjS,EAAeT,EAAIU,EAAGC,GACpCX,EAAGY,MAAMnB,MAAsB,kBAANiB,EAAmB,GAAEA,MAAQA,EACtDV,EAAGY,MAAMlB,OAAuB,kBAANiB,EAAmB,GAAEA,MAAQA,CACzD,CAKO,SAASoS,EAAsB/S,GACpC2S,EAAmB3S,EACrB,CAMO,SAASgT,EAAYC,GAC1B,MAAI,WAAYA,EACPA,EAAIxJ,SAASC,OAAM,SAGxBuJ,EAAIjL,SACC4I,QAAQC,QAAQoC,GAGlB,IAAIrC,SAAQ,CAACC,EAASqC,KAC3BD,EAAI/K,OAAS,IAAM2I,EAAQoC,GAC3BA,EAAI9K,QAAU+K,CAAM,GAExB,CAIO,MAAMrS,EAAa,CACxBC,KAAM,OACNC,QAAS,UACTC,OAAQ,SACRC,MAAO,SAWF,SAASC,EAAeC,GAC7B,MAAQ,WAAYA,GAAkB,IAAbA,EAAEC,QAAiBD,EAAEE,SAAWF,EAAEG,SAAWH,EAAEI,QAAUJ,EAAEK,QACtF,CAUO,SAASC,EAAsBC,EAAQC,EAAgBC,EAAS3B,UAErE,IAAI4B,EAAW,GAEf,GAAIH,aAAkBI,QACpBD,EAAW,CAACH,QACP,GAAIA,aAAkBK,UAAYC,MAAMC,QAAQP,GACrDG,EAAWG,MAAME,KAAKR,OACjB,CACL,MAAMS,EAA6B,kBAAXT,EAAsBA,EAASC,EACnDQ,IACFN,EAAWG,MAAME,KAAKN,EAAOQ,iBAAiBD,IAEpD,CAEE,OAAON,CACT,CAmBO,SAASY,IACd,SAAUC,UAAUC,SAAUD,UAAUC,OAAOC,MAAM,UACvD,CStOA,IAAIuQ,GAAkB,EAEtB,IAEE9I,OAAOiF,iBAAiB,OAAQ,KAAMpM,OAAOkQ,eAAe,CAAC,EAAG,UAAW,CACzEC,IAAKA,KACHF,GAAkB,CAAI,IAG5B,CAAE,MAAOhS,IAAI,CAWb,MAAMmS,EACJxQ,cAKElE,KAAK2U,MAAQ,EACjB,CAUEC,IAAIvD,EAAQlN,EAAM0B,EAAUgP,GAC1B7U,KAAK8U,gBAAgBzD,EAAQlN,EAAM0B,EAAUgP,EACjD,CAUE9N,OAAOsK,EAAQlN,EAAM0B,EAAUgP,GAC7B7U,KAAK8U,gBAAgBzD,EAAQlN,EAAM0B,EAAUgP,GAAS,EAC1D,CAKEE,YACE/U,KAAK2U,MAAMlP,SAASuP,IAClBhV,KAAK8U,gBACHE,EAAS3D,OACT2D,EAAS7Q,KACT6Q,EAASnP,SACTmP,EAASH,SACT,GACA,EACD,IAEH7U,KAAK2U,MAAQ,EACjB,CAaEG,gBAAgBzD,EAAQlN,EAAM0B,EAAUgP,EAASI,EAAQC,GACvD,IAAK7D,EACH,OAGF,MAAM8D,EAAaF,EAAS,sBAAwB,mBAC9CG,EAAQjR,EAAKkR,MAAM,KACzBD,EAAM3P,SAAS6P,IACb,GAAIA,EAAO,CAGJJ,IACCD,EAEFjV,KAAK2U,MAAQ3U,KAAK2U,MAAMrP,QAAQ0P,GACvBA,EAAS7Q,OAASmR,GACpBN,EAASnP,WAAaA,GACtBmP,EAAS3D,SAAWA,IAI3BrR,KAAK2U,MAAM1P,KAAK,CACdoM,SACAlN,KAAMmR,EACNzP,WACAgP,aAON,MAAMU,IAAehB,GAAkB,CAAEM,QAAUA,IAAW,GAE9DxD,EAAO8D,GACLG,EACAzP,EACA0P,EAEV,IAEA,ELjHO,SAASnK,EAAgBvG,EAASD,GACvC,GAAIC,EAAQwG,kBAAmB,CAC7B,MAAMC,EAAkBzG,EAAQwG,kBAAkBxG,EAASD,GAC3D,GAAI0G,EACF,OAAOA,CAEb,CAEE,MAAO,CACL9J,EAAGH,SAASkK,gBAAgBC,YAM5B/J,EAAGgK,OAAOC,YAEd,CAqCO,SAASC,EAAmBC,EAAM/G,EAASgH,EAAc5E,EAAUE,GACxE,IAAI2E,EAAe,EAEnB,GAAIjH,EAAQkH,UACVD,EAAejH,EAAQkH,UAAUF,EAAc5E,EAAUE,GAAOyE,QAC3D,GAAI/G,EAAQmH,QACjBF,EAAejH,EAAQmH,QAAQJ,OAC1B,CACL,MAAMK,EAAiB,UAAYL,EAAK,GAAGM,cAAgBN,EAAKO,MAAM,GAElEtH,EAAQoH,KAEVH,EAAejH,EAAQoH,GAE7B,CAEE,OAAOxE,OAAOqE,IAAiB,CACjC,CASO,SAASM,EAAevH,EAASgH,EAAc5E,EAAUE,GAC9D,MAAO,CACL3F,EAAGqK,EAAarK,EACZmK,EAAmB,OAAQ9G,EAASgH,EAAc5E,EAAUE,GAC5DwE,EAAmB,QAAS9G,EAASgH,EAAc5E,EAAUE,GACjE1F,EAAGoK,EAAapK,EACZkK,EAAmB,MAAO9G,EAASgH,EAAc5E,EAAUE,GAC3DwE,EAAmB,SAAU9G,EAASgH,EAAc5E,EAAUE,GAEtE,CMzFA,MAAMqO,EAIJtR,YAAYoD,GACVtH,KAAKsH,MAAQA,EACbtH,KAAK+N,cAAgB,EACrB/N,KAAKyV,OAA8B,CAAEjU,EAAG,EAAGC,EAAG,GAC9CzB,KAAK8M,IAA2B,CAAEtL,EAAG,EAAGC,EAAG,GAC3CzB,KAAK+M,IAA2B,CAAEvL,EAAG,EAAGC,EAAG,EAC/C,CAOEuL,OAAOe,GACL/N,KAAK+N,cAAgBA,EAEhB/N,KAAKsH,MAAMzG,OAGdb,KAAK0V,YAAY,KACjB1V,KAAK0V,YAAY,KACjB1V,KAAKsH,MAAM1C,KAAKkB,SAAS,aAAc,CAAEwB,MAAOtH,KAAKsH,SAJrDtH,KAAK2V,OAMX,CAOED,YAAYE,GACV,MAAM,KAAEhR,GAAS5E,KAAKsH,MAChBuO,EAAS7V,KAAKsH,MAAe,MAATsO,EAAe,QAAU,UAAY5V,KAAK+N,cAC9D+H,EAAuB,MAATF,EAAe,OAAS,MACtC5J,EAAUL,EACdmK,EACAlR,EAAKC,QACLD,EAAKiH,aACL7L,KAAKsH,MAAMF,KACXpH,KAAKsH,MAAMH,OAGPoF,EAAcvM,KAAKsH,MAAMiF,YAAYqJ,GAI3C5V,KAAKyV,OAAOG,GAAQvI,KAAKiG,OAAO/G,EAAcsJ,GAAU,GAAK7J,EAG7DhM,KAAK8M,IAAI8I,GAASC,EAAStJ,EACvBc,KAAKiG,MAAM/G,EAAcsJ,GAAU7J,EACnChM,KAAKyV,OAAOG,GAGhB5V,KAAK+M,IAAI6I,GAASC,EAAStJ,EACvBP,EACAhM,KAAKyV,OAAOG,EACpB,CAGED,QACE3V,KAAKyV,OAAOjU,EAAI,EAChBxB,KAAKyV,OAAOhU,EAAI,EAChBzB,KAAK8M,IAAItL,EAAI,EACbxB,KAAK8M,IAAIrL,EAAI,EACbzB,KAAK+M,IAAIvL,EAAI,EACbxB,KAAK+M,IAAItL,EAAI,CACjB,CASEsU,WAAWH,EAAMI,GACf,OAAOrC,EAAMqC,EAAWhW,KAAK8M,IAAI8I,GAAO5V,KAAK+M,IAAI6I,GACrD,EL5FA,MAAMvJ,EAAkB,IAaxB,MAAMC,EAOJpI,YAAYW,EAASoC,EAAUE,EAAOvC,GACpC5E,KAAK4E,KAAOA,EACZ5E,KAAK6E,QAAUA,EACf7E,KAAKiH,SAAWA,EAChBjH,KAAKmH,MAAQA,EAEbnH,KAAKuM,YAAc,KAEnBvM,KAAKwM,YAAc,KACnBxM,KAAKyM,IAAM,EACXzM,KAAK0M,KAAO,EACZ1M,KAAK2M,MAAQ,EACb3M,KAAK4M,QAAU,EACf5M,KAAK6M,UAAY,EACjB7M,KAAK8M,IAAM,EACX9M,KAAK+M,IAAM,CACf,CAWEC,OAAOC,EAAUC,EAAWX,GAE1B,MAAMC,EAAc,CAAEhL,EAAGyL,EAAUxL,EAAGyL,GACtClN,KAAKwM,YAAcA,EACnBxM,KAAKuM,YAAcA,EAEnB,MAAMY,EAASZ,EAAY/K,EAAIgL,EAAYhL,EACrC4L,EAASb,EAAY9K,EAAI+K,EAAY/K,EAE3CzB,KAAKyM,IAAMY,KAAKN,IAAI,EAAGI,EAASC,EAASD,EAASC,GAClDpN,KAAK0M,KAAOW,KAAKN,IAAI,EAAGI,EAASC,EAASD,EAASC,GAInDpN,KAAK2M,MAAQU,KAAKN,IAAI,EAAGK,GAEzBpN,KAAK4M,QAAU5M,KAAKsN,cACpBtN,KAAK6M,UAAY7M,KAAKuN,gBACtBvN,KAAK8M,IAAMO,KAAKP,IACd9M,KAAK4M,QACL5M,KAAK6M,UACL7M,KAAKwN,WAGPxN,KAAK+M,IAAMM,KAAKN,IACd/M,KAAKyM,IACLzM,KAAK4M,QACL5M,KAAK6M,WAGH7M,KAAK4E,MACP5E,KAAK4E,KAAKkB,SAAS,mBAAoB,CAAE2H,WAAYzN,KAAM0N,UAAW1N,KAAKiH,UAEjF,CASE0G,sBAAsBC,GACpB,MAAMC,EACJD,EAAe,YAEXE,EAAc9N,KAAK6E,QAAQgJ,GAEjC,GAAKC,EAIL,MAA2B,oBAAhBA,EACFA,EAAY9N,MAGD,SAAhB8N,EACK9N,KAAK0M,KAGM,QAAhBoB,EACK9N,KAAKyM,IAGPhF,OAAOqG,EAClB,CAWEP,gBACE,IAAIQ,EAAgB/N,KAAK2N,sBAAsB,aAE/C,OAAII,IAKJA,EAAgBV,KAAKN,IAAI,EAAc,EAAX/M,KAAKyM,KAE7BzM,KAAKwM,aAAeuB,EAAgB/N,KAAKwM,YAAYhL,EAAI6K,IAC3D0B,EAAgB1B,EAAkBrM,KAAKwM,YAAYhL,GAG9CuM,EACX,CAQET,cACE,OAAOtN,KAAK2N,sBAAsB,YAAc3N,KAAKyM,GACzD,CAUEe,UAGE,OAAOxN,KAAK2N,sBAAsB,QAAUN,KAAKP,IAAI,EAAc,EAAX9M,KAAKyM,IACjE,EM9HA,MAAMwJ,EAMJ/R,YAAYkD,EAAMD,EAAOvC,GACvB5E,KAAKoH,KAAOA,EACZpH,KAAKmH,MAAQA,EACbnH,KAAK4E,KAAOA,EACZ5E,KAAK0J,SAAYvC,IAAUvC,EAAKsR,UAChClW,KAAKmW,kBAAoB,EAEzBnW,KAAKuM,YAAc,CAAE/K,EAAG,EAAGC,EAAG,GAE9BzB,KAAKoW,IAAM,CAAE5U,EAAG,EAAGC,EAAG,GAEtBzB,KAAK2I,aAAgB3I,KAAK0J,WAAa9E,EAAKyR,OAAOC,OAEnDtW,KAAKyN,WAAa,IAAInB,EAAU1H,EAAKC,QAASuC,EAAMD,EAAOvC,GAE3D5E,KAAK4E,KAAKkB,SAAS,cAAe,CAChCwB,MAAOtH,KACPoH,KAAMpH,KAAKoH,KACXD,UAGFnH,KAAK8H,QAAU9H,KAAK4E,KAAKkO,cAAcyD,kBAAkBvW,MACzDA,KAAKmG,UAAYnF,EAAc,kBAAmB,OAElDhB,KAAKkL,cAAgB,KAErBlL,KAAK+N,cAAgB,EAErB/N,KAAKa,MAAQb,KAAK8H,QAAQjH,MAE1Bb,KAAKc,OAASd,KAAK8H,QAAQhH,OAC3Bd,KAAK2J,eAAgB,EACrB3J,KAAKwW,OAAS,IAAIhB,EAAUxV,MAE5BA,KAAKyW,oBAAsB,EAC3BzW,KAAK0W,qBAAuB,EAE5B1W,KAAK4E,KAAKkB,SAAS,YAAa,CAAEwB,MAAOtH,MAC7C,CAOE2W,YAAYjN,GACNA,IAAa1J,KAAK0J,SAEpB1J,KAAKiL,YACKvB,GAAY1J,KAAK0J,UAE3B1J,KAAKmL,YAEX,CAOEvB,OAAOsB,GACLlL,KAAKkL,cAAgBA,EAErBlL,KAAKmG,UAAUnE,MAAM2E,gBAAkB,MAGlC3G,KAAKoH,OAIVpH,KAAK4W,gBAEL5W,KAAKkI,OACLlI,KAAKgJ,oBACLhJ,KAAK6W,cAEL7W,KAAKkL,cAAc5J,YAAYtB,KAAKmG,WAEpCnG,KAAK8W,sBAEL9W,KAAK4E,KAAKkB,SAAS,eAAgB,CAAEwB,MAAOtH,OAE5CA,KAAK+W,sBAEL/W,KAAK4E,KAAKkB,SAAS,kBAAmB,CAAEwB,MAAOtH,OAE3CA,KAAK0J,UACP1J,KAAKiL,WAEX,CAEE/C,OACElI,KAAK8H,QAAQI,MAAK,GAClBlI,KAAK4E,KAAKkB,SAAS,YAAa,CAAEwB,MAAOtH,MAC7C,CAQE6W,cACE,MAAM,KAAEjS,GAAS5E,KACXgX,GAAoB,EAGtBhX,KAAK2J,gBACD/E,EAAKyR,OAAOC,QACb1R,EAAKqS,WAAWC,cACdlX,KAAK0J,WAAasN,GAIvBhX,KAAK4E,KAAKkB,SAAS,cAAe,CAAEwB,MAAOtH,OAAQqE,mBAIvDrE,KAAK2J,eAAgB,EAErB3J,KAAK8H,QAAQ8B,SAEb5J,KAAK4E,KAAKkB,SAAS,qBAAsB,CAAEwB,MAAOtH,OACtD,CAQEiL,WACEjL,KAAK0J,UAAW,EAChB1J,KAAK6W,cACL7W,KAAK8H,QAAQmD,WACbjL,KAAK4E,KAAKkB,SAAS,gBAAiB,CAAEwB,MAAOtH,MACjD,CAOEmL,aACEnL,KAAK0J,UAAW,EAChB1J,KAAK8H,QAAQqD,aAETnL,KAAK+N,gBAAkB/N,KAAKyN,WAAWb,SAEzC5M,KAAK4W,gBAIP5W,KAAKmW,kBAAoB,EACzBnW,KAAK8W,sBACL9W,KAAK+W,sBACL/W,KAAKgJ,oBAELhJ,KAAK4E,KAAKkB,SAAS,kBAAmB,CAAEwB,MAAOtH,MACnD,CAME6G,UACE7G,KAAK8H,QAAQH,UAAW,EACxB3H,KAAK8H,QAAQf,SACb/G,KAAKmG,UAAUY,SACf/G,KAAK4E,KAAKkB,SAAS,eAAgB,CAAEwB,MAAOtH,MAChD,CAEEmX,SACMnX,KAAK+N,gBAAkB/N,KAAKyN,WAAWb,SAAY5M,KAAK0J,UAY1D1J,KAAK4W,gBACL5W,KAAKwW,OAAOxJ,OAAOhN,KAAK+N,eACxB/N,KAAKoX,MAAMpX,KAAKoW,IAAI5U,EAAGxB,KAAKoW,IAAI3U,KAThCzB,KAAK4W,gBACL5W,KAAKmW,kBAAoB,EACzBnW,KAAK8W,sBACL9W,KAAK+W,sBACL/W,KAAKgJ,oBAOX,CASEA,kBAAkBqO,GAGhB,MAAMC,EAAkBtX,KAAKmW,mBAAqBnW,KAAKyN,WAAWb,QAElE,IAAK0K,EACH,OAGF,MAAMzW,EAAQwM,KAAKiG,MAAMtT,KAAKa,MAAQyW,IAAoBtX,KAAK4E,KAAKiH,aAAarK,EAC3EV,EAASuM,KAAKiG,MAAMtT,KAAKc,OAASwW,IAAoBtX,KAAK4E,KAAKiH,aAAapK,GAE9EzB,KAAKuX,YAAY1W,EAAOC,IAAYuW,IAGzCrX,KAAK8H,QAAQpB,iBAAiB7F,EAAOC,EACzC,CAMEyW,YAAY1W,EAAOC,GACjB,OAAID,IAAUb,KAAKyW,oBACZ3V,IAAWd,KAAK0W,uBACrB1W,KAAKyW,mBAAqB5V,EAC1Bb,KAAK0W,oBAAsB5V,GACpB,EAIb,CAGE0W,wBACE,OAAOxX,KAAK8H,QAAQT,aAAajB,OACrC,CAWEqR,OAAOC,EAAeC,EAAaC,EAAoBC,GACrD,MAAM,KAAEjT,GAAS5E,KACjB,IAAKA,KAAKiK,cACHrF,EAAKqS,WAAWC,YACrB,OAGFtS,EAAKkB,SAAS,eAAgB,CAC5B4R,gBAAeC,cAAaC,uBAI9BhT,EAAKkT,WAAWC,aAMhB,MAAMC,EAAgBhY,KAAK+N,cAEtB8J,IACHH,EAAgB/D,EAAM+D,EAAe1X,KAAKyN,WAAWV,IAAK/M,KAAKyN,WAAWX,MAO5E9M,KAAKiY,aAAaP,GAClB1X,KAAKoW,IAAI5U,EAAIxB,KAAKkY,yBAAyB,IAAKP,EAAaK,GAC7DhY,KAAKoW,IAAI3U,EAAIzB,KAAKkY,yBAAyB,IAAKP,EAAaK,GAC7D5E,EAAWpT,KAAKoW,KAEhB,MAAM+B,EAAmBA,KACvBnY,KAAKoY,eAAeV,GACpB1X,KAAK+W,qBAAqB,EAGvBa,EAGHhT,EAAKkT,WAAWO,gBAAgB,CAC9BC,OAAO,EACPvT,KAAM,SACNsM,OAAQrR,KAAKmG,UACbS,UAAW5G,KAAKuY,sBAChBC,WAAYL,EACZnE,SAAU4D,EACVa,OAAQ7T,EAAKC,QAAQ4T,SATvBN,GAYN,CAKEO,WAAWf,GACT3X,KAAKyX,OACHzX,KAAK+N,gBAAkB/N,KAAKyN,WAAWb,QACnC5M,KAAKyN,WAAWZ,UAAY7M,KAAKyN,WAAWb,QAChD+K,EACA3X,KAAK4E,KAAKC,QAAQ8T,sBAExB,CAQEV,aAAalK,GACX/N,KAAK+N,cAAgBA,EACrB/N,KAAKwW,OAAOxJ,OAAOhN,KAAK+N,cAC5B,CAeEmK,yBAAyBtC,EAAMgD,EAAOZ,GACpC,MAAMa,EAAmB7Y,KAAKwW,OAAO1J,IAAI8I,GAAQ5V,KAAKwW,OAAOzJ,IAAI6I,GACjE,GAAyB,IAArBiD,EACF,OAAO7Y,KAAKwW,OAAOf,OAAOG,GAGvBgD,IACHA,EAAQ5Y,KAAK4E,KAAKkU,0BAGfd,IACHA,EAAgBhY,KAAKyN,WAAWb,SAGlC,MAAMmM,EAAa/Y,KAAK+N,cAAgBiK,EACxC,OAAOhY,KAAKwW,OAAOT,WACjBH,GACC5V,KAAKoW,IAAIR,GAAQgD,EAAMhD,IAASmD,EAAaH,EAAMhD,GAE1D,CAQEwB,MAAM4B,EAAMC,GACVjZ,KAAKoW,IAAI5U,EAAIxB,KAAKwW,OAAOT,WAAW,IAAKiD,GACzChZ,KAAKoW,IAAI3U,EAAIzB,KAAKwW,OAAOT,WAAW,IAAKkD,GACzCjZ,KAAK+W,qBACT,CAMEmC,aACE,OAAOC,QAAQnZ,KAAKa,QAAWb,KAAK+N,cAAgB/N,KAAKyN,WAAWhB,GACxE,CAMExC,aACE,OAAOkP,QAAQnZ,KAAKa,QAAUb,KAAK8H,QAAQmC,YAC/C,CAME8M,sBACE/W,KAAKoZ,oBAAoBpZ,KAAKoW,IAAI5U,EAAGxB,KAAKoW,IAAI3U,EAAGzB,KAAK+N,eAClD/N,OAASA,KAAK4E,KAAKyU,WACrBrZ,KAAK4E,KAAKkB,SAAS,gBAAiB,CAAEwB,MAAOtH,MAEnD,CAEE8W,sBACE9W,KAAK+N,cAAgB/N,KAAKyN,WAAWb,QAGrC5M,KAAKwW,OAAOxJ,OAAOhN,KAAK+N,eACxBkF,EAAejT,KAAKoW,IAAKpW,KAAKwW,OAAOf,QACrCzV,KAAK4E,KAAKkB,SAAS,iBAAkB,CAAEwB,MAAOtH,MAClD,CAUEoZ,oBAAoB5X,EAAGC,EAAG6X,GACxBA,GAAQtZ,KAAKmW,mBAAqBnW,KAAKyN,WAAWb,QAClDiH,EAAa7T,KAAKmG,UAAW3E,EAAGC,EAAG6X,EACvC,CAEE1C,gBACE,MAAM,KAAEhS,GAAS5E,KAEjBiT,EACEjT,KAAKuM,YACLH,EAAexH,EAAKC,QAASD,EAAKiH,aAAc7L,KAAKoH,KAAMpH,KAAKmH,QAGlEnH,KAAKyN,WAAWT,OAAOhN,KAAKa,MAAOb,KAAKc,OAAQd,KAAKuM,aAErD3H,EAAKkB,SAAS,gBAAiB,CAC7BwB,MAAOtH,MAEb,CAGEuY,sBACE,MAAM7W,EAAQ1B,KAAK+N,eAAiB/N,KAAKmW,mBAAqBnW,KAAKyN,WAAWb,SAC9E,OAAOrL,EAAkBvB,KAAKoW,IAAI5U,EAAGxB,KAAKoW,IAAI3U,EAAGC,EACrD,CAiBE0W,eAAemB,GACTA,IAAkBvZ,KAAKmW,oBAI3BnW,KAAKmW,kBAAoBoD,EACzBvZ,KAAKgJ,oBAELhJ,KAAK4E,KAAKkB,SAAS,qBACvB,EChfA,MAAM0T,GAAmB,IACnBC,GAAyB,GAGzBC,GAAqB,GAIrBC,GAAuB,GAO7B,SAASC,GAAQC,EAAiBC,GAChC,OAAOD,EAAkBC,GAAoB,EAAIA,EACnD,CAKA,MAAMC,GAIJ7V,YAAY8V,GACVha,KAAKga,SAAWA,EAChBha,KAAK4E,KAAOoV,EAASpV,KAErB5E,KAAKia,SAAW,CAAEzY,EAAG,EAAGC,EAAG,EAC/B,CAEEyY,QACMla,KAAK4E,KAAKyU,WACZpG,EAAejT,KAAKia,SAAUja,KAAK4E,KAAKyU,UAAUjD,KAEpDpW,KAAK4E,KAAKkT,WAAWqC,SACzB,CAEEC,SACE,MAAM,GAAElH,EAAE,OAAEmH,EAAM,SAAEC,GAAata,KAAKga,UAChC,UAAEX,GAAcrZ,KAAK4E,KAE3B,GAAiB,MAAb0V,GACGta,KAAK4E,KAAKC,QAAQ0V,qBACjBlB,GAAaA,EAAUtL,eAAiBsL,EAAU5L,WAAWhB,MAC7DzM,KAAKga,SAASQ,aAAc,CAElC,MAAMvB,EAAOI,EAAUjD,IAAI3U,GAAKyR,EAAGzR,EAAI4Y,EAAO5Y,GAC9C,IAAKzB,KAAK4E,KAAKkB,SAAS,eAAgB,CAAEmT,SAAQ5U,iBAAkB,CAClErE,KAAKya,oBAAoB,IAAKxB,EAAMQ,IACpC,MAAMiB,EAAY,EAAIrN,KAAKmG,IAAIxT,KAAK2a,sBAAsBtB,EAAUjD,IAAI3U,IACxEzB,KAAK4E,KAAKgW,eAAeF,GACzBrB,EAAUtC,qBAClB,CACA,KAAW,CACL,MAAM8D,EAAoB7a,KAAK8a,qBAAqB,KAC/CD,IACH7a,KAAK8a,qBAAqB,KAEtBzB,IACFjG,EAAWiG,EAAUjD,KACrBiD,EAAUtC,uBAGpB,CACA,CAEEgE,MACE,MAAM,SAAEC,GAAahb,KAAKga,UACpB,WAAE/C,EAAU,UAAEoC,GAAcrZ,KAAK4E,KACvC,IAAIqW,EAAY,EAKhB,GAHAjb,KAAK4E,KAAKkT,WAAWqC,UAGjBlD,EAAWC,YAAa,CAE1B,MAAMgE,EAAsBjE,EAAWzV,EAAIyV,EAAWkE,gBAMhDC,EAA+BF,EAAsBlb,KAAK4E,KAAKiH,aAAarK,EAU7EwZ,EAASxZ,GAAKmY,IAAwByB,EAA8B,GACjEJ,EAASxZ,EAAI,IAAO4Z,GAA+B,IAEzDH,EAAY,EACZD,EAASxZ,EAAI6L,KAAKN,IAAIiO,EAASxZ,EAAG,KACxBwZ,EAASxZ,EAAImY,IAAwByB,EAA8B,GACvEJ,EAASxZ,GAAK,IAAO4Z,EAA8B,MAEzDH,GAAa,EACbD,EAASxZ,EAAI6L,KAAKP,IAAIkO,EAASxZ,EAAG,IAGpCyV,EAAWoE,YAAYJ,GAAW,EAAMD,EAASxZ,EACvD,CAGS6X,GAAaA,EAAUtL,cAAgBsL,EAAU5L,WAAWX,KAC1D9M,KAAKga,SAASQ,aACnBxa,KAAKga,SAASvM,WAAW6N,gBAAe,IAMxCtb,KAAKub,yBAAyB,KAC9Bvb,KAAKub,yBAAyB,KAEpC,CAMEA,yBAAyB3F,GACvB,MAAM,SAAEoF,GAAahb,KAAKga,UACpB,UAAEX,GAAcrZ,KAAK4E,KAE3B,IAAKyU,EACH,OAGF,MAAM,IAAEjD,EAAG,OAAEI,GAAW6C,EAClBmC,EAASpF,EAAIR,GACb6F,EAAoBzb,KAAK4E,KAAK8V,UAAY,GAAc,MAAT9E,EAI/CkE,EAAmB,KAGnB4B,EAAoBF,EAAS5B,GAAQoB,EAASpF,GAAOkE,GAE3D,GAAI2B,EAAkB,CACpB,MAAME,EAAa3b,KAAK2a,sBAAsBa,GACxCI,EAAsB5b,KAAK2a,sBAAsBe,GAIvD,GAAKC,EAAa,GAAKC,GAAuBlC,IACtCiC,EAAa,GAAKC,EAAsBlC,GAE9C,YADA1Z,KAAK4E,KAAKiX,OAGlB,CAGI,MAAMC,EAAuBtF,EAAOT,WAAWH,EAAM8F,GAIrD,GAAIF,IAAWM,EACb,OAIF,MAAMC,EAAgBD,IAAyBJ,EAAqB,EAAI,IAElEM,EAAmBhc,KAAK4E,KAAK8V,UAC7BuB,EAAeH,EAAuBN,EAE5Cxb,KAAK4E,KAAKkT,WAAWoE,YAAY,CAC/BnX,KAAM,aAAe6Q,EACrB0C,OAAO,EACP4B,MAAOsB,EACPT,IAAKe,EACLd,SAAUA,EAASpF,GACnBmG,eACAI,SAAWC,IAET,GAAIX,GAAoBzb,KAAK4E,KAAK8V,UAAY,EAAG,CAE/C,MAAM2B,EAAyB,GAAKP,EAAuBM,GAAOH,EAKlEjc,KAAK4E,KAAKgW,eAAejH,EACvBqI,GAAoB,EAAIA,GAAoBK,EAC5C,EACA,GAEZ,CAEQjG,EAAIR,GAAQvI,KAAKiP,MAAMF,GACvB/C,EAAUtC,qBAAqB,GAGvC,CAYE+D,qBAAqBlF,GACnB,MAAM,GAAE1C,EAAE,SAAEoH,EAAQ,OAAED,EAAM,aAAEG,GAAiBxa,KAAKga,UAC9C,UAAEX,EAAS,WAAEpC,GAAejX,KAAK4E,KACjC2X,EAASrJ,EAAG0C,GAAQyE,EAAOzE,GAC3B4G,EAAiBvF,EAAWzV,EAAI+a,EAEtC,IAAKA,IAAUlD,EACb,OAAO,EAIT,GAAa,MAATzD,IAAiByD,EAAUH,eAAiBsB,EAE9C,OADAvD,EAAWwF,OAAOD,GAAgB,IAC3B,EAGT,MAAM,OAAEhG,GAAW6C,EACbqD,EAASrD,EAAUjD,IAAIR,GAAQ2G,EAErC,GAAIvc,KAAK4E,KAAKC,QAAQ8X,gBACF,MAAbrC,GACS,MAAT1E,IACC4E,EAAc,CACpB,MAAMoC,EAAuB3F,EAAWkE,gBAGlCD,EAAsBjE,EAAWzV,EAAIob,EAErCC,EAAgBN,EAAQ,EACxBO,GAAiBD,EAEvB,GAAIH,EAASlG,EAAOzJ,IAAI6I,IAASiH,EAAe,CAM9C,MAAME,EAAuBvG,EAAOzJ,IAAI6I,IAAS5V,KAAKia,SAASrE,GAE/D,GAAImH,EAEF,OADA9F,EAAWwF,OAAOD,GAAgB,IAC3B,EAEPxc,KAAKya,oBAAoB7E,EAAM8G,EAGzC,MAAa,GAAIA,EAASlG,EAAO1J,IAAI8I,IAASkH,EAAe,CAIrD,MAAME,EAAuBhd,KAAKia,SAASrE,IAASY,EAAO1J,IAAI8I,GAE/D,GAAIoH,EAEF,OADA/F,EAAWwF,OAAOD,GAAgB,IAC3B,EAEPxc,KAAKya,oBAAoB7E,EAAM8G,EAGzC,MAEQ,GAA4B,IAAxBxB,EAA2B,CAE7B,GAAIA,EAAsB,EAExB,OADAjE,EAAWwF,OAAOpP,KAAKP,IAAI0P,EAAgBI,IAAuB,IAC3D,EACF,GAAI1B,EAAsB,EAG/B,OADAjE,EAAWwF,OAAOpP,KAAKN,IAAIyP,EAAgBI,IAAuB,IAC3D,CAEnB,MAEU5c,KAAKya,oBAAoB7E,EAAM8G,EAGzC,KACmB,MAAT9G,IAEGqB,EAAWC,aAAeV,EAAOzJ,IAAItL,IAAM+U,EAAO1J,IAAIrL,IAI3DzB,KAAKya,oBAAoB7E,EAAM8G,GAInC,OAAO,CACX,CAgBE/B,sBAAsB1B,GACpB,OAAQA,GAAQjZ,KAAK4E,KAAKyU,WAAW7C,OAAOf,OAAOhU,GAAK,KAAOzB,KAAK4E,KAAKiH,aAAapK,EAAI,EAC9F,CAYEgZ,oBAAoB7E,EAAMqH,EAAcC,GACtC,MAAM,UAAE7D,GAAcrZ,KAAK4E,KAE3B,IAAKyU,EACH,OAGF,MAAM,IAAEjD,EAAG,OAAEI,GAAW6C,EAClB8D,EAAe3G,EAAOT,WAAWH,EAAMqH,GAE7C,GAAIE,IAAiBF,GAAgBC,EAAgB,CACnD,MAAMX,EAAQlP,KAAKiG,MAAM2J,EAAe7G,EAAIR,IAC5CQ,EAAIR,IAAS2G,GAASW,GAAkB1D,GAC9C,MACMpD,EAAIR,GAAQqH,CAElB,EC5VA,MAAMG,GAAsB,IACtBC,GAAsB,IAW5B,SAASC,GAAoBjK,EAAGH,EAAIC,GAGlC,OAFAE,EAAE7R,GAAK0R,EAAG1R,EAAI2R,EAAG3R,GAAK,EACtB6R,EAAE5R,GAAKyR,EAAGzR,EAAI0R,EAAG1R,GAAK,EACf4R,CACT,CAEA,MAAMkK,GAIJrZ,YAAY8V,GACVha,KAAKga,SAAWA,EAKhBha,KAAKwd,UAAY,CAAEhc,EAAG,EAAGC,EAAG,GAK5BzB,KAAKyd,gBAAkB,CAAEjc,EAAG,EAAGC,EAAG,GAKlCzB,KAAK0d,WAAa,CAAElc,EAAG,EAAGC,EAAG,GAE7BzB,KAAK2d,sBAAuB,EAE5B3d,KAAK4d,gBAAkB,CAC3B,CAEE1D,QACE,MAAM,UAAEb,GAAcrZ,KAAKga,SAASpV,KAChCyU,IACFrZ,KAAK4d,gBAAkBvE,EAAUtL,cACjCkF,EAAejT,KAAKwd,UAAWnE,EAAUjD,MAG3CpW,KAAKga,SAASpV,KAAKkT,WAAWC,aAC9B/X,KAAK2d,sBAAuB,CAChC,CAEEvD,SACE,MAAM,GAAElH,EAAE,QAAE2K,EAAO,GAAE1K,EAAE,QAAE2K,EAAO,KAAElZ,GAAS5E,KAAKga,UAC1C,UAAEX,GAAczU,EAEtB,IAAKyU,EACH,OAGF,MAAM0E,EAAe1E,EAAU5L,WAAWV,IACpCiR,EAAe3E,EAAU5L,WAAWX,IAE1C,IAAKuM,EAAUpP,cAAgBrF,EAAKqS,WAAWC,YAC7C,OAGFoG,GAAoBtd,KAAKyd,gBAAiBI,EAASC,GACnDR,GAAoBtd,KAAK0d,WAAYxK,EAAIC,GAEzC,IAAIpF,EAAiB,EAAIwF,EAAmBsK,EAASC,GACjCvK,EAAmBL,EAAIC,GACvBnT,KAAK4d,gBAOzB,GAJI7P,EAAgBsL,EAAU5L,WAAWb,QAAWyM,EAAU5L,WAAWb,QAAU,KACjF5M,KAAK2d,sBAAuB,GAG1B5P,EAAgBgQ,EAClB,GAAInZ,EAAKC,QAAQoZ,eACTje,KAAK2d,sBACN3d,KAAK4d,iBAAmBvE,EAAU5L,WAAWb,QAAS,CAE3D,MAAM8N,EAAY,GAAMqD,EAAehQ,IAAkBgQ,EAAe,KACnEnZ,EAAKkB,SAAS,aAAc,CAAE4U,cAAarW,kBAC9CO,EAAKgW,eAAeF,EAE9B,MAEQ3M,EAAgBgQ,GAAgBA,EAAehQ,GAAiBsP,QAEzDtP,EAAgBiQ,IAEzBjQ,EAAgBiQ,GAAgBjQ,EAAgBiQ,GAAgBZ,IAGlE/D,EAAUjD,IAAI5U,EAAIxB,KAAKke,0BAA0B,IAAKnQ,GACtDsL,EAAUjD,IAAI3U,EAAIzB,KAAKke,0BAA0B,IAAKnQ,GAEtDsL,EAAUpB,aAAalK,GACvBsL,EAAUtC,qBACd,CAEEgE,MACE,MAAM,KAAEnW,GAAS5E,KAAKga,UAChB,UAAEX,GAAczU,IAChByU,GAAaA,EAAUtL,cAAgBsL,EAAU5L,WAAWb,WAC1D5M,KAAK2d,sBACN/Y,EAAKC,QAAQoZ,aAClBrZ,EAAKiX,QAEL7b,KAAKsb,gBAEX,CAQE4C,0BAA0BtI,EAAM7H,GAC9B,MAAMgL,EAAahL,EAAgB/N,KAAK4d,gBACxC,OAAO5d,KAAK0d,WAAW9H,IACX5V,KAAKyd,gBAAgB7H,GAAQ5V,KAAKwd,UAAU5H,IAASmD,CACrE,CAUEuC,eAAe6C,GACb,MAAM,KAAEvZ,GAAS5E,KAAKga,UAChB,UAAEX,GAAczU,EAEtB,IAAKyU,GAAWpP,aACd,OAGwB,IAAtBjK,KAAK0d,WAAWlc,IAClB2c,GAAgB,GAGlB,MAAMnG,EAAgBqB,EAAUtL,cAGhC,IAAIqQ,EACAC,GAA2B,EAE3BrG,EAAgBqB,EAAU5L,WAAWb,QACvCwR,EAAuB/E,EAAU5L,WAAWb,QAEnCoL,EAAgBqB,EAAU5L,WAAWX,IAC9CsR,EAAuB/E,EAAU5L,WAAWX,KAG5CuR,GAA2B,EAC3BD,EAAuBpG,GAGzB,MAAMgE,EAAmBpX,EAAK8V,UACxBe,EAAmB7W,EAAK8V,UAAY,EAEpC4D,EAAarL,EAAe,CAAEzR,EAAG,EAAGC,EAAG,GAAK4X,EAAUjD,KAC5D,IAAImI,EAAiBtL,EAAe,CAAEzR,EAAG,EAAGC,EAAG,GAAK6c,GAEhDH,IACFne,KAAK0d,WAAWlc,EAAI,EACpBxB,KAAK0d,WAAWjc,EAAI,EACpBzB,KAAKyd,gBAAgBjc,EAAI,EACzBxB,KAAKyd,gBAAgBhc,EAAI,EACzBzB,KAAK4d,gBAAkB5F,EACvB/E,EAAejT,KAAKwd,UAAWc,IAG7BD,IACFE,EAAiB,CACf/c,EAAGxB,KAAKke,0BAA0B,IAAKE,GACvC3c,EAAGzB,KAAKke,0BAA0B,IAAKE,KAK3C/E,EAAUpB,aAAamG,GAEvBG,EAAiB,CACf/c,EAAG6X,EAAU7C,OAAOT,WAAW,IAAKwI,EAAe/c,GACnDC,EAAG4X,EAAU7C,OAAOT,WAAW,IAAKwI,EAAe9c,IAIrD4X,EAAUpB,aAAaD,GAEvB,MAAMwG,GAAkB9K,EAAY6K,EAAgBD,GAEpD,IAAKE,IAAmBH,IAA6B5C,EAMnD,OAJApC,EAAUjB,eAAegG,QACzB/E,EAAUtC,sBAMZnS,EAAKkT,WAAWC,aAEhBnT,EAAKkT,WAAWoE,YAAY,CAC1B5D,OAAO,EACP4B,MAAO,EACPa,IAAK,IACLC,SAAU,EACVe,aAAc,EACd0C,iBAAkB,GAClBtC,SAAWuC,IAGT,GAFAA,GAAO,IAEHF,GAAkBH,EAA0B,CAM9C,GALIG,IACFnF,EAAUjD,IAAI5U,EAAI8c,EAAW9c,GAAK+c,EAAe/c,EAAI8c,EAAW9c,GAAKkd,EACrErF,EAAUjD,IAAI3U,EAAI6c,EAAW7c,GAAK8c,EAAe9c,EAAI6c,EAAW7c,GAAKid,GAGnEL,EAA0B,CAC5B,MAAMM,EAAe3G,GACNoG,EAAuBpG,GAAiB0G,EACvDrF,EAAUpB,aAAa0G,EACnC,CAEUtF,EAAUtC,qBACpB,CAGY0E,GAAoB7W,EAAK8V,UAAY,GAIvC9V,EAAKgW,eAAejH,EAClBqI,GAAoB,EAAIA,GAAoB0C,EAAK,EAAG,GAEhE,EAEMlG,WAAYA,KAEVa,EAAUjB,eAAegG,GACzB/E,EAAUtC,qBAAqB,GAGvC,ECrPA,SAAS6H,GAAoB7Y,GAC3B,QAAsCA,EAAMsL,OAAQwN,QAAQ,mBAC9D,CAKA,MAAMC,GAIJ5a,YAAY8V,GACVha,KAAKga,SAAWA,CACpB,CAME+E,MAAMnG,EAAOoG,GACX,MAAMC,EAA8CD,EAAc3N,OAAQ6N,UACpEC,EAAeF,EAAgBvN,SAAS,aACxC0N,EAAoBH,EAAgBvN,SAAS,eACtBuN,EAAgBvN,SAAS,mBAElDyN,EACFnf,KAAKqf,oBAAoB,aAAczG,EAAOoG,GACrCI,GACTpf,KAAKqf,oBAAoB,UAAWzG,EAAOoG,EAEjD,CAMEM,IAAI1G,EAAOoG,GACLJ,GAAoBI,IACtBhf,KAAKqf,oBAAoB,MAAOzG,EAAOoG,EAE7C,CAMEO,UAAU3G,EAAOoG,GACXJ,GAAoBI,IACtBhf,KAAKqf,oBAAoB,YAAazG,EAAOoG,EAEnD,CAQEK,oBAAoBG,EAAY5G,EAAOoG,GACrC,MAAM,KAAEpa,GAAS5E,KAAKga,UAChB,UAAEX,GAAczU,EAChB6a,EAA+DD,EAAa,SAC5E1R,EAAclJ,EAAKC,QAAQ4a,GAEjC,IAAI7a,EAAKkB,SAAS2Z,EAAgB,CAAE7G,QAAOoG,kBAAiB3a,iBAI5D,GAA2B,oBAAhByJ,EAKX,OAAQA,GACN,IAAK,QACL,IAAK,OACHlJ,EAAKkJ,KACL,MACF,IAAK,OACHuL,GAAWX,WAAWE,GACtB,MACF,IAAK,gBAGCS,GAAWpP,cACRoP,EAAU5L,WAAWZ,YAAcwM,EAAU5L,WAAWb,QAC7DyM,EAAUX,WAAWE,GACZhU,EAAKC,QAAQ6a,yBACtB9a,EAAKiX,QAEP,MACF,IAAK,kBACH7b,KAAKga,SAASpV,KAAKwB,SAAS8Y,UAAUS,OAAO,oBAM7C,WA7BF7R,EAAY9H,KAAKpB,EAAMgU,EAAOoG,EA+BpC,ECzGA,MAAMY,GAAwB,GAGxBC,GAAmB,IACnBC,GAAmB,GASzB,MAAMC,GAIJ7b,YAAYU,GACV5E,KAAK4E,KAAOA,EAGZ5E,KAAKsa,SAAW,KAKhBta,KAAKkT,GAAK,CAAE1R,EAAG,EAAGC,EAAG,GAErBzB,KAAKmT,GAAK,CAAE3R,EAAG,EAAGC,EAAG,GAErBzB,KAAKqa,OAAS,CAAE7Y,EAAG,EAAGC,EAAG,GAEzBzB,KAAKggB,OAAS,CAAExe,EAAG,EAAGC,EAAG,GAEzBzB,KAAK6d,QAAU,CAAErc,EAAG,EAAGC,EAAG,GAE1BzB,KAAK8d,QAAU,CAAEtc,EAAG,EAAGC,EAAG,GAE1BzB,KAAKgb,SAAW,CAAExZ,EAAG,EAAGC,EAAG,GAK3BzB,KAAKigB,aAAe,CAAEze,EAAG,EAAGC,EAAG,GAI/BzB,KAAKkgB,YAAc,CAAE1e,EAAG,EAAGC,EAAG,GAE9BzB,KAAKmgB,iBAAmB,EAIxBngB,KAAKogB,iBAAmB,GAExBpgB,KAAKqgB,mBAAqB,iBAAkB5U,OAE5CzL,KAAKsgB,uBAA0B7U,OAAO8U,aACtCvgB,KAAKwgB,cAAgBxgB,KAAKqgB,oBACArgB,KAAKsgB,sBAAwBxc,UAAU2c,eAAiB,EAElFzgB,KAAKmgB,iBAAmB,EAExBngB,KAAK0gB,cAAgB,EAErB1gB,KAAK2gB,qBAAsB,EAC3B3gB,KAAKwa,cAAe,EACpBxa,KAAK4gB,YAAa,EAClB5gB,KAAK6gB,WAAY,EAEjB7gB,KAAK8gB,IAAM,KAIX9gB,KAAK+gB,UAAY,KAEZ/gB,KAAKwgB,gBAER5b,EAAKC,QAAQ8X,gBAAiB,GAGhC3c,KAAKghB,KAAO,IAAIjH,GAAY/Z,MAC5BA,KAAKyN,WAAa,IAAI8P,GAAYvd,MAClCA,KAAKihB,WAAa,IAAInC,GAAW9e,MAEjC4E,EAAKe,GAAG,cAAc,KACpBf,EAAKsc,OAAOtM,IACVhQ,EAAKuc,WACL,QAC2BnhB,KAAKohB,SAAS7Q,KAAKvQ,OAG5CA,KAAKsgB,qBACPtgB,KAAKqhB,YAAY,UAAW,OAAQ,KAAM,UACjCrhB,KAAKqgB,oBACdrgB,KAAKqhB,YAAY,QAAS,QAAS,MAAO,UAUtCzc,EAAKuc,aACPvc,EAAKuc,WAAWG,YAAc,OAC9B1c,EAAKuc,WAAWI,WAAa,SAG/BvhB,KAAKqhB,YAAY,QAAS,OAAQ,KAC1C,GAEA,CASEA,YAAYG,EAAMC,EAAMC,EAAIC,GAC1B,MAAM,KAAE/c,GAAS5E,MACX,OAAEkhB,GAAWtc,EAEbgd,EAAcD,EAASH,EAAOG,EAAS,GAE7CT,EAAOtM,IACLhQ,EAAKuc,WACLK,EAAOC,EACoBzhB,KAAK6hB,cAActR,KAAKvQ,OAErDkhB,EAAOtM,IAAInJ,OAAQ+V,EAAO,OAAmCxhB,KAAK8hB,cAAcvR,KAAKvQ,OACrFkhB,EAAOtM,IAAInJ,OAAQ+V,EAAOE,EAA+B1hB,KAAK+hB,YAAYxR,KAAKvQ,OAC3E4hB,GACFV,EAAOtM,IACLhQ,EAAKuc,WACLS,EAC2B5hB,KAAK+hB,YAAYxR,KAAKvQ,MAGzD,CAKE6hB,cAActf,GAOZ,MAAMyf,EAA4B,cAAXzf,EAAE4B,MAA0C,UAAlB5B,EAAE0f,YAKnD,GAAID,GAAkBzf,EAAEC,OAAS,EAC/B,OAGF,MAAM,KAAEoC,GAAS5E,KAGZ4E,EAAKyR,OAAOC,OAKb1R,EAAKkB,SAAS,cAAe,CAAEkZ,cAAezc,IAAK8B,mBAInD2d,IACFpd,EAAKsd,gBAILliB,KAAKmiB,8BAA8B5f,IAGrCqC,EAAKkT,WAAWqC,UAEhBna,KAAKoiB,cAAc7f,EAAG,QAEQ,IAA1BvC,KAAKmgB,mBACPngB,KAAKsa,SAAW,KAGhBrH,EAAejT,KAAK6d,QAAS7d,KAAKkT,KAGhClT,KAAKmgB,iBAAmB,GAE1BngB,KAAKqiB,iBACLriB,KAAKwa,cAAe,GAEpBxa,KAAKwa,cAAe,GAhCpBjY,EAAEiC,gBAkCR,CAKEsd,cAAcvf,GACZA,EAAEiC,iBAEGxE,KAAKmgB,mBAIVngB,KAAKoiB,cAAc7f,EAAG,QAElBvC,KAAK4E,KAAKkB,SAAS,cAAe,CAAEkZ,cAAezc,IAAK8B,mBAI9B,IAA1BrE,KAAKmgB,kBAA2BngB,KAAK4gB,WA4B9B5gB,KAAKmgB,iBAAmB,IAAMngB,KAAK6gB,YAC5C7gB,KAAKsiB,cAELtiB,KAAK6gB,WAAY,EAGjB7gB,KAAKuiB,qBAELviB,KAAKyN,WAAWyM,QAEhBla,KAAKwiB,eACLxiB,KAAKyiB,mBAtCAziB,KAAKsa,UACRta,KAAK0iB,0BAIH1iB,KAAKsa,WAAata,KAAK4gB,aACrB5gB,KAAK6gB,YACP7gB,KAAK6gB,WAAY,EACjB7gB,KAAKyN,WAAWsN,OAGlB/a,KAAK4gB,YAAa,EAClB5gB,KAAKqiB,iBAGLriB,KAAKuiB,qBACLviB,KAAK0gB,cAAgBiC,KAAKjE,MAE1B1e,KAAK2gB,qBAAsB,EAC3B1N,EAAejT,KAAKkgB,YAAalgB,KAAKkT,IACtClT,KAAKgb,SAASxZ,EAAI,EAClBxB,KAAKgb,SAASvZ,EAAI,EAClBzB,KAAKghB,KAAK9G,QAEVla,KAAKwiB,eACLxiB,KAAKyiB,oBAeb,CAKEH,cACMtiB,KAAK4gB,aACP5gB,KAAK4gB,YAAa,EAIb5gB,KAAK2gB,qBACR3gB,KAAK4iB,iBAAgB,GAGvB5iB,KAAKghB,KAAKjG,MACV/a,KAAKsa,SAAW,KAEtB,CAKEyH,YAAYxf,GACLvC,KAAKmgB,mBAIVngB,KAAKoiB,cAAc7f,EAAG,MAElBvC,KAAK4E,KAAKkB,SAAS,YAAa,CAAEkZ,cAAezc,IAAK8B,mBAI5B,IAA1BrE,KAAKmgB,mBACPngB,KAAKwiB,eAEDxiB,KAAK4gB,WACP5gB,KAAKsiB,cACKtiB,KAAK6gB,WAAc7gB,KAAKwa,cAElCxa,KAAK6iB,WAAWtgB,IAIhBvC,KAAKmgB,iBAAmB,GAAKngB,KAAK6gB,YACpC7gB,KAAK6gB,WAAY,EACjB7gB,KAAKyN,WAAWsN,MAEc,IAA1B/a,KAAKmgB,mBAEPngB,KAAKsa,SAAW,KAChBta,KAAKuiB,wBAGb,CAKEE,kBACMziB,KAAK4gB,YAAc5gB,KAAK6gB,aAC1B7gB,KAAK4iB,kBAED5iB,KAAK4gB,WAEFlN,EAAY1T,KAAKkT,GAAIlT,KAAKqa,SAC7Bra,KAAKghB,KAAK5G,SAGP1G,EAAY1T,KAAKkT,GAAIlT,KAAKqa,SACvB3G,EAAY1T,KAAKmT,GAAInT,KAAKggB,SAChChgB,KAAKyN,WAAW2M,SAIpBpa,KAAK8iB,oBACL9iB,KAAK8gB,IAAMiC,sBAAsB/iB,KAAKyiB,eAAelS,KAAKvQ,OAEhE,CAQE4iB,gBAAgBvL,GACd,MAAM2L,EAAOL,KAAKjE,MACZ1K,EAAWgP,EAAOhjB,KAAK0gB,cAEzB1M,EAAW,KAAOqD,IAKtBrX,KAAKgb,SAASxZ,EAAIxB,KAAKijB,aAAa,IAAKjP,GACzChU,KAAKgb,SAASvZ,EAAIzB,KAAKijB,aAAa,IAAKjP,GAEzChU,KAAK0gB,cAAgBsC,EACrB/P,EAAejT,KAAKkgB,YAAalgB,KAAKkT,IACtClT,KAAK2gB,qBAAsB,EAC/B,CAMEkC,WAAWtgB,GACT,MAAM,WAAE0U,GAAejX,KAAK4E,KAG5B,GAAIqS,EAAWC,YAIb,YADAD,EAAWoE,YAAY,GAAG,GAK5B,GAAI9Y,EAAE4B,KAAK+e,QAAQ,UAAY,EAC7B,OAIF,GAAe,YAAX3gB,EAAE4B,MAAwC,UAAlB5B,EAAE0f,YAE5B,YADAjiB,KAAKihB,WAAWlC,MAAM/e,KAAK6d,QAAStb,GAKtC,MAAM4gB,EAAWnjB,KAAK4E,KAAKC,QAAQue,gBAAkBvD,GAAmB,EAKpE7f,KAAK+gB,WACP/gB,KAAKqiB,iBAED9O,EAAmBvT,KAAKigB,aAAcjgB,KAAK6d,SAAWiC,IACxD9f,KAAKihB,WAAW1B,UAAUvf,KAAK6d,QAAStb,KAG1C0Q,EAAejT,KAAKigB,aAAcjgB,KAAK6d,SACvC7d,KAAK+gB,UAAY9Y,YAAW,KAC1BjI,KAAKihB,WAAW3B,IAAItf,KAAK6d,QAAStb,GAClCvC,KAAKqiB,gBAAgB,GACpBc,GAET,CAKEd,iBACMriB,KAAK+gB,YACPsC,aAAarjB,KAAK+gB,WAClB/gB,KAAK+gB,UAAY,KAEvB,CAUEkC,aAAarN,EAAM5B,GAEjB,MAAMsP,EAAetjB,KAAKkT,GAAG0C,GAAQ5V,KAAKkgB,YAAYtK,GAEtD,OAAIvI,KAAKmG,IAAI8P,GAAgB,GAAKtP,EAAW,EACpCsP,EAAetP,EAGjB,CACX,CAKEwO,eACMxiB,KAAK8gB,MACPyC,qBAAqBvjB,KAAK8gB,KAC1B9gB,KAAK8gB,IAAM,KAEjB,CAMEqB,8BAA8B5f,GAG5BA,EAAEiC,gBACN,CAUE4d,cAAc7f,EAAG0f,GACf,GAAIjiB,KAAKsgB,qBAAsB,CAC7B,MAAMkD,EAA4CjhB,EAE5CkhB,EAAezjB,KAAKogB,iBAAiB5O,WAAWkS,GAC7CA,EAAenjB,KAAOijB,EAAaG,YAGxB,OAAhB1B,GAAwBwB,GAAgB,EAE1CzjB,KAAKogB,iBAAiBwD,OAAOH,EAAc,GAClB,SAAhBxB,IAA4C,IAAlBwB,EAEnCzjB,KAAKogB,iBAAiBnb,KAAKjF,KAAK6jB,wBAAwBL,EAAc,CAAEhiB,EAAG,EAAGC,EAAG,KACxEgiB,GAAgB,GAEzBzjB,KAAK6jB,wBAAwBL,EAAcxjB,KAAKogB,iBAAiBqD,IAGnEzjB,KAAKmgB,iBAAmBngB,KAAKogB,iBAAiB1R,OAI1C1O,KAAKmgB,iBAAmB,GAC1BlN,EAAejT,KAAKkT,GAAIlT,KAAKogB,iBAAiB,IAG5CpgB,KAAKmgB,iBAAmB,GAC1BlN,EAAejT,KAAKmT,GAAInT,KAAKogB,iBAAiB,GAEtD,KAAW,CACL,MAAM0D,EAAwCvhB,EAE9CvC,KAAKmgB,iBAAmB,EACpB2D,EAAW3f,KAAK+e,QAAQ,UAAY,EAGlCY,EAAWC,SAAWD,EAAWC,QAAQrV,OAAS,IACpD1O,KAAK6jB,wBAAwBC,EAAWC,QAAQ,GAAI/jB,KAAKkT,IACzDlT,KAAKmgB,mBACD2D,EAAWC,QAAQrV,OAAS,IAC9B1O,KAAK6jB,wBAAwBC,EAAWC,QAAQ,GAAI/jB,KAAKmT,IACzDnT,KAAKmgB,sBAKTngB,KAAK6jB,wBAAqDthB,EAAIvC,KAAKkT,IAC/C,OAAhB+O,EAEFjiB,KAAKmgB,iBAAmB,EAExBngB,KAAKmgB,mBAGf,CACA,CAKE2C,oBACE7P,EAAejT,KAAKqa,OAAQra,KAAKkT,IACjCD,EAAejT,KAAKggB,OAAQhgB,KAAKmT,GACrC,CAKEoP,qBACEtP,EAAejT,KAAK6d,QAAS7d,KAAKkT,IAClCD,EAAejT,KAAK8d,QAAS9d,KAAKmT,IAClCnT,KAAK8iB,mBACT,CAGEJ,0BACE,GAAI1iB,KAAK4E,KAAKqS,WAAWC,YAEvBlX,KAAKsa,SAAW,QACX,CAEL,MAAM0J,EAAO3W,KAAKmG,IAAIxT,KAAKkT,GAAG1R,EAAIxB,KAAK6d,QAAQrc,GAAK6L,KAAKmG,IAAIxT,KAAKkT,GAAGzR,EAAIzB,KAAK6d,QAAQpc,GAEtF,GAAa,IAATuiB,EAAY,CAEd,MAAMC,EAAcD,EAAO,EAAI,IAAM,IAEjC3W,KAAKmG,IAAIxT,KAAKkT,GAAG+Q,GAAejkB,KAAK6d,QAAQoG,KAAiBrE,KAChE5f,KAAKsa,SAAW2J,EAE1B,CACA,CACA,CAWEJ,wBAAwBthB,EAAG8Q,GAUzB,OATAA,EAAE7R,EAAIe,EAAE2hB,MAAQlkB,KAAK4E,KAAKuf,OAAO3iB,EACjC6R,EAAE5R,EAAIc,EAAE6hB,MAAQpkB,KAAK4E,KAAKuf,OAAO1iB,EAE7B,cAAec,EACjB8Q,EAAE9S,GAAKgC,EAAEohB,eACiB/hB,IAAjBW,EAAE8hB,aACXhR,EAAE9S,GAAKgC,EAAE8hB,YAGJhR,CACX,CAME+N,SAAS7e,GAEHvC,KAAK4E,KAAKqS,WAAWC,cACvB3U,EAAEiC,iBACFjC,EAAE+hB,kBAER,ECtlBA,MAAMC,GAA2B,IAajC,MAAMC,GAIJtgB,YAAYU,GACV5E,KAAK4E,KAAOA,EACZ5E,KAAKwB,EAAI,EACTxB,KAAKykB,WAAa,EAElBzkB,KAAK0kB,mBAAqB,EAE1B1kB,KAAK2kB,mBAAqB,EAE1B3kB,KAAK4kB,sBAAwB,EAG7B5kB,KAAK6kB,YAAc,EACvB,CAQE1N,OAAO2N,GACL,MAAM,KAAElgB,GAAS5E,KACX+kB,EAAgB1X,KAAKiG,MACzB1O,EAAKiH,aAAarK,EAAIoD,EAAKiH,aAAarK,EAAIoD,EAAKC,QAAQmgB,SAKrDC,EAAqBF,IAAkB/kB,KAAKykB,WAE9CQ,IACFjlB,KAAKykB,WAAaM,EAClB/kB,KAAKyc,OAAOzc,KAAKmb,kBAGnBnb,KAAK6kB,YAAYpf,SAAQ,CAACyf,EAAY/d,KAChC8d,GACFpR,EAAaqR,EAAW9jB,IAAK+F,EAAQnH,KAAK4kB,sBACZ5kB,KAAKykB,YAGjCK,GAAgBI,EAAW5d,OAC7B4d,EAAW5d,MAAM6P,QACzB,GAEA,CAKEgO,gBAGEnlB,KAAK0kB,mBAAqB,EAC1B1kB,KAAK2kB,mBAAqB,EAG1B3kB,KAAKykB,WAAa,EAGlBzkB,KAAK4kB,sBAAwB,CACjC,CAMEQ,gBACEplB,KAAK6kB,YAAc,GAInB,IAAK,IAAIQ,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAMjkB,EAAKJ,EAAc,aAAc,MAAOhB,KAAK4E,KAAKuB,WACxD/E,EAAGqF,aAAa,OAAQ,SACxBrF,EAAGqF,aAAa,uBAAwB,SACxCrF,EAAGqF,aAAa,cAAe,QAG/BrF,EAAGY,MAAMsjB,QAAiB,IAAND,EAAW,QAAU,OAEzCrlB,KAAK6kB,YAAY5f,KAAK,CACpB7D,MAGR,CACA,CAMEmkB,cACE,OAAOvlB,KAAK4E,KAAK2J,cAAgB,CACrC,CAiBE8M,YAAY2I,EAAMwB,EAASC,GACzB,MAAM,KAAE7gB,GAAS5E,KACjB,IAAI0lB,EAAW9gB,EAAK+gB,eAAiB3B,EACrC,MAAM4B,EAAYhhB,EAAK2J,cAEvB,GAAI3J,EAAKihB,UAAW,CAClBH,EAAW9gB,EAAKkhB,eAAeJ,GAC/B,MAAMK,GAAY/B,EAAO4B,GAAaA,EAGpC5B,EAFE+B,GAAYH,EAAY,EAEnBG,EAGAA,EAAWH,CAE1B,MACUF,EAAW,EACbA,EAAW,EACFA,GAAYE,IACrBF,EAAWE,EAAY,GAEzB5B,EAAO0B,EAAW9gB,EAAK+gB,eAGzB/gB,EAAK+gB,eAAiBD,EACtB1lB,KAAK0kB,oBAAsBV,EAE3Bpf,EAAKkT,WAAWkO,iBAEhB,MAAMC,EAAejmB,KAAKmb,gBAC1B,GAAKqK,EAGE,CACL5gB,EAAKkT,WAAWoE,YAAY,CAC1BgK,cAAc,EACdhM,MAAOla,KAAKwB,EACZuZ,IAAKkL,EACLjL,SAAUyK,GAAa,EACvBhH,iBAAkB,GAClB1C,aAAc,EACdI,SAAW3a,IACTxB,KAAKyc,OAAOjb,EAAE,EAEhBgX,WAAYA,KACVxY,KAAKmmB,iBACLvhB,EAAKiS,aAAa,IAItB,IAAIuP,EAAWxhB,EAAK+gB,eAAiB/gB,EAAKsR,UAC1C,GAAItR,EAAKihB,UAAW,CAClB,MAAMQ,GAAgBD,EAAWR,GAAaA,EAG5CQ,EAFEC,GAAgBT,EAAY,EAEnBS,EAGAA,EAAeT,CAEpC,CAIUvY,KAAKmG,IAAI4S,GAAY,GACvBpmB,KAAKmmB,gBAEb,MApCMnmB,KAAKyc,OAAOwJ,GACZjmB,KAAKmmB,iBAqCP,OAAOhN,QAAQ6K,EACnB,CAOE7I,gBACE,OAAOnb,KAAKykB,WAAazkB,KAAK0kB,kBAClC,CAOExN,YACE,OAAOlX,KAAKwB,IAAMxB,KAAKmb,eAC3B,CAKEgL,iBACE,MAAM,KAAEvhB,GAAS5E,KACXsmB,EAAqBtmB,KAAK2kB,mBAAqB3kB,KAAK0kB,mBAE1D,IAAK4B,EACH,OAGFtmB,KAAK2kB,mBAAqB3kB,KAAK0kB,mBAE/B9f,EAAKsR,UAAYtR,EAAK+gB,eAEtB,IAEIY,EAFAC,EAAUnZ,KAAKmG,IAAI8S,GAInBE,GAAW,IACbxmB,KAAK4kB,sBAAwB0B,GAAsBA,EAAqB,GAAK,EAAI,GACjFE,EAAU,GAGZ,IAAK,IAAInB,EAAI,EAAGA,EAAImB,EAASnB,IACvBiB,EAAqB,GACvBC,EAAavmB,KAAK6kB,YAAY4B,QAC1BF,IACFvmB,KAAK6kB,YAAY,GAAK0B,EAEtBvmB,KAAK4kB,uBAEL/Q,EAAa0S,EAAWnlB,IAAKpB,KAAK4kB,qBAAuB,GAAK5kB,KAAKykB,YAEnE7f,EAAK8hB,WAAWH,EAAa3hB,EAAKsR,UAAYsQ,EAAWnB,EAAI,MAG/DkB,EAAavmB,KAAK6kB,YAAY8B,MAC1BJ,IACFvmB,KAAK6kB,YAAY+B,QAAQL,GAEzBvmB,KAAK4kB,uBAEL/Q,EAAa0S,EAAWnlB,GAAIpB,KAAK4kB,qBAAuB5kB,KAAKykB,YAE7D7f,EAAK8hB,WAAWH,EAAa3hB,EAAKsR,UAAYsQ,EAAWnB,EAAI,KAW/DhY,KAAKmG,IAAIxT,KAAK4kB,sBAAwB,KAAO5kB,KAAKkX,cACpDlX,KAAKmlB,gBACLnlB,KAAKmX,UAIPvS,EAAKkT,WAAWC,aAEhB/X,KAAK6kB,YAAYpf,SAAQ,CAACyf,EAAYG,KAChCH,EAAW5d,OAEb4d,EAAW5d,MAAMqP,YAAkB,IAAN0O,EACrC,IAGIzgB,EAAKyU,UAAYrZ,KAAK6kB,YAAY,IAAIvd,MACtC1C,EAAKkO,cAAc+T,WAAWP,GAE1B1hB,EAAKyU,WACPzU,EAAKyU,UAAUtC,sBAGjBnS,EAAKkB,SAAS,SAClB,CAQE2W,OAAOjb,EAAGslB,GACR,IAAK9mB,KAAK4E,KAAKihB,WAAaiB,EAAU,CAEpC,IAAIC,GAAwB/mB,KAAKykB,WAAazkB,KAAK0kB,mBAAsBljB,GAAKxB,KAAKykB,WACnFsC,GAAuB/mB,KAAK4E,KAAKsR,UACjC,MAAMqG,EAAQlP,KAAKiG,MAAM9R,EAAIxB,KAAKwB,IAE7BulB,EAAsB,GAAKxK,EAAQ,GAChCwK,GAAuB/mB,KAAK4E,KAAK2J,cAAgB,GAAKgO,EAAQ,KACpE/a,EAAIxB,KAAKwB,EAAK+a,EAAQgI,GAE9B,CAEIvkB,KAAKwB,EAAIA,EAELxB,KAAK4E,KAAKuB,WACZ0N,EAAa7T,KAAK4E,KAAKuB,UAAW3E,GAGpCxB,KAAK4E,KAAKkB,SAAS,iBAAkB,CAAEtE,IAAGslB,SAAUA,IAAY,GACpE,ECvUA,MAAME,GAAsB,CAC1BC,OAAQ,GACRC,EAAG,GACHC,UAAW,GACXC,QAAS,GACTC,WAAY,GACZC,UAAW,GACXC,IAAK,GASDC,GAAsBA,CAAC7mB,EAAK8mB,IACzBA,EAAiB9mB,EAAMqmB,GAAoBrmB,GAOpD,MAAM+mB,GAIJxjB,YAAYU,GACV5E,KAAK4E,KAAOA,EAEZ5E,KAAK2nB,aAAc,EAEnB/iB,EAAKe,GAAG,cAAc,KAEff,EAAKC,QAAQ8M,mBAIhB3R,KAAK4nB,aAGPhjB,EAAKsc,OAAOtM,IAAIvT,SAAU,UAAsCrB,KAAK6nB,WAAWtX,KAAKvQ,OACrF4E,EAAKsc,OAAOtM,IAAIvT,SAAU,UAAsCrB,KAAK8nB,WAAWvX,KAAKvQ,MAAO,IAG9F,MAAM+nB,EAAgD1mB,SAAS2mB,cAC/DpjB,EAAKe,GAAG,WAAW,KACbf,EAAKC,QAAQojB,aACVF,GACA/nB,KAAK2nB,aACVI,EAAkBG,OAC1B,GAEA,CAGEN,cACO5nB,KAAK2nB,aAAe3nB,KAAK4E,KAAKwB,UACjCpG,KAAK4E,KAAKwB,QAAQ8hB,QAClBloB,KAAK2nB,aAAc,EAEzB,CAMEG,WAAWvlB,GACT,MAAM,KAAEqC,GAAS5E,KAEjB,GAAI4E,EAAKkB,SAAS,UAAW,CAAEkZ,cAAezc,IAAK8B,iBACjD,OAGF,GAAI/B,EAAeC,GAIjB,OAIF,IAAI4lB,EAEAvS,EACAwS,GAAY,EAChB,MAAMX,EAAiB,QAASllB,EAEhC,OAAQklB,EAAiBllB,EAAE5B,IAAM4B,EAAE8lB,SACjC,KAAKb,GAAoB,SAAUC,GAC7B7iB,EAAKC,QAAQyjB,SACfH,EAAgB,SAElB,MACF,KAAKX,GAAoB,IAAKC,GAC5BU,EAAgB,aAChB,MACF,KAAKX,GAAoB,YAAaC,GACpC7R,EAAO,IACP,MACF,KAAK4R,GAAoB,UAAWC,GAClC7R,EAAO,IACP,MACF,KAAK4R,GAAoB,aAAcC,GACrC7R,EAAO,IACPwS,GAAY,EACZ,MACF,KAAKZ,GAAoB,YAAaC,GACpCW,GAAY,EACZxS,EAAO,IACP,MACF,KAAK4R,GAAoB,MAAOC,GAC9BznB,KAAK4nB,aACL,MAKJ,GAAIhS,EAAM,CAERrT,EAAEiC,iBAEF,MAAM,UAAE6U,GAAczU,EAElBA,EAAKC,QAAQ0jB,WACD,MAAT3S,GACAhR,EAAK2J,cAAgB,EAC1B4Z,EAAgBC,EAAY,OAAS,OAC5B/O,GAAaA,EAAUtL,cAAgBsL,EAAU5L,WAAWhB,MAKrE4M,EAAUjD,IAAIR,IAASwS,GAAa,GAAK,GACzC/O,EAAUjC,MAAMiC,EAAUjD,IAAI5U,EAAG6X,EAAUjD,IAAI3U,GAEvD,CAEQ0mB,IACF5lB,EAAEiC,iBAEFI,EAAKujB,KAEX,CAQEN,WAAWtlB,GACT,MAAM,SAAEimB,GAAaxoB,KAAK4E,KACtB4jB,GACGnnB,WAAakB,EAAE8O,QACfmX,IAAajmB,EAAE8O,SACdmX,EAAS9W,SAA8BnP,EAAE8O,SAE/CmX,EAASN,OAEf,ECxKA,MAAMO,GAAiB,2BAkBvB,MAAMC,GAMJxkB,YAAYykB,GACV3oB,KAAK2oB,MAAQA,EACb,MAAM,OACJtX,EAAM,WACNmH,EAAU,UACV5R,EAAS,SACTgiB,EAAWA,SAAQ,SACnB5U,EAAW,IAAG,OACdyE,EAASgQ,IACPE,EAEJ3oB,KAAK4oB,SAAWA,EAGhB,MAAMhd,EAAOhF,EAAY,YAAc,UACjCjF,EAAYgnB,EAAM/c,IAAS,GAGjC5L,KAAK6oB,QAAUxX,EAEfrR,KAAK8oB,YAActQ,EAEnBxY,KAAK+oB,WAAY,EAGjB/oB,KAAKgpB,iBAAmBhpB,KAAKgpB,iBAAiBzY,KAAKvQ,MASnDA,KAAKipB,eAAiBhhB,YAAW,KAC/B8L,EAAmB1C,EAAQzF,EAAMoI,EAAUyE,GAC3CzY,KAAKipB,eAAiBhhB,YAAW,KAC/BoJ,EAAOX,iBAAiB,gBAAiB1Q,KAAKgpB,kBAAkB,GAChE3X,EAAOX,iBAAiB,mBAAoB1Q,KAAKgpB,kBAAkB,GAMnEhpB,KAAKipB,eAAiBhhB,YAAW,KAC/BjI,KAAKkpB,oBAAoB,GACxBlV,EAAW,KACd3C,EAAOrP,MAAM4J,GAAQjK,CAAS,GAC7B,GAAG,GACL,EACP,CAMEqnB,iBAAiBzmB,GACXA,EAAE8O,SAAWrR,KAAK6oB,SACpB7oB,KAAKkpB,oBAEX,CAKEA,qBACOlpB,KAAK+oB,YACR/oB,KAAK+oB,WAAY,EACjB/oB,KAAK4oB,WACD5oB,KAAK8oB,aACP9oB,KAAK8oB,cAGb,CAGEjiB,UACM7G,KAAKipB,gBACP5F,aAAarjB,KAAKipB,gBAEpB9U,EAAsBnU,KAAK6oB,SAC3B7oB,KAAK6oB,QAAQ7V,oBAAoB,gBAAiBhT,KAAKgpB,kBAAkB,GACzEhpB,KAAK6oB,QAAQ7V,oBAAoB,mBAAoBhT,KAAKgpB,kBAAkB,GACvEhpB,KAAK+oB,WACR/oB,KAAKkpB,oBAEX,EChHA,MAAMC,GAA4B,GAC5BC,GAAwB,IAK9B,MAAMC,GAgBJnlB,YAAY2V,EAAiBkC,EAAc0C,GACzCze,KAAKgb,SAA6B,IAAlBnB,EAGhB7Z,KAAKspB,cAAgBvN,GAAgBqN,GAGrCppB,KAAKupB,kBAAoB9K,GAAoB0K,GAE7CnpB,KAAKwpB,iBAAmBxpB,KAAKupB,kBAEzBvpB,KAAKspB,cAAgB,IACvBtpB,KAAKwpB,kBAAoBnc,KAAKoG,KAAK,EAAIzT,KAAKspB,cAAgBtpB,KAAKspB,eAEvE,CAQEG,UAAUC,EAAeC,GAMvB,IACIC,EADAtG,EAAe,EAGnBqG,GAAa,IAEb,MAAME,EAAoBxc,KAAKyc,KAAO9pB,KAAKspB,cAAgBtpB,KAAKupB,kBAAoBI,GAEpF,GAA2B,IAAvB3pB,KAAKspB,cACPM,EAAQ5pB,KAAKgb,SAAWhb,KAAKupB,kBAAoBG,EAEjDpG,GAAgBoG,EAAgBE,EAAQD,GAAaE,EAErD7pB,KAAKgb,SAAWsI,GACMtjB,KAAKupB,kBAAqBK,EAC5BC,OACf,GAAI7pB,KAAKspB,cAAgB,EAAG,CACjCM,EAAS,EAAI5pB,KAAKwpB,kBACLxpB,KAAKspB,cAAgBtpB,KAAKupB,kBAAoBG,EAAgB1pB,KAAKgb,UAEhF,MAAM+O,EAAa1c,KAAK2c,IAAIhqB,KAAKwpB,iBAAmBG,GAC9CM,EAAa5c,KAAK6c,IAAIlqB,KAAKwpB,iBAAmBG,GAEpDrG,EAAeuG,GACKH,EAAgBK,EAAaH,EAAQK,GAEzDjqB,KAAKgb,SAAWsI,GACMtjB,KAAKupB,kBACPvpB,KAAKspB,cACLO,IACE7pB,KAAKwpB,iBAAmBE,EAAgBO,EAC1CjqB,KAAKwpB,iBAAmBI,EAAQG,EAC1D,CAII,OAAOzG,CACX,ECrEA,MAAM6G,GAIJjmB,YAAYykB,GACV3oB,KAAK2oB,MAAQA,EACb3oB,KAAKoqB,KAAO,EAEZ,MAAM,MACJlQ,EAAK,IACLa,EAAG,SACHC,EAAQ,SACRmB,EAAQ,WACR3D,EAAU,SACVoQ,EAAWA,SAAQ,aACnB7M,EAAY,iBACZ0C,GACEkK,EAEJ3oB,KAAK4oB,SAAWA,EAEhB,MAAMyB,EAAQ,IAAIhB,GAAYrO,EAAUe,EAAc0C,GACtD,IAAI6L,EAAW3H,KAAKjE,MAChBgL,EAAgBxP,EAAQa,EAE5B,MAAMwP,EAAgBA,KAChBvqB,KAAKoqB,OACPV,EAAgBW,EAAMZ,UAAUC,EAAe/G,KAAKjE,MAAQ4L,GAGxDjd,KAAKmG,IAAIkW,GAAiB,GAAKrc,KAAKmG,IAAI6W,EAAMrP,UAAY,IAE5DmB,EAASpB,GACLvC,GACFA,IAEFxY,KAAK4oB,aAEL0B,EAAW3H,KAAKjE,MAChBvC,EAASuN,EAAgB3O,GACzB/a,KAAKoqB,KAAOrH,sBAAsBwH,IAE5C,EAGIvqB,KAAKoqB,KAAOrH,sBAAsBwH,EACtC,CAGE1jB,UACM7G,KAAKoqB,MAAQ,GACf7G,qBAAqBvjB,KAAKoqB,MAE5BpqB,KAAKoqB,KAAO,CAChB,ECnDA,MAAMI,GACJtmB,cAEElE,KAAKyqB,iBAAmB,EAC5B,CAKEvO,YAAYyM,GACV3oB,KAAK0qB,OAAO/B,GAAO,EACvB,CAKEtQ,gBAAgBsQ,GACd3oB,KAAK0qB,OAAO/B,EAChB,CAQE+B,OAAO/B,EAAOgC,GACZ,MAAMC,EAAYD,EACd,IAAIR,GAAmDxB,GACvD,IAAID,GAA6CC,GAKrD,OAHA3oB,KAAKyqB,iBAAiBxlB,KAAK2lB,GAC3BA,EAAUhC,SAAW,IAAM5oB,KAAK6qB,KAAKD,GAE9BA,CACX,CAKEC,KAAKD,GACHA,EAAU/jB,UACV,MAAMM,EAAQnH,KAAKyqB,iBAAiBvH,QAAQ0H,GACxCzjB,GAAS,GACXnH,KAAKyqB,iBAAiB7G,OAAOzc,EAAO,EAE1C,CAEEgT,UACEna,KAAKyqB,iBAAiBhlB,SAASmlB,IAC7BA,EAAU/jB,SAAS,IAErB7G,KAAKyqB,iBAAmB,EAC5B,CAKE1S,aACE/X,KAAKyqB,iBAAmBzqB,KAAKyqB,iBAAiBnlB,QAAQslB,IAChDA,EAAUjC,MAAMrQ,QAClBsS,EAAU/jB,WACH,IAKf,CAEEmf,iBACEhmB,KAAKyqB,iBAAmBzqB,KAAKyqB,iBAAiBnlB,QAAQslB,IAChDA,EAAUjC,MAAMzC,eAClB0E,EAAU/jB,WACH,IAKf,CAcEikB,eACE,OAAO9qB,KAAKyqB,iBAAiBM,MAAMH,GAC1BA,EAAUjC,MAAMrQ,OAE7B,EC9GA,MAAM0S,GAIJ9mB,YAAYU,GACV5E,KAAK4E,KAAOA,EACZA,EAAKsc,OAAOtM,IAAIhQ,EAAKwB,QAAS,QAAoCpG,KAAKirB,SAAS1a,KAAKvQ,MACzF,CAMEirB,SAAS1oB,GACPA,EAAEiC,iBACF,MAAM,UAAE6U,GAAcrZ,KAAK4E,KAC3B,IAAI,OAAEsmB,EAAM,OAAEC,GAAW5oB,EAEzB,GAAK8W,IAIDrZ,KAAK4E,KAAKkB,SAAS,QAAS,CAAEkZ,cAAezc,IAAK8B,iBAItD,GAAI9B,EAAEE,SAAWzC,KAAK4E,KAAKC,QAAQumB,aAEjC,GAAI/R,EAAUpP,aAAc,CAC1B,IAAI8O,GAAcoS,EACE,IAAhB5oB,EAAE8oB,UACJtS,GAAc,IAEdA,GAAcxW,EAAE8oB,UAAY,EAAI,KAElCtS,EAAa,GAAKA,EAElB,MAAMrB,EAAgB2B,EAAUtL,cAAgBgL,EAChDM,EAAU5B,OAAOC,EAAe,CAC9BlW,EAAGe,EAAEsO,QACLpP,EAAGc,EAAEuO,SAEf,OAGUuI,EAAUH,eACQ,IAAhB3W,EAAE8oB,YAEJH,GAAU,GACVC,GAAU,IAGZ9R,EAAUjC,MACRiC,EAAUjD,IAAI5U,EAAI0pB,EAClB7R,EAAUjD,IAAI3U,EAAI0pB,GAI5B,ECxBA,SAASG,GAAeC,GACtB,GAAwB,kBAAbA,EAQT,OAAOA,EAGT,IAAKA,IAAaA,EAASC,YACzB,MAAO,GAGT,MAAMC,EAAUF,EAChB,IAAIG,EAAM,wFAiBV,OAfAA,EAAMA,EAAIrW,MAAM,MAAMsW,KAA4BF,EAAQG,MAAQ,IAO9DH,EAAQI,YACVH,GAAO,8CAAgDD,EAAQI,UAAY,OAG7EH,GAAOD,EAAQK,MAEfJ,GAAO,SAEAA,CACT,CAEA,MAAMK,GAKJ7nB,YAAYU,EAAMwC,GAChB,MAAMrC,EAAOqC,EAAKrC,MAAQqC,EAAKnG,UAC/B,IAAI+qB,EAAc5kB,EAAK2B,KAGvB,IAA2B,IAAvBnE,EAAKC,QAAQE,GAEf,OAKwC,kBAA/BH,EAAKC,QAAQE,EAAO,SAM7BinB,EAAcpnB,EAAKC,QAAQE,EAAO,QAGpCH,EAAKkB,SAAS,kBAAmB,CAAEsB,SAEnC,IAAInG,EAAY,GACZmG,EAAK6kB,UACPhrB,GAAa,gBACbA,GAAcmG,EAAKnG,WAAc,iBAAgBmG,EAAKrC,QAEtD9D,GAAcmG,EAAKnG,WAAc,SAAQmG,EAAKrC,OAGhD,IAAI7D,EAAUkG,EAAK6kB,SAAY7kB,EAAKlG,SAAW,SAAakG,EAAKlG,SAAW,MAC5EA,EAAsDA,EAAQgrB,cAE9D,MAAM9lB,EAAUpF,EAAcC,EAAWC,GAEzC,GAAIkG,EAAK6kB,SAAU,CACD,WAAZ/qB,IACgCkF,EAASjC,KAAO,UAGpD,IAAI,MAAEgoB,GAAU/kB,EAChB,MAAM,UAAEglB,GAAchlB,EAGsB,kBAAjCxC,EAAKC,QAAQE,EAAO,WAE7BonB,EAAQvnB,EAAKC,QAAQE,EAAO,UAG1BonB,IACF/lB,EAAQ+lB,MAAQA,GAGlB,MAAME,EAAWD,GAAaD,EAC1BE,GACFjmB,EAAQK,aAAa,aAAc4lB,EAE3C,CAEIjmB,EAAQ0C,UAAYwiB,GAAeU,GAE/B5kB,EAAKklB,QACPllB,EAAKklB,OAAOlmB,EAASxB,GAGnBwC,EAAKmlB,UACPnmB,EAAQomB,QAAWjqB,IACW,kBAAjB6E,EAAKmlB,QAEd3nB,EAAKwC,EAAKmlB,WACuB,oBAAjBnlB,EAAKmlB,SACrBnlB,EAAKmlB,QAAQhqB,EAAG6D,EAASxB,EACnC,GAKI,MAAM6nB,EAAWrlB,EAAKqlB,UAAY,MAElC,IAAItmB,EAAYvB,EAAKwB,QACJ,QAAbqmB,GACG7nB,EAAK8nB,SACR9nB,EAAK8nB,OAAS1rB,EAAc,oCAAqC,MAAO4D,EAAKuc,aAE/Ehb,EAAYvB,EAAK8nB,SAIjBtmB,EAAQ8Y,UAAUtK,IAAI,uBAEL,YAAb6X,IACFtmB,EAAYvB,EAAKuc,aAIrBhb,GAAW7E,YAAYsD,EAAKW,aAAa,YAAaa,EAASgB,GACnE,ECtKA,SAASulB,GAAgBvmB,EAASxB,EAAMgoB,GACtCxmB,EAAQ8Y,UAAUtK,IAAI,uBAEtBxO,EAAQK,aAAa,gBAAiB,eACtC7B,EAAKe,GAAG,UAAU,KACXf,EAAKC,QAAQgoB,OAGbzmB,EAAS0mB,SAFRF,IAEqBhoB,EAAKsR,UAAYtR,EAAK2J,cAAgB,KAGtC3J,EAAKsR,UAAY,GAEhD,GAEA,CAGO,MAAM6W,GAAY,CACvBhoB,KAAM,YACN9D,UAAW,4BACXkrB,MAAO,WACPa,MAAO,GACPf,UAAU,EACVQ,SAAU,UACV1jB,KAAM,CACJyiB,aAAa,EACbI,KAAM,GACNE,MAAO,4EACPD,UAAW,mBAEbU,QAAS,OACTD,OAAQK,IAIGM,GAAY,CACvBloB,KAAM,YACN9D,UAAW,4BACXkrB,MAAO,OACPa,MAAO,GACPf,UAAU,EACVQ,SAAU,UACV1jB,KAAM,CACJyiB,aAAa,EACbI,KAAM,GACNE,MAAO,uCACPD,UAAW,mBAEbU,QAAS,OACTD,OAAQA,CAAClrB,EAAIwD,KACX+nB,GAAgBvrB,EAAIwD,GAAM,EAAK,GC/D7BsoB,GAAc,CAClBnoB,KAAM,QACNonB,MAAO,QACPa,MAAO,GACPf,UAAU,EACVljB,KAAM,CACJyiB,aAAa,EACbM,MAAO,wFACPD,UAAW,mBAEbU,QAAS,SCVLY,GAAa,CACjBpoB,KAAM,OACNonB,MAAO,OACPa,MAAO,GACPf,UAAU,EACVljB,KAAM,CACJyiB,aAAa,EAEbM,MAAO,uPAGPD,UAAW,kBAEbU,QAAS,cCbEa,GAAmB,CAC9BroB,KAAM,YACN0nB,SAAU,MACVO,MAAO,EACPjkB,KAAM,CACJyiB,aAAa,EAEbM,MAAO,kIACPD,UAAW,qBAEbS,OAAQA,CAACe,EAAkBzoB,KAEzB,IAAI0oB,EAEAC,EAAe,KAMnB,MAAMC,EAAuBA,CAACvsB,EAAW2T,KACvCyY,EAAiBnO,UAAUS,OAAO,oBAAsB1e,EAAW2T,EAAI,EAMnE6Y,EAA0BC,IAC1BJ,IAAcI,IAChBJ,EAAYI,EACZF,EAAqB,SAAUE,GACvC,EAGUC,EAA4BA,KAChC,IAAK/oB,EAAKyU,WAAWvR,QAAQiC,YAM3B,OALA0jB,GAAuB,QACnBF,IACFlK,aAAakK,GACbA,EAAe,OAKdA,IAEHA,EAAetlB,YAAW,KACxBwlB,EAAuBtU,QAAQvU,EAAKyU,WAAWvR,QAAQiC,cACvDwjB,EAAe,IAAI,GAClB3oB,EAAKC,QAAQ+oB,gBACxB,EAGIhpB,EAAKe,GAAG,SAAUgoB,GAElB/oB,EAAKe,GAAG,gBAAiBpD,IACnBqC,EAAKyU,YAAc9W,EAAE+E,OACvBqmB,GACR,IAIQ/oB,EAAKipB,KACPjpB,EAAKipB,GAAGF,0BAA4BA,EAC1C,GChEaG,GAAmB,CAC9B/oB,KAAM,UACNioB,MAAO,EACPV,OAAQA,CAACyB,EAAgBnpB,KACvBA,EAAKe,GAAG,UAAU,KAChBooB,EAAerjB,UAAa9F,EAAKsR,UAAY,EACftR,EAAKC,QAAQmpB,kBACbppB,EAAK2J,aAAa,GAChD,GCUN,SAAS0f,GAAY7sB,EAAI8sB,GACvB9sB,EAAG8d,UAAUS,OAAO,kBAAmBuO,EACzC,CAEA,MAAMC,GAIJjqB,YAAYU,GACV5E,KAAK4E,KAAOA,EACZ5E,KAAKouB,cAAe,EAEpBpuB,KAAKquB,eAAiB,GAEtBruB,KAAK2O,MAAQ,GAEb3O,KAAK2tB,0BAA4B,OAMjC3tB,KAAKsuB,2BAAwB1sB,CACjC,CAEE4O,OACE,MAAM,KAAE5L,GAAS5E,KACjBA,KAAKouB,cAAe,EACpBpuB,KAAKquB,eAAiB,CACpBnB,GACAH,GACAE,GACAE,GACAC,GACAU,IAGFlpB,EAAKkB,SAAS,cAGd9F,KAAKquB,eAAenpB,MAAK,CAACqpB,EAAGC,KAEnBD,EAAEvB,OAAS,IAAMwB,EAAExB,OAAS,KAGtChtB,KAAK2O,MAAQ,GAEb3O,KAAKouB,cAAe,EACpBpuB,KAAKquB,eAAe5oB,SAASgpB,IAC3BzuB,KAAK0uB,gBAAgBD,EAAc,IAGrC7pB,EAAKe,GAAG,UAAU,KAChBf,EAAKwB,SAAS8Y,UAAUS,OAAO,kBAA0C,IAAvB/a,EAAK2J,cAAoB,IAG7E3J,EAAKe,GAAG,iBAAiB,IAAM3F,KAAK2uB,oBACxC,CAKED,gBAAgBE,GACV5uB,KAAKouB,aACPpuB,KAAK2O,MAAM1J,KACT,IAAI8mB,GAAU/rB,KAAK4E,KAAMgqB,IAG3B5uB,KAAKquB,eAAeppB,KAAK2pB,EAE/B,CAQED,mBACE,MAAM,SAAEnG,EAAQ,UAAEnP,EAAS,QAAExU,GAAY7E,KAAK4E,KAE9C,GAAI5E,KAAK4E,KAAKyR,OAAOwY,YAAcrG,IAAanP,EAC9C,OAGF,IAAI,cAAEtL,GAAkBsL,EAOxB,GAJKrZ,KAAK4E,KAAKyR,OAAOC,SACpBvI,EAAgBsL,EAAU5L,WAAWb,SAGnCmB,IAAkB/N,KAAKsuB,sBACzB,OAEFtuB,KAAKsuB,sBAAwBvgB,EAE7B,MAAM+gB,EAAoBzV,EAAU5L,WAAWb,QAAUyM,EAAU5L,WAAWZ,UAG9E,GAAIQ,KAAKmG,IAAIsb,GAAqB,MAASzV,EAAUpP,aAInD,OAFAgkB,GAAYzF,GAAU,QACtBA,EAAStJ,UAAUnY,OAAO,sBAI5ByhB,EAAStJ,UAAUtK,IAAI,sBAEvB,MAAMma,EAAqBhhB,IAAkBsL,EAAU5L,WAAWb,QAC9DyM,EAAU5L,WAAWZ,UAAYwM,EAAU5L,WAAWb,QAE1DqhB,GAAYzF,EAAUuG,GAAsBhhB,GAEX,SAA7BlJ,EAAQmqB,kBACwB,kBAA7BnqB,EAAQmqB,kBACbxG,EAAStJ,UAAUtK,IAAI,sBAE7B,EChIA,SAASqa,GAAmB7tB,GAC1B,MAAM8tB,EAAgB9tB,EAAG+tB,wBACzB,MAAO,CACL3tB,EAAG0tB,EAAcE,KACjB3tB,EAAGytB,EAAcG,IACjBvtB,EAAGotB,EAAcruB,MAErB,CAQA,SAASyuB,GAA0BluB,EAAImuB,EAAYC,GACjD,MAAMN,EAAgB9tB,EAAG+tB,wBAInBhiB,EAAS+hB,EAAcruB,MAAQ0uB,EAC/BniB,EAAS8hB,EAAcpuB,OAAS0uB,EAChCC,EAAgBtiB,EAASC,EAASD,EAASC,EAE3CsiB,GAAWR,EAAcruB,MAAQ0uB,EAAaE,GAAiB,EAC/DE,GAAWT,EAAcpuB,OAAS0uB,EAAcC,GAAiB,EASjEjZ,EAAS,CACbhV,EAAG0tB,EAAcE,KAAOM,EACxBjuB,EAAGytB,EAAcG,IAAMM,EACvB7tB,EAAGytB,EAAaE,GAYlB,OAPAjZ,EAAOoZ,UAAY,CACjB9tB,EAAGotB,EAAcruB,MACjBkB,EAAGmtB,EAAcpuB,OACjBU,EAAGkuB,EACHjuB,EAAGkuB,GAGEnZ,CACT,CAWO,SAASqZ,GAAe1oB,EAAOF,EAAUC,GAE9C,MAAMnB,EAAQmB,EAASpB,SAAS,cAAe,CAC7CqB,QACAF,WACAC,aAGF,GAAInB,EAAM+pB,YAER,OAAO/pB,EAAM+pB,YAGf,MAAM,QAAE1pB,GAAYa,EAEpB,IAAI6oB,EAEAC,EAEJ,GAAI3pB,IAA8C,IAAnCc,EAASrC,QAAQmrB,cAAyB,CACvD,MAAMA,EAAgB9oB,EAASrC,QAAQmrB,eAAiB,MACxDD,EAAY3pB,EAAQ6pB,QAAQD,GACxB5pB,EAA6CA,EAAQgJ,cAAc4gB,EAC3E,CAgBE,OAdAD,EAAY7oB,EAAS3B,aAAa,UAAWwqB,EAAW9oB,EAAUE,GAE9D4oB,IAIAD,EAHG7oB,EAAS+I,aAGEsf,GACZS,EACA9oB,EAASpG,OAASoG,EAASnF,GAAK,EAChCmF,EAASnG,QAAUmG,EAASlF,GAAK,GALrBktB,GAAmBc,IAU9B7oB,EAAS3B,aAAa,cAAeuqB,EAAa7oB,EAAUE,EACrE,C7BgGA,MAAMlD,GAKJC,YAAYC,EAAMC,GAChBpE,KAAKmE,KAAOA,EACZnE,KAAKqE,kBAAmB,EACpBD,GACFE,OAAOC,OAAOvE,KAAMoE,EAE1B,CAEEI,iBACExE,KAAKqE,kBAAmB,CAC5B,EAOA,MAAMI,GACJP,cAIElE,KAAK0E,WAAa,CAAC,EAKnB1E,KAAK2E,SAAW,CAAC,EAGjB3E,KAAK4E,UAAOhD,EAGZ5B,KAAK6E,aAAUjD,CACnB,CAQEkD,UAAUC,EAAMrB,EAAIsB,EAAW,KACxBhF,KAAK2E,SAASI,KACjB/E,KAAK2E,SAASI,GAAQ,IAGxB/E,KAAK2E,SAASI,IAAOE,KAAK,CAAEvB,KAAIsB,aAChChF,KAAK2E,SAASI,IAAOG,MAAK,CAACC,EAAIC,IAAOD,EAAGH,SAAWI,EAAGJ,WAEvDhF,KAAK4E,MAAME,UAAUC,EAAMrB,EAAIsB,EACnC,CAOEK,aAAaN,EAAMrB,GACb1D,KAAK2E,SAASI,KAEhB/E,KAAK2E,SAASI,GAAQ/E,KAAK2E,SAASI,GAAMO,QAAOA,GAAWA,EAAO5B,KAAOA,KAGxE1D,KAAK4E,MACP5E,KAAK4E,KAAKS,aAAaN,EAAMrB,EAEnC,CAQE6B,aAAaR,KAASS,GAKpB,OAJAxF,KAAK2E,SAASI,IAAOU,SAASH,IAE5BE,EAAK,GAAKF,EAAO5B,GAAGgC,MAAM1F,KAAMwF,EAAK,IAEhCA,EAAK,EAChB,CAOEG,GAAGZ,EAAMrB,GACF1D,KAAK0E,WAAWK,KACnB/E,KAAK0E,WAAWK,GAAQ,IAE1B/E,KAAK0E,WAAWK,IAAOE,KAAKvB,GAK5B1D,KAAK4E,MAAMe,GAAGZ,EAAMrB,EACxB,CAOEkC,IAAIb,EAAMrB,GACJ1D,KAAK0E,WAAWK,KAElB/E,KAAK0E,WAAWK,GAAQ/E,KAAK0E,WAAWK,GAAMO,QAAOO,GAAanC,IAAOmC,KAG3E7F,KAAK4E,MAAMgB,IAAIb,EAAMrB,EACzB,CAQEoC,SAASf,EAAMX,GACb,GAAIpE,KAAK4E,KACP,OAAO5E,KAAK4E,KAAKkB,SAASf,EAAMX,GAGlC,MAAM2B,EAA0C,IAAI9B,GAAgBc,EAAMX,GAM1E,OAJApE,KAAK0E,WAAWK,IAAOU,SAASI,IAC9BA,EAASG,KAAKhG,KAAM+F,EAAM,IAGrBA,CACX,ECrVA,MAAME,GAKJ/B,YAAYgC,EAAUC,GAUpB,GANAnG,KAAKoG,QAAUpF,EACb,mCACAkF,EAAW,MAAQ,MACnBC,GAGED,EAAU,CACZ,MAAMG,EAAyCrG,KAAKoG,QACpDC,EAAMC,SAAW,QACjBD,EAAME,IAAM,GACZF,EAAMG,IAAMN,EACZG,EAAMI,aAAa,OAAQ,eACjC,CAEIzG,KAAKoG,QAAQK,aAAa,cAAe,OAC7C,CAMEC,iBAAiB7F,EAAOC,GACjBd,KAAKoG,UAImB,QAAzBpG,KAAKoG,QAAQlF,SAIfW,EAAe7B,KAAKoG,QAAS,IAAK,QAClCpG,KAAKoG,QAAQpE,MAAM2E,gBAAkB,MACrC3G,KAAKoG,QAAQpE,MAAM4E,UAAYrF,EAAkB,EAAG,EAAGV,EAAQ,MAE/DgB,EAAe7B,KAAKoG,QAASvF,EAAOC,GAE1C,CAEE+F,UACM7G,KAAKoG,SAASU,YAChB9G,KAAKoG,QAAQW,SAEf/G,KAAKoG,QAAU,IACnB,EC9CA,MAAMY,GAMJ9C,YAAY+C,EAAUC,EAAUC,GAC9BnH,KAAKkH,SAAWA,EAChBlH,KAAKoH,KAAOH,EACZjH,KAAKmH,MAAQA,EAGbnH,KAAKoG,aAAUxE,EAEf5B,KAAKqH,iBAAczF,EAEnB5B,KAAKsH,WAAQ1F,EAEb5B,KAAKuH,oBAAsB,EAC3BvH,KAAKwH,qBAAuB,EAE5BxH,KAAKa,MAAQ4G,OAAOzH,KAAKoH,KAAKtF,IAAM2F,OAAOzH,KAAKoH,KAAKvG,QAAU,EAC/Db,KAAKc,OAAS2G,OAAOzH,KAAKoH,KAAKrF,IAAM0F,OAAOzH,KAAKoH,KAAKtG,SAAW,EAEjEd,KAAK0H,YAAa,EAClB1H,KAAK2H,UAAW,EAChB3H,KAAK4H,YAAa,EAElB5H,KAAK6H,MAAQ5F,EAAWC,KAEpBlC,KAAKoH,KAAKjD,KACZnE,KAAKmE,KAAOnE,KAAKoH,KAAKjD,KACbnE,KAAKoH,KAAKZ,IACnBxG,KAAKmE,KAAO,QAEZnE,KAAKmE,KAAO,OAGdnE,KAAKkH,SAASpB,SAAS,cAAe,CAAEgC,QAAS9H,MACrD,CAEE+H,oBACM/H,KAAKqH,cAAgBrH,KAAKgI,mBAE5BC,YAAW,KACLjI,KAAKqH,cACPrH,KAAKqH,YAAYR,UACjB7G,KAAKqH,iBAAczF,EAC7B,GACS,IAET,CAQEsG,KAAKC,EAAQC,GACX,GAAIpI,KAAKsH,OAAStH,KAAKqI,iBACrB,GAAKrI,KAAKqH,YAYH,CACL,MAAMiB,EAAgBtI,KAAKqH,YAAYjB,QAEnCkC,IAAkBA,EAAcC,eAClCvI,KAAKsH,MAAMnB,UAAUqC,QAAQF,EAEvC,KAlB6B,CACrB,MAAMG,EAAiBzI,KAAKkH,SAAS3B,aACnC,oBAGCvF,KAAKoH,KAAKsB,OAAQ1I,KAAKsH,MAAMqB,eAAgB3I,KAAKoH,KAAKsB,KACxD1I,MAEFA,KAAKqH,YAAc,IAAIpB,GACrBwC,EACAzI,KAAKsH,MAAMnB,UAErB,CASQnG,KAAKoG,UAAYgC,GAIjBpI,KAAKkH,SAASpB,SAAS,cAAe,CAAEgC,QAAS9H,KAAMmI,WAAU9D,mBAIjErE,KAAK4I,kBACP5I,KAAKoG,QAAUpF,EAAc,YAAa,OAGtChB,KAAKuH,qBACPvH,KAAK6I,UAAUV,KAGjBnI,KAAKoG,QAAUpF,EAAc,gBAAiB,OAC9ChB,KAAKoG,QAAQ0C,UAAY9I,KAAKoH,KAAK2B,MAAQ,IAGzCX,GAAUpI,KAAKsH,OACjBtH,KAAKsH,MAAM0B,mBAAkB,GAEnC,CAOEH,UAAUV,GACR,IAAKnI,KAAK4I,mBACJ5I,KAAKoG,SACNpG,KAAKkH,SAASpB,SAAS,mBAAoB,CAAEgC,QAAS9H,KAAMmI,WAAU9D,iBACzE,OAGF,MAAM4E,EAA8CjJ,KAAKoG,QAEzDpG,KAAKkJ,oBAEDlJ,KAAKoH,KAAK+B,SACZF,EAAaE,OAASnJ,KAAKoH,KAAK+B,QAGlCF,EAAazC,IAAMxG,KAAKoH,KAAKZ,KAAO,GACpCyC,EAAa1C,IAAMvG,KAAKoH,KAAKb,KAAO,GAEpCvG,KAAK6H,MAAQ5F,EAAWE,QAEpB8G,EAAaG,SACfpJ,KAAKqJ,YAELJ,EAAaK,OAAS,KACpBtJ,KAAKqJ,UAAU,EAGjBJ,EAAaM,QAAU,KACrBvJ,KAAKwJ,SAAS,EAGtB,CAOEC,SAASnC,GACPtH,KAAKsH,MAAQA,EACbtH,KAAK2H,UAAW,EAChB3H,KAAKkH,SAAWI,EAAM1C,IAG1B,CAKEyE,WACErJ,KAAK6H,MAAQ5F,EAAWG,OAEpBpC,KAAKsH,OAAStH,KAAKoG,UACrBpG,KAAKkH,SAASpB,SAAS,eAAgB,CAAEwB,MAAOtH,KAAKsH,MAAOQ,QAAS9H,OAGjEA,KAAKsH,MAAMoC,UACR1J,KAAKsH,MAAMqC,gBACV3J,KAAKoG,QAAQU,aACnB9G,KAAK4J,SACL5J,KAAKsH,MAAM0B,mBAAkB,IAG3BhJ,KAAK6H,QAAU5F,EAAWG,QAAUpC,KAAK6H,QAAU5F,EAAWI,OAChErC,KAAK+H,oBAGb,CAKEyB,UACExJ,KAAK6H,MAAQ5F,EAAWI,MAEpBrC,KAAKsH,QACPtH,KAAK6J,eACL7J,KAAKkH,SAASpB,SAAS,eAAgB,CAAEwB,MAAOtH,KAAKsH,MAAOwC,SAAS,EAAMhC,QAAS9H,OACpFA,KAAKkH,SAASpB,SAAS,YAAa,CAAEwB,MAAOtH,KAAKsH,MAAOQ,QAAS9H,OAExE,CAKE+J,YACE,OAAO/J,KAAKkH,SAAS3B,aACnB,mBACAvF,KAAK6H,QAAU5F,EAAWE,QAC1BnC,KAEN,CAKE8J,UACE,OAAO9J,KAAK6H,QAAU5F,EAAWI,KACrC,CAKEuG,iBACE,MAAqB,UAAd5I,KAAKmE,IAChB,CAQEuC,iBAAiB7F,EAAOC,GACtB,GAAKd,KAAKoG,UAINpG,KAAKqH,aACPrH,KAAKqH,YAAYX,iBAAiB7F,EAAOC,IAGvCd,KAAKkH,SAASpB,SAChB,gBACA,CAAEgC,QAAS9H,KAAMa,QAAOC,WAAUuD,mBAKpCxC,EAAe7B,KAAKoG,QAASvF,EAAOC,GAEhCd,KAAK4I,mBAAqB5I,KAAK8J,YAAW,CAC5C,MAAME,GAAwBhK,KAAKuH,qBAAuB1G,EAE1Db,KAAKuH,oBAAsB1G,EAC3Bb,KAAKwH,qBAAuB1G,EAExBkJ,EACFhK,KAAK6I,WAAU,GAEf7I,KAAKkJ,oBAGHlJ,KAAKsH,OACPtH,KAAKkH,SAASpB,SACZ,kBACA,CAAEwB,MAAOtH,KAAKsH,MAAOzG,QAAOC,SAAQgH,QAAS9H,MAGvD,CACA,CAKEiK,aACE,OAAOjK,KAAKkH,SAAS3B,aACnB,oBACAvF,KAAK4I,kBAAqB5I,KAAK6H,QAAU5F,EAAWI,MACpDrC,KAEN,CAKEkJ,oBAME,IAAKlJ,KAAK4I,mBAAqB5I,KAAKoG,UAAYpG,KAAKoH,KAAK+B,OACxD,OAGF,MAAMzI,EAAuCV,KAAKoG,QAC5C8D,EAAalK,KAAKkH,SAAS3B,aAC/B,mBACAvF,KAAKuH,oBACLvH,QAICU,EAAMyJ,QAAQC,iBACZF,EAAaG,SAAS3J,EAAMyJ,QAAQC,gBAAiB,OAExD1J,EAAM4J,MAAQJ,EAAa,KAC3BxJ,EAAMyJ,QAAQC,gBAAkBG,OAAOL,GAE7C,CAKE7B,iBACE,OAAOrI,KAAKkH,SAAS3B,aACnB,wBACAvF,KAAK4I,iBACL5I,KAEN,CAKEwK,WACMxK,KAAKkH,SAASpB,SAAS,kBAAmB,CAAEgC,QAAS9H,OAAQqE,kBAIjErE,KAAKkI,MAAK,EACd,CAKEF,kBACE,OAAOhI,KAAKkH,SAAS3B,aACnB,uBACAvF,KAAK+J,YACL/J,KAEN,CAKE6G,UACE7G,KAAK2H,UAAW,EAChB3H,KAAKsH,WAAQ1F,EAET5B,KAAKkH,SAASpB,SAAS,iBAAkB,CAAEgC,QAAS9H,OAAQqE,mBAIhErE,KAAK+G,SAED/G,KAAKqH,cACPrH,KAAKqH,YAAYR,UACjB7G,KAAKqH,iBAAczF,GAGjB5B,KAAK4I,kBAAoB5I,KAAKoG,UAChCpG,KAAKoG,QAAQkD,OAAS,KACtBtJ,KAAKoG,QAAQmD,QAAU,KACvBvJ,KAAKoG,aAAUxE,GAErB,CAKEiI,eACE,GAAI7J,KAAKsH,MAAO,CACd,IAAImD,EAAazJ,EAAc,kBAAmB,OAClDyJ,EAAWC,UAAY1K,KAAKkH,SAASrC,SAAS8F,UAAY,GAC1DF,EAA4CzK,KAAKkH,SAAS3B,aACxD,sBACAkF,EACAzK,MAEFA,KAAKoG,QAAUpF,EAAc,0CAA2C,OACxEhB,KAAKoG,QAAQ9E,YAAYmJ,GACzBzK,KAAKsH,MAAMnB,UAAUuE,UAAY,GACjC1K,KAAKsH,MAAMnB,UAAU7E,YAAYtB,KAAKoG,SACtCpG,KAAKsH,MAAM0B,mBAAkB,GAC7BhJ,KAAK+H,mBACX,CACA,CAKE6B,SACE,GAAI5J,KAAK0H,aAAe1H,KAAKoG,QAC3B,OAKF,GAFApG,KAAK0H,YAAa,EAEd1H,KAAK6H,QAAU5F,EAAWI,MAE5B,YADArC,KAAK6J,eAIP,GAAI7J,KAAKkH,SAASpB,SAAS,gBAAiB,CAAEgC,QAAS9H,OAAQqE,iBAC7D,OAGF,MAAMuG,EAAkB,WAAY5K,KAAKoG,QAErCpG,KAAK4I,iBAaHgC,GAAkB5K,KAAKsH,SAAWtH,KAAKsH,MAAMoC,UAAY7F,MAC3D7D,KAAK4H,YAAa,EAIjB5H,KAAKoG,QAASyE,SAASC,OAAM,SAAUC,SAAQ,KAC9C/K,KAAK4H,YAAa,EAClB5H,KAAKgL,aAAa,KAGpBhL,KAAKgL,cAEEhL,KAAKsH,QAAUtH,KAAKoG,QAAQU,YACrC9G,KAAKsH,MAAMnB,UAAU7E,YAAYtB,KAAKoG,QAE5C,CAOE6E,YACMjL,KAAKkH,SAASpB,SAAS,kBAAmB,CAAEgC,QAAS9H,OAAQqE,kBAC3DrE,KAAKsH,QAIPtH,KAAK4I,kBAAoB5I,KAAK4H,aAAe/D,IAG/C7D,KAAKgL,cACIhL,KAAK8J,WACd9J,KAAKkI,MAAK,GAAO,GAGflI,KAAKsH,MAAM4D,eACblL,KAAKsH,MAAM4D,cAAczE,aAAa,cAAe,SAE3D,CAKE0E,aACEnL,KAAKkH,SAASpB,SAAS,oBAAqB,CAAEgC,QAAS9H,OACnDA,KAAKsH,OAAStH,KAAKsH,MAAM4D,eAC3BlL,KAAKsH,MAAM4D,cAAczE,aAAa,cAAe,OAE3D,CAMEM,SACE/G,KAAK0H,YAAa,EAEd1H,KAAKkH,SAASpB,SAAS,gBAAiB,CAAEgC,QAAS9H,OAAQqE,mBAI3DrE,KAAKoG,SAAWpG,KAAKoG,QAAQU,YAC/B9G,KAAKoG,QAAQW,SAGX/G,KAAKqH,aAAerH,KAAKqH,YAAYjB,SACvCpG,KAAKqH,YAAYjB,QAAQW,SAE/B,CAKEiE,cACOhL,KAAK0H,aAIN1H,KAAKkH,SAASpB,SAAS,qBAAsB,CAAEgC,QAAS9H,OAAQqE,mBAKhErE,KAAKsH,OAAStH,KAAKoG,UAAYpG,KAAKoG,QAAQU,YAC9C9G,KAAKsH,MAAMnB,UAAU7E,YAAYtB,KAAKoG,SAGpCpG,KAAK6H,QAAU5F,EAAWG,QAAUpC,KAAK6H,QAAU5F,EAAWI,OAChErC,KAAK+H,qBAEX,EG3fA,MAAMmoB,GAAsB,EAYrB,SAASliB,GAAa/G,EAAUC,EAAUC,GAC/C,MAAMW,EAAUZ,EAAS+G,sBAAsBhH,EAAUE,GAEzD,IAAI+G,EAEJ,MAAM,QAAErJ,GAAYqC,EAIpB,GAAIrC,EAAS,CAGX,IAAIgH,EAFJqC,EAAY,IAAI5B,EAAUzH,EAASoC,GAAW,GAI5C4E,EADE3E,EAAStC,KACIsC,EAAStC,KAAKiH,aAEdT,EAAgBvG,EAASqC,GAG1C,MAAMqF,EAAcH,EAAevH,EAASgH,EAAc5E,EAAUE,GACpE+G,EAAUlB,OAAOlF,EAAQjH,MAAOiH,EAAQhH,OAAQyL,EACpD,CAWE,OATAzE,EAAQ0C,WAEJ0D,GACFpG,EAAQpB,iBACN2G,KAAKc,KAAKrG,EAAQjH,MAAQqN,EAAUtB,SACpCS,KAAKc,KAAKrG,EAAQhH,OAASoN,EAAUtB,UAIlC9E,CACT,CAcO,SAASsG,GAAcjH,EAAOD,GACnC,MAAMD,EAAWC,EAASmH,YAAYlH,GAEtC,IAAID,EAASpB,SAAS,gBAAiB,CAAEqB,QAAOF,aAAY5C,iBAI5D,OAAO2J,GAAa/G,EAAUC,EAAUC,EAC1C,CAEA,MAAMgpB,GAIJjsB,YAAYU,GACV5E,KAAK4E,KAAOA,EAEZ5E,KAAKowB,MAAQ/iB,KAAKP,IAChBlI,EAAKC,QAAQ+M,QAAQ,GAAKhN,EAAKC,QAAQ+M,QAAQ,GAAK,EACpDse,IAGFlwB,KAAKqwB,aAAe,EACxB,CAOExJ,WAAW7C,GACT,MAAM,KAAEpf,GAAS5E,KAEjB,GAAI4E,EAAKkB,SAAS,YAAYzB,iBAC5B,OAGF,MAAM,QAAEuN,GAAYhN,EAAKC,QACnBujB,OAAqBxmB,IAAToiB,GAA6BA,GAAQ,EACvD,IAAIqB,EAGJ,IAAKA,EAAI,EAAGA,GAAKzT,EAAQ,GAAIyT,IAC3BrlB,KAAKswB,iBAAiB1rB,EAAKsR,WAAakS,EAAY/C,GAAMA,IAI5D,IAAKA,EAAI,EAAGA,GAAKzT,EAAQ,GAAIyT,IAC3BrlB,KAAKswB,iBAAiB1rB,EAAKsR,WAAakS,GAAc/C,EAAKA,GAEjE,CAKEiL,iBAAiBC,GACf,MAAMppB,EAAQnH,KAAK4E,KAAKkhB,eAAeyK,GAEvC,IAAIzoB,EAAU9H,KAAKwwB,kBAAkBrpB,GAChCW,IAEHA,EAAUsG,GAAcjH,EAAOnH,KAAK4E,MAEhCkD,GACF9H,KAAK+S,WAAWjL,GAGxB,CAMEyO,kBAAkBjP,GAChB,IAAIQ,EAAU9H,KAAKwwB,kBAAkBlpB,EAAMH,OAU3C,OATKW,IAEHA,EAAU9H,KAAK4E,KAAKqJ,sBAAsB3G,EAAMF,KAAME,EAAMH,OAC5DnH,KAAK+S,WAAWjL,IAIlBA,EAAQ2B,SAASnC,GAEVQ,CACX,CAKEiL,WAAWjL,GAKT,GAHA9H,KAAKywB,cAAc3oB,EAAQX,OAC3BnH,KAAKqwB,aAAaprB,KAAK6C,GAEnB9H,KAAKqwB,aAAa3hB,OAAS1O,KAAKowB,MAAO,CAEzC,MAAMM,EAAgB1wB,KAAKqwB,aAAa7e,WAAWmf,IACzCA,EAAKjpB,aAAeipB,EAAKhpB,WAEnC,IAAuB,IAAnB+oB,EAAsB,CACxB,MAAME,EAAc5wB,KAAKqwB,aAAazM,OAAO8M,EAAe,GAAG,GAC/DE,EAAY/pB,SACpB,CACA,CACA,CAOE4pB,cAActpB,GACZ,MAAMupB,EAAgB1wB,KAAKqwB,aAAa7e,WAAUmf,GAAQA,EAAKxpB,QAAUA,KAClD,IAAnBupB,GACF1wB,KAAKqwB,aAAazM,OAAO8M,EAAe,EAE9C,CAMEF,kBAAkBrpB,GAChB,OAAOnH,KAAKqwB,aAAaQ,MAAK/oB,GAAWA,EAAQX,QAAUA,GAC/D,CAEEN,UACE7G,KAAKqwB,aAAa5qB,SAAQqC,GAAWA,EAAQjB,YAC7C7G,KAAKqwB,aAAe,EACxB,EC1LA,MAAM/hB,WAAuB7J,GAM3B8J,cACE,IAAIC,EAAW,EACf,MAAMC,EAAazO,KAAK6E,SAAS4J,WAE7BA,GAAc,WAAYA,EAE5BD,EAAWC,EAAWC,OACbD,GAAc,YAAaA,IAE/BA,EAAWE,QACdF,EAAWE,MAAQ3O,KAAK4O,uBAAuBH,EAAWI,UAGxDJ,EAAWE,QACbH,EAAWC,EAAWE,MAAMD,SAKhC,MAAM3I,EAAQ/F,KAAK8F,SAAS,WAAY,CACtC2I,aACAD,aAEF,OAAOxO,KAAKuF,aAAa,WAAYQ,EAAMyI,SAAUC,EACzD,CAOER,sBAAsBP,EAAWvG,GAC/B,OAAO,IAAIH,GAAQ0G,EAAW1N,KAAMmH,EACxC,CAYEkH,YAAYlH,GACV,MAAMsH,EAAazO,KAAK6E,SAAS4J,WAEjC,IAAIK,EAAiB,CAAC,EAClB1L,MAAMC,QAAQoL,GAEhBK,EAAiBL,EAAWtH,GACnBsH,GAAc,YAAaA,IAM/BA,EAAWE,QACdF,EAAWE,MAAQ3O,KAAK4O,uBAAuBH,EAAWI,UAG5DC,EAAiBL,EAAWE,MAAMxH,IAGpC,IAAIF,EAAW6H,EAEX7H,aAAoB/D,UACtB+D,EAAWjH,KAAK+O,sBAAsB9H,IAKxC,MAAMlB,EAAQ/F,KAAK8F,SAAS,WAAY,CACtCmB,SAAUA,GAAY,CAAC,EACvBE,UAGF,OAAOnH,KAAKuF,aAAa,WAAYQ,EAAMkB,SAAUE,EACzD,CASEyH,uBAAuBI,GACrB,OAAIhP,KAAK6E,SAASoK,UAAYjP,KAAK6E,SAASqK,cACnCrM,EACL7C,KAAK6E,QAAQoK,SACbjP,KAAK6E,QAAQqK,cACbF,IACG,GAGA,CAACA,EACZ,CAQED,sBAAsB3I,GAEpB,MAAMa,EAAW,CACfb,WAGI+I,EACgB,MAApB/I,EAAQlF,QACJkF,EACAA,EAAQgJ,cAAc,KAG5B,GAAID,EAAQ,CAGVlI,EAAST,IAAM2I,EAAOhF,QAAQkF,SAAWF,EAAOG,KAE5CH,EAAOhF,QAAQoF,aACjBtI,EAASkC,OAASgG,EAAOhF,QAAQoF,YAGnCtI,EAASpG,MAAQsO,EAAOhF,QAAQqF,UAAYnF,SAAS8E,EAAOhF,QAAQqF,UAAW,IAAM,EACrFvI,EAASnG,OAASqO,EAAOhF,QAAQsF,WAAapF,SAAS8E,EAAOhF,QAAQsF,WAAY,IAAM,EAGxFxI,EAASnF,EAAImF,EAASpG,MACtBoG,EAASlF,EAAIkF,EAASnG,OAElBqO,EAAOhF,QAAQuF,WACjBzI,EAAS9C,KAAOgL,EAAOhF,QAAQuF,UAGjC,MAAMC,EAAcvJ,EAAQgJ,cAAc,OAEtCO,IAGF1I,EAASyB,KAAOiH,EAAYC,YAAcD,EAAYnJ,IACtDS,EAASV,IAAMoJ,EAAYE,aAAa,QAAU,KAGhDV,EAAOhF,QAAQ2F,aAAeX,EAAOhF,QAAQ4F,WAC/C9I,EAAS+I,cAAe,EAEhC,CAEI,OAAOhQ,KAAKuF,aAAa,cAAe0B,EAAUb,EAAS+I,EAC/D,CASEnB,aAAa/G,EAAUE,GACrB,OAAO6G,GAAa/G,EAAUjH,KAAMmH,EACxC,EwBvKA,MAAM2pB,GAAc,KAOpB,MAAMC,GAIJ7sB,YAAYU,GACV5E,KAAK4E,KAAOA,EACZ5E,KAAKgxB,UAAW,EAChBhxB,KAAKsW,QAAS,EACdtW,KAAK6uB,WAAY,EACjB7uB,KAAKixB,WAAY,EAKjBjxB,KAAKkxB,eAAYtvB,EAEjB5B,KAAKmxB,eAAgB,EAErBnxB,KAAKoxB,cAAe,EAEpBpxB,KAAKqxB,qBAAsB,EAE3BrxB,KAAKsxB,mBAAoB,EAKzBtxB,KAAKuxB,kBAAe3vB,EAKpB5B,KAAKwxB,qBAAkB5vB,EAKvB5B,KAAKyxB,qBAAkB7vB,EAKvB5B,KAAK0xB,qBAAkB9vB,EAMvB5B,KAAK2xB,kBAAe/vB,EAGpB5B,KAAK4xB,aAAe5xB,KAAK4xB,aAAarhB,KAAKvQ,MAG3C4E,EAAKe,GAAG,eAAgB3F,KAAK4xB,aACjC,CAEEC,OACE7xB,KAAK4xB,eACL5xB,KAAK0qB,QACT,CAEE7O,QACE,GAAI7b,KAAKgxB,UAAYhxB,KAAK6uB,WAAa7uB,KAAKixB,UAI1C,OAGF,MAAM3pB,EAAQtH,KAAK4E,KAAKyU,UAExBrZ,KAAKsW,QAAS,EACdtW,KAAKixB,WAAY,EACjBjxB,KAAK6uB,WAAY,EACjB7uB,KAAKkxB,UAAYlxB,KAAK4E,KAAKC,QAAQitB,sBAE/BxqB,GAASA,EAAMyG,cAAgBzG,EAAMzG,OAASb,KAAK4E,KAAKC,QAAQktB,oBAClE/xB,KAAKkxB,UAAY,GAGnBlxB,KAAKgyB,mBACL/pB,YAAW,KACTjI,KAAK0qB,QAAQ,GACZ1qB,KAAKoxB,aAAe,GAAK,EAChC,CAGEQ,eAEE,GADA5xB,KAAK4E,KAAKgB,IAAI,eAAgB5F,KAAK4xB,eAC9B5xB,KAAKixB,UAAW,CACnB,MAAM3pB,EAAQtH,KAAK4E,KAAKyU,UACxBrZ,KAAKixB,WAAY,EACjBjxB,KAAK6uB,WAAY,EACjB7uB,KAAKkxB,UAAYlxB,KAAK4E,KAAKC,QAAQotB,sBAC/B3qB,GAASA,EAAMmG,WAAWb,QAAUtF,EAAMzG,OAASb,KAAK4E,KAAKC,QAAQktB,oBACvE/xB,KAAKkxB,UAAY,GAEnBlxB,KAAKgyB,kBACX,CACA,CAGEA,mBACE,MAAM,KAAEptB,GAAS5E,KACXsH,EAAQtH,KAAK4E,KAAKyU,WAClB,QAAExU,GAAYD,EAsCpB,GApCsC,SAAlCC,EAAQqtB,uBACVrtB,EAAQstB,iBAAkB,EAC1BnyB,KAAK2xB,kBAAe/vB,GACuB,SAAlCiD,EAAQqtB,uBACjBrtB,EAAQstB,iBAAkB,EAC1BnyB,KAAKkxB,UAAY,EACjBlxB,KAAK2xB,kBAAe/vB,GACX5B,KAAKixB,WAAarsB,EAAKwtB,oBAEhCpyB,KAAK2xB,aAAe/sB,EAAKwtB,oBAEzBpyB,KAAK2xB,aAAe3xB,KAAK4E,KAAKirB,iBAGhC7vB,KAAKuxB,aAAejqB,GAAOkQ,wBAE3B5S,EAAKkT,WAAWqC,UAGhBna,KAAKmxB,cAAgBhY,QAAQnZ,KAAKkxB,WAAalxB,KAAKkxB,UAAY,IAChElxB,KAAKqyB,aAAelZ,QAAQnZ,KAAK2xB,eACVrqB,GAAOQ,QAAQO,oBACbrI,KAAK6uB,YAAcjqB,EAAKqS,WAAWC,aACvDlX,KAAKqyB,aAQRryB,KAAKqxB,oBAAsBxsB,EAAQstB,kBAAmB,GAPtDnyB,KAAKqxB,qBAAsB,EAEvBrxB,KAAKixB,WAAa3pB,IACpBA,EAAMwP,sBACNxP,EAAMyP,wBAKV/W,KAAKsxB,mBAAqBtxB,KAAKqxB,qBAAuBrxB,KAAK4E,KAAKC,QAAQ6V,UAAYoW,GACpF9wB,KAAKwxB,gBAAkBxxB,KAAKqxB,oBAAsBzsB,EAAKwB,QAAUxB,EAAK0tB,IAEjEtyB,KAAKmxB,cAWR,OAVAnxB,KAAKkxB,UAAY,EACjBlxB,KAAKqyB,cAAe,EACpBryB,KAAKsxB,mBAAoB,EACzBtxB,KAAKqxB,qBAAsB,OACvBrxB,KAAKixB,YACHrsB,EAAKwB,UACPxB,EAAKwB,QAAQpE,MAAMuwB,QAAUhoB,OAAOumB,KAEtClsB,EAAKgW,eAAe,KAKpB5a,KAAKqyB,cAAgBryB,KAAK2xB,cAAgB3xB,KAAK2xB,aAAa/B,WAE9D5vB,KAAKoxB,cAAe,EACpBpxB,KAAKyxB,gBAAkBzxB,KAAK4E,KAAKuB,UACjCnG,KAAK0xB,gBAAkB1xB,KAAK4E,KAAKyU,WAAWnO,cAExCtG,EAAKuB,YACPvB,EAAKuB,UAAUnE,MAAMwwB,SAAW,SAChC5tB,EAAKuB,UAAUnE,MAAMnB,MAAQ+D,EAAKiH,aAAarK,EAAI,OAGrDxB,KAAKoxB,cAAe,EAGlBpxB,KAAKixB,WAEHjxB,KAAKqxB,qBACHzsB,EAAKwB,UACPxB,EAAKwB,QAAQpE,MAAMuwB,QAAUhoB,OAAOumB,KAEtClsB,EAAKgW,eAAe,KAEhB5a,KAAKsxB,mBAAqB1sB,EAAK0tB,KACjC1tB,EAAK0tB,GAAGtwB,MAAMuwB,QAAUhoB,OAAOumB,KAE7BlsB,EAAKwB,UACPxB,EAAKwB,QAAQpE,MAAMuwB,QAAU,MAI7BvyB,KAAKqyB,eACPryB,KAAKyyB,yBACDzyB,KAAKuxB,eAEPvxB,KAAKuxB,aAAavvB,MAAM0wB,WAAa,YAIrC1yB,KAAKuxB,aAAavvB,MAAMuwB,QAAUhoB,OAAOumB,OAGpC9wB,KAAK6uB,YAGVjqB,EAAKqS,WAAW4N,YAAY,KAC9BjgB,EAAKqS,WAAW4N,YAAY,GAAGzjB,GAAGY,MAAMsjB,QAAU,QAEhD1gB,EAAKqS,WAAW4N,YAAY,KAC9BjgB,EAAKqS,WAAW4N,YAAY,GAAGzjB,GAAGY,MAAMsjB,QAAU,QAGhDtlB,KAAKoxB,cACmB,IAAtBxsB,EAAKqS,WAAWzV,IAElBoD,EAAKqS,WAAWkO,gBAChBvgB,EAAKqS,WAAWE,UAI1B,CAGEuT,SACM1qB,KAAKixB,WACFjxB,KAAKmxB,eACLnxB,KAAKuxB,cACyB,QAA9BvxB,KAAKuxB,aAAarwB,QAOvB,IAAI8Q,SAASC,IACX,IAAI0gB,GAAU,EACVC,GAAa,EACjBxe,EAA6CpU,KAAKuxB,cAAexmB,SAAQ,KACvE4nB,GAAU,EACLC,GACH3gB,GAAQ,EACpB,IAEQhK,YAAW,KACT2qB,GAAa,EACTD,GACF1gB,GAAQ,EACpB,GACW,IACHhK,WAAWgK,EAAS,IAAI,IACvBlH,SAAQ,IAAM/K,KAAK6yB,cAEtB7yB,KAAK6yB,WAEX,CAGEA,YACE7yB,KAAK4E,KAAKwB,SAASpE,MAAM8wB,YAAY,6BAA8B9yB,KAAKkxB,UAAY,MAEpFlxB,KAAK4E,KAAKkB,SACR9F,KAAKixB,UAAY,wBAA0B,yBAI7CjxB,KAAK4E,KAAKkB,SAEP,eAAiB9F,KAAKixB,UAAY,KAAO,QAG5CjxB,KAAK4E,KAAKwB,SAAS8Y,UAAUS,OAAO,mBAAoB3f,KAAKixB,WAEzDjxB,KAAKixB,WACHjxB,KAAKuxB,eAEPvxB,KAAKuxB,aAAavvB,MAAMuwB,QAAU,KAEpCvyB,KAAK+yB,uBACI/yB,KAAK6uB,WACd7uB,KAAKgzB,wBAGFhzB,KAAKmxB,eACRnxB,KAAKizB,sBAEX,CAGEA,uBACE,MAAM,KAAEruB,GAAS5E,KACjBA,KAAKsW,OAAStW,KAAKixB,UACnBjxB,KAAKgxB,SAAWhxB,KAAK6uB,UACrB7uB,KAAKixB,WAAY,EACjBjxB,KAAK6uB,WAAY,EAEjBjqB,EAAKkB,SACH9F,KAAKsW,OAAS,sBAAwB,uBAIxC1R,EAAKkB,SAEF,eAAiB9F,KAAKsW,OAAS,QAAU,WAGxCtW,KAAKgxB,SACPpsB,EAAKiC,UACI7G,KAAKsW,SACVtW,KAAKqyB,cAAgBztB,EAAKuB,YAC5BvB,EAAKuB,UAAUnE,MAAMwwB,SAAW,UAChC5tB,EAAKuB,UAAUnE,MAAMnB,MAAQ,QAE/B+D,EAAKyU,WAAWtC,sBAEtB,CAGEgc,sBACE,MAAM,KAAEnuB,GAAS5E,KACbA,KAAKqyB,eACHryB,KAAKoxB,cAAgBpxB,KAAKyxB,iBAAmBzxB,KAAK0xB,kBACpD1xB,KAAKkzB,WAAWlzB,KAAKyxB,gBAAiB,YAAa,sBACnDzxB,KAAKkzB,WAAWlzB,KAAK0xB,gBAAiB,YAAa,SAGjD9sB,EAAKyU,YACPzU,EAAKyU,UAAUvC,sBACf9W,KAAKkzB,WACHtuB,EAAKyU,UAAUlT,UACf,YACAvB,EAAKyU,UAAUd,yBAKjBvY,KAAKsxB,mBAAqB1sB,EAAK0tB,IACjCtyB,KAAKkzB,WAAWtuB,EAAK0tB,GAAI,UAAW/nB,OAAO3F,EAAKC,QAAQ6V,YAGtD1a,KAAKqxB,qBAAuBzsB,EAAKwB,SACnCpG,KAAKkzB,WAAWtuB,EAAKwB,QAAS,UAAW,IAE/C,CAGE4sB,wBACE,MAAM,KAAEpuB,GAAS5E,KAEbA,KAAKqyB,cACPryB,KAAKyyB,wBAAuB,GAI1BzyB,KAAKsxB,mBAAqB1sB,EAAK8V,UAAY,KAAQ9V,EAAK0tB,IAC1DtyB,KAAKkzB,WAAWtuB,EAAK0tB,GAAI,UAAW,KAGlCtyB,KAAKqxB,qBAAuBzsB,EAAKwB,SACnCpG,KAAKkzB,WAAWtuB,EAAKwB,QAAS,UAAW,IAE/C,CAMEqsB,uBAAuBjN,GACrB,IAAKxlB,KAAK2xB,aAAc,OAExB,MAAM,KAAE/sB,GAAS5E,MACX,UAAE4vB,GAAc5vB,KAAK2xB,cACrB,UAAEtY,EAAS,aAAExN,GAAiBjH,EAEpC,GAAI5E,KAAKoxB,cAAgBxB,GAAa5vB,KAAKyxB,iBAAmBzxB,KAAK0xB,gBAAiB,CAClF,MAAMyB,GAAoBtnB,EAAarK,GAAKxB,KAAK2xB,aAAanwB,EAAIouB,EAAUpuB,GAAKouB,EAAU9tB,EACrFsxB,GAAoBvnB,EAAapK,GAAKzB,KAAK2xB,aAAalwB,EAAImuB,EAAUnuB,GAAKmuB,EAAU7tB,EACrFsxB,EAAmBxnB,EAAarK,EAAIouB,EAAU9tB,EAC9CwxB,EAAmBznB,EAAapK,EAAImuB,EAAU7tB,EAGhDyjB,GACFxlB,KAAKkzB,WACHlzB,KAAKyxB,gBACL,YACAlwB,EAAkB4xB,EAAkBC,IAGtCpzB,KAAKkzB,WACHlzB,KAAK0xB,gBACL,YACAnwB,EAAkB8xB,EAAkBC,MAGtCzf,EAAa7T,KAAKyxB,gBAAiB0B,EAAkBC,GACrDvf,EAAa7T,KAAK0xB,gBAAiB2B,EAAkBC,GAE7D,CAEQja,IACFpG,EAAeoG,EAAUjD,IAAKwZ,GAAa5vB,KAAK2xB,cAChDtY,EAAUtL,cAAgB/N,KAAK2xB,aAAa7vB,EAAIuX,EAAUxY,MACtD2kB,EACFxlB,KAAKkzB,WAAW7Z,EAAUlT,UAAW,YAAakT,EAAUd,uBAE5Dc,EAAUtC,sBAGlB,CAQEmc,WAAW7hB,EAAQzF,EAAMjK,GACvB,IAAK3B,KAAKkxB,UAER,YADA7f,EAAOrP,MAAM4J,GAAQjK,GAIvB,MAAM,WAAEmW,GAAe9X,KAAK4E,KAEtB2uB,EAAY,CAChBvf,SAAUhU,KAAKkxB,UACfzY,OAAQzY,KAAK4E,KAAKC,QAAQ4T,OAC1BD,WAAYA,KACLV,EAAW2S,iBAAiB/b,QAC/B1O,KAAKizB,sBACf,EAEM5hB,UAEFkiB,EAAU3nB,GAAQjK,EAClBmW,EAAWO,gBAAgBkb,EAC/B,ECvOA,MAAMC,GAAiB,CACrB7W,gBAAgB,EAChBqI,QAAS,GACT6H,MAAM,EACN5O,cAAc,EACd1D,qBAAqB,EACrBuX,sBAAuB,IACvBG,sBAAuB,IACvBtZ,sBAAuB,IACvB2P,QAAQ,EACRC,WAAW,EACXN,aAAa,EACb8J,kBAAmB,IACnBrS,yBAAyB,EACzBsP,iBAAkB,gBAClByE,cAAe,QACfC,UAAW,kBACXtQ,gBAAiB,OACjB4K,kBAAmB,MACnBJ,eAAgB,IAChBlT,UAAW,GAEXvT,MAAO,EACPwD,SAAU,6BACViH,QAAS,CAAC,EAAG,GACb6G,OAAQ,4BAMV,MAAMkb,WAAmBrlB,GAIvBpK,YAAYW,GACVqL,QAEAlQ,KAAK6E,QAAU7E,KAAK4zB,gBAAgB/uB,GAAW,CAAC,GAOhD7E,KAAKmkB,OAAS,CAAE3iB,EAAG,EAAGC,EAAG,GAMzBzB,KAAK6zB,kBAAoB,CAAEryB,EAAG,EAAGC,EAAG,GAOpCzB,KAAK6L,aAAe,CAAErK,EAAG,EAAGC,EAAG,GAK/BzB,KAAK0a,UAAY,EACjB1a,KAAKkW,UAAY,EACjBlW,KAAK2lB,eAAiB,EACtB3lB,KAAKsW,QAAS,EACdtW,KAAK8zB,cAAe,EACpB9zB,KAAK+zB,UAAW,EAMhB/zB,KAAKg0B,iBAAmB,CAAC,EAEzBh0B,KAAKoyB,yBAAsBxwB,EAG3B5B,KAAK0sB,YAAS9qB,EAEd5B,KAAKoG,aAAUxE,EAEf5B,KAAKwoB,cAAW5mB,EAEhB5B,KAAKmG,eAAYvE,EAEjB5B,KAAKmhB,gBAAavf,EAElB5B,KAAKqZ,eAAYzX,EAEjB5B,KAAKkhB,OAAS,IAAIxM,EAClB1U,KAAK8X,WAAa,IAAI0S,GACtBxqB,KAAKiX,WAAa,IAAIuN,GAAWxkB,MACjCA,KAAKga,SAAW,IAAI+F,GAAS/f,MAC7BA,KAAKqW,OAAS,IAAI0a,GAAO/wB,MACzBA,KAAKi0B,SAAW,IAAIvM,GAAS1nB,MAC7BA,KAAK8S,cAAgB,IAAIqd,GAAcnwB,KAC3C,CAGEwQ,OACE,GAAIxQ,KAAKsW,QAAUtW,KAAK8zB,aACtB,OAAO,EAGT9zB,KAAKsW,QAAS,EACdtW,KAAK8F,SAAS,QACd9F,KAAK8F,SAAS,cAEd9F,KAAKk0B,uBAGL,IAAIC,EAAc,aA8ElB,OA7EIn0B,KAAKga,SAASwG,gBAChB2T,GAAe,gBAEbn0B,KAAK6E,QAAQuvB,YACfD,GAAe,IAAMn0B,KAAK6E,QAAQuvB,WAEhCp0B,KAAKoG,UACPpG,KAAKoG,QAAQnF,WAAa,IAAMkzB,GAGlCn0B,KAAKkW,UAAYlW,KAAK6E,QAAQsC,OAAS,EACvCnH,KAAK2lB,eAAiB3lB,KAAKkW,UAC3BlW,KAAK8F,SAAS,eAGd9F,KAAKq0B,YAAc,IAAIrJ,GAAYhrB,OAG/ByH,OAAO6sB,MAAMt0B,KAAKkW,YACflW,KAAKkW,UAAY,GACjBlW,KAAKkW,WAAalW,KAAKuO,iBAC5BvO,KAAKkW,UAAY,GAGdlW,KAAKga,SAASwG,eAEjBxgB,KAAKkiB,gBAIPliB,KAAKu0B,aAELv0B,KAAKmkB,OAAO1iB,EAAIgK,OAAO+oB,YAEvBx0B,KAAKg0B,iBAAmBh0B,KAAKqO,YAAYrO,KAAKkW,WAC9ClW,KAAK8F,SAAS,cAAe,CAC3BqB,MAAOnH,KAAKkW,UACZ9O,KAAMpH,KAAKg0B,iBACX1sB,WAAO1F,IAIT5B,KAAKoyB,oBAAsBpyB,KAAK6vB,iBAChC7vB,KAAK8F,SAAS,iBAEd9F,KAAK2F,GAAG,uBAAuB,KAC7B,MAAM,YAAEkf,GAAgB7kB,KAAKiX,WAGzB4N,EAAY,KACdA,EAAY,GAAGzjB,GAAGY,MAAMsjB,QAAU,QAClCtlB,KAAK0mB,WAAW7B,EAAY,GAAI7kB,KAAKkW,UAAY,IAE/C2O,EAAY,KACdA,EAAY,GAAGzjB,GAAGY,MAAMsjB,QAAU,QAClCtlB,KAAK0mB,WAAW7B,EAAY,GAAI7kB,KAAKkW,UAAY,IAGnDlW,KAAK6W,cAEL7W,KAAK8S,cAAc+T,aAEnB7mB,KAAKkhB,OAAOtM,IAAInJ,OAAQ,SAAUzL,KAAKy0B,kBAAkBlkB,KAAKvQ,OAC9DA,KAAKkhB,OAAOtM,IAAInJ,OAAQ,SAAUzL,KAAK00B,wBAAwBnkB,KAAKvQ,OACpEA,KAAK8F,SAAS,aAAa,IAIzB9F,KAAKiX,WAAW4N,YAAY,IAC9B7kB,KAAK0mB,WAAW1mB,KAAKiX,WAAW4N,YAAY,GAAI7kB,KAAKkW,WAEvDlW,KAAK8F,SAAS,UAEd9F,KAAKqW,OAAOwb,OAEZ7xB,KAAK8F,SAAS,cAEP,CACX,CASEggB,eAAe3e,GACb,MAAMye,EAAY5lB,KAAKuO,cAYvB,OAVIvO,KAAK6E,QAAQgoB,OACX1lB,EAAQye,EAAY,IACtBze,GAASye,GAGPze,EAAQ,IACVA,GAASye,IAINjS,EAAMxM,EAAO,EAAGye,EAAY,EACvC,CAEE/O,cACE7W,KAAKiX,WAAW4N,YAAYpf,SAASyf,IACnCA,EAAW5d,OAAOuP,aAAa,GAErC,CAMEjT,KAAKuD,GACHnH,KAAKiX,WAAWoE,YACdrb,KAAK8lB,eAAe3e,GAASnH,KAAK2lB,eAExC,CAKEgP,OACE30B,KAAK4D,KAAK5D,KAAK2lB,eAAiB,EACpC,CAKEiP,OACE50B,KAAK4D,KAAK5D,KAAK2lB,eAAiB,EACpC,CAOElO,UAAUjS,GACRxF,KAAKqZ,WAAW5B,UAAUjS,EAC9B,CAKEkT,aACE1Y,KAAKqZ,WAAWX,YACpB,CAMEmD,QACO7b,KAAKqW,OAAOC,SAAUtW,KAAK8zB,eAIhC9zB,KAAK8zB,cAAe,EAEpB9zB,KAAK8F,SAAS,SAEd9F,KAAKkhB,OAAOnM,YACZ/U,KAAKqW,OAAOwF,QAChB,CASEhV,UACE,IAAK7G,KAAK8zB,aAGR,OAFA9zB,KAAK6E,QAAQqtB,sBAAwB,YACrClyB,KAAK6b,QAIP7b,KAAK8F,SAAS,WAEd9F,KAAK0E,WAAa,CAAC,EAEf1E,KAAKmhB,aACPnhB,KAAKmhB,WAAWG,YAAc,KAC9BthB,KAAKmhB,WAAWI,WAAa,MAG/BvhB,KAAKoG,SAASW,SAEd/G,KAAKiX,WAAW4N,YAAYpf,SAASyf,IACnCA,EAAW5d,OAAOT,SAAS,IAG7B7G,KAAK8S,cAAcjM,UACnB7G,KAAKkhB,OAAOnM,WAChB,CAOE8f,oBAAoBC,GAClB90B,KAAK8S,cAAc2d,cAAcqE,GACjC90B,KAAKiX,WAAW4N,YAAYpf,SAAQ,CAACyf,EAAYG,KAC/C,IAAI0P,GAAwB/0B,KAAKqZ,WAAWlS,OAAS,GAAK,EAAIke,EAC1DrlB,KAAK6lB,YACPkP,EAAuB/0B,KAAK8lB,eAAeiP,IAEzCA,IAAyBD,IAE3B90B,KAAK0mB,WAAWxB,EAAY4P,GAAY,GAG9B,IAANzP,IACFrlB,KAAKqZ,UAAY6L,EAAW5d,MAC5B4d,EAAW5d,OAAOqP,aAAY,IAExC,IAGI3W,KAAK8F,SAAS,SAClB,CAUE4gB,WAAWsO,EAAQ7tB,EAAOkQ,GAKxB,GAJIrX,KAAK6lB,YACP1e,EAAQnH,KAAK8lB,eAAe3e,IAG1B6tB,EAAO1tB,MAAO,CAChB,GAAI0tB,EAAO1tB,MAAMH,QAAUA,IAAUkQ,EAGnC,OAIF2d,EAAO1tB,MAAMT,UACbmuB,EAAO1tB,WAAQ1F,CACrB,CAGI,IAAK5B,KAAK6lB,YAAc1e,EAAQ,GAAKA,GAASnH,KAAKuO,eACjD,OAGF,MAAMtH,EAAWjH,KAAKqO,YAAYlH,GAClC6tB,EAAO1tB,MAAQ,IAAI2O,EAAMhP,EAAUE,EAAOnH,MAGtCmH,IAAUnH,KAAKkW,YACjBlW,KAAKqZ,UAAY2b,EAAO1tB,OAG1B0tB,EAAO1tB,MAAMsC,OAAOorB,EAAO5zB,GAC/B,CAGE0X,yBACE,MAAO,CACLtX,EAAGxB,KAAK6L,aAAarK,EAAI,EACzBC,EAAGzB,KAAK6L,aAAapK,EAAI,EAE/B,CAQE8yB,WAAWld,GAIT,GAAIrX,KAAK8zB,aAGP,OAMF,MAAMxoB,EAAkBF,EAAgBpL,KAAK6E,QAAS7E,OAEjDqX,GAAS3D,EAAYpI,EAAiBtL,KAAK6zB,qBAOhD5gB,EAAejT,KAAK6zB,kBAAmBvoB,GAEvCtL,KAAK8F,SAAS,gBAEdmN,EAAejT,KAAK6L,aAAc7L,KAAK6zB,mBAEvC7zB,KAAK00B,0BAEL10B,KAAK8F,SAAS,gBAId9F,KAAKiX,WAAWE,OAAOnX,KAAKqW,OAAOC,SAE9BtW,KAAK+zB,UAAYtoB,OAAOwpB,WAAW,sBAAsBhF,SAC5DjwB,KAAKkiB,gBAGPliB,KAAK8F,SAAS,UAClB,CAKE8U,eAAe2X,GACbvyB,KAAK0a,UAAYrN,KAAKP,IAAIylB,EAAS,GAC/BvyB,KAAKsyB,KACPtyB,KAAKsyB,GAAGtwB,MAAMuwB,QAAUhoB,OAAOvK,KAAK0a,UAAY1a,KAAK6E,QAAQ6V,WAEnE,CAKEwH,gBACOliB,KAAK+zB,WACR/zB,KAAK+zB,UAAW,EAChB/zB,KAAKoG,SAAS8Y,UAAUtK,IAAI,mBAElC,CAOE6f,oBACEz0B,KAAKu0B,aAOD,oBAAoBW,KAAKzpB,OAAO3H,UAAUqxB,YAC5CltB,YAAW,KACTjI,KAAKu0B,YAAY,GAChB,IAET,CASEG,0BACE10B,KAAKo1B,gBAAgB,EAAG3pB,OAAO+oB,YACnC,CAMEY,gBAAgB5zB,EAAGC,GACjBzB,KAAKmkB,OAAO3iB,EAAIA,EAChBxB,KAAKmkB,OAAO1iB,EAAIA,EAChBzB,KAAK8F,SAAS,qBAClB,CAQEouB,uBAEEl0B,KAAKoG,QAAUpF,EAAc,OAAQ,OACrChB,KAAKoG,QAAQK,aAAa,WAAY,MACtCzG,KAAKoG,QAAQK,aAAa,OAAQ,UAGlCzG,KAAKwoB,SAAWxoB,KAAKoG,QAIrBpG,KAAKsyB,GAAKtxB,EAAc,WAAY,MAAOhB,KAAKoG,SAChDpG,KAAKmhB,WAAangB,EAAc,oBAAqB,UAAWhB,KAAKoG,SACrEpG,KAAKmG,UAAYnF,EAAc,kBAAmB,MAAOhB,KAAKmhB,YAG9DnhB,KAAKmhB,WAAW1a,aAAa,uBAAwB,YACrDzG,KAAKmG,UAAUM,aAAa,YAAa,OACzCzG,KAAKmG,UAAUM,aAAa,KAAM,eAElCzG,KAAKiX,WAAWmO,gBAEhBplB,KAAK6tB,GAAK,IAAIM,GAAGnuB,MACjBA,KAAK6tB,GAAGrd,QAGPxQ,KAAK6E,QAAQ1D,YAAcE,SAASg0B,MAAM/zB,YAAYtB,KAAKoG,QAChE,CAWEypB,iBACE,OAAOA,GACL7vB,KAAKkW,UACLlW,KAAKqZ,UAAYrZ,KAAKqZ,UAAUjS,KAAOpH,KAAKg0B,iBAC5Ch0B,KAEN,CAME6lB,UACE,OAAQ7lB,KAAK6E,QAAQgoB,MAAQ7sB,KAAKuO,cAAgB,CACtD,CAOEqlB,gBAAgB/uB,GAOd,OANI4G,OAAOwpB,WAAW,4CAA4ChF,UAChEprB,EAAQqtB,sBAAwB,OAChCrtB,EAAQ8T,sBAAwB,GAI3B,IACF6a,MACA3uB,EAET,ECvwBA,QACA8jB,MAAA,CACAtoB,OAAA,CAAA8D,KAAAf,MAAAkyB,UAAA,GACA/0B,GAAA,CAAA4D,KAAAoG,OAAA+qB,UAAA,GACAC,YAAA,CAAApxB,KAAAgV,QAAAvG,SAAA,GACA9R,OAAA,CAAAqD,KAAAsD,OAAAmL,QAAA,MAEAxL,OACA,OACA3G,WAAA,KAAAJ,OACAm1B,SAAA,KAEA,EACAC,SAAA,CACAC,eACA,YAAAr1B,OAAAs1B,QAAA,SAAAf,EAAAgB,GACA,OAAAhB,EAAA9zB,OAAA80B,EAAA90B,OAAA8zB,EAAAgB,CACA,IAAA90B,MACA,GAEA+0B,UACA,KAAAL,WACA,KAAAA,SAAA,IAAAvlB,EAAA,CACAmkB,UAAA,UACAvlB,QAAA,SAAAtO,GACA0O,SAAA,IACA8C,WAAA4hB,GACA3nB,QAAA,CAAAqjB,IAAA,GAAAyG,OAAA,GAAA1G,KAAA,EAAA2G,MAAA,KAGA,KAAAP,SAAA7vB,GAAA,mBACA,KAAA4vB,aACA,KAAAC,SAAA5wB,KAAAipB,GAAAa,gBAAA,CACA3pB,KAAA,kBACAioB,MAAA,EACAf,UAAA,EACA/qB,QAAA,IAGA6H,KAAA,CACAyiB,aAAA,EACAM,MACA,kHACAD,UAAA,yBASAS,OAAAA,CAAAlrB,EAAAwD,KACAxD,EAAAqF,aAAA,eACArF,EAAAqF,aAAA,mBACArF,EAAAqF,aAAA,kBAEA7B,EAAAe,GAAA,eACAvE,EAAAkO,KAAA1K,EAAAyU,UAAAjS,KAAAZ,GAAA,GACA,IAKA,KAAAgvB,SAAA5wB,KAAAipB,GAAAa,gBAAA,CACA3pB,KAAA,kBACA9D,UAAA,4BACAwrB,SAAA,UACAH,OAAAA,CAAAlrB,EAAAwD,KACA,MAAAoxB,EAAA,GACA,IAAAC,EACA5hB,EACA6hB,GAAA,EAEA,QAAA7Q,EAAA,EAAAA,EAAAzgB,EAAA2J,cAAA8W,IACAhR,EAAAhT,SAAAL,cAAA,OACAqT,EAAA7N,IAAA,KAAAnG,OAAAglB,GAAAtkB,aACAk1B,EAAA50B,SAAAL,cAAA,OACAi1B,EAAAh1B,UAAA,iBACAg1B,EAAA30B,YAAA+S,GACA2hB,EAAA/wB,KAAAgxB,GACA70B,EAAAE,YAAA20B,GACAA,EAAAzJ,QAAAjqB,IACAA,EAAA8O,OAAAwN,QAAA,oBACAja,EAAAhB,KAAAoyB,EAAA9S,QAAA3gB,EAAA8O,QACA,EAIAzM,EAAAe,GAAA,eACAuwB,GAAA,GACAF,EAAAE,GAAAhX,UAAAnY,OAAA,yBAEAivB,EAAApxB,EAAAsR,WAAAgJ,UAAAtK,IAAA,yBACAshB,EAAAtxB,EAAAsR,SAAA,GACA,GAEA,IAGA,KAAAsf,SAAAhlB,OAEA,EACA2lB,YACA,KAAAX,WACA,KAAAA,SAAA3uB,UACA,KAAA2uB,SAAA,KAEA,EACAY,QAAA,CACAC,SAAAx1B,EAAAC,GACA,OAAAD,EAAAC,CACA,ICvIiQ,M,WCQ7Pw1B,IAAY,QACd,GACA,EACA,GACA,EACA,KACA,KACA,MAIF,GAAeA,GAAiB,QCNhC,IACAC,WAAA,CACAC,SAAAA,IAEApvB,OACA,OACA/G,OAAA,CACA,CACAO,SACA,0EACAG,aACA,yEACAF,MAAA,KACAC,OAAA,MAEA,CACAF,SACA,0EACAG,aACA,yEACAF,MAAA,KACAC,OAAA,MAEA,CACAF,SACA,0EACAG,aACA,yEACAF,MAAA,KACAC,OAAA,MAEA,CACAF,SACA,0EACAG,aACA,yEACAF,MAAA,KACAC,OAAA,MAEA,CACAF,SACA,0EACAG,aACA,yEACAF,MAAA,KACAC,OAAA,MAEA,CACAF,SACA,0EACAG,aACA,yEACAF,MAAA,KACAC,OAAA,MAEA,CACAF,SACA,0EACAG,aACA,yEACAF,MAAA,KACAC,OAAA,MAEA,CACAF,SACA,2EACAG,aACA,0EACAF,MAAA,IACAC,OAAA,MAEA,CACAF,SACA,2EACAG,aACA,0EACAF,MAAA,IACAC,OAAA,OAIA,GC9FoQ,MCQhQ,IAAY,QACd,GACAhB,EACAQ,GACA,EACA,KACA,KACA,MAIF,GAAe,GAAiB,O","sources":["webpack://free-design-system/./src/views/gallery/GalleryView.vue","webpack://free-design-system/./src/components/Gallery/VGallery.vue","webpack://free-design-system/../../../src/js/util/util.js","webpack://free-design-system/../../../src/js/core/eventable.js","webpack://free-design-system/../../../src/js/slide/placeholder.js","webpack://free-design-system/../../../src/js/slide/content.js","webpack://free-design-system/../../../src/js/util/viewport-size.js","webpack://free-design-system/../../../src/js/slide/zoom-level.js","webpack://free-design-system/../../../src/js/slide/loader.js","webpack://free-design-system/../../../src/js/core/base.js","webpack://free-design-system/../../../src/js/lightbox/lightbox.js","webpack://free-design-system/../../../src/js/util/dom-events.js","webpack://free-design-system/../../../src/js/slide/pan-bounds.js","webpack://free-design-system/../../../src/js/slide/slide.js","webpack://free-design-system/../../../src/js/gestures/drag-handler.js","webpack://free-design-system/../../../src/js/gestures/zoom-handler.js","webpack://free-design-system/../../../src/js/gestures/tap-handler.js","webpack://free-design-system/../../../src/js/gestures/gestures.js","webpack://free-design-system/../../../src/js/main-scroll.js","webpack://free-design-system/../../../src/js/keyboard.js","webpack://free-design-system/../../../src/js/util/css-animation.js","webpack://free-design-system/../../../src/js/util/spring-easer.js","webpack://free-design-system/../../../src/js/util/spring-animation.js","webpack://free-design-system/../../../src/js/util/animations.js","webpack://free-design-system/../../../src/js/scroll-wheel.js","webpack://free-design-system/../../../src/js/ui/ui-element.js","webpack://free-design-system/../../../src/js/ui/button-arrow.js","webpack://free-design-system/../../../src/js/ui/button-close.js","webpack://free-design-system/../../../src/js/ui/button-zoom.js","webpack://free-design-system/../../../src/js/ui/loading-indicator.js","webpack://free-design-system/../../../src/js/ui/counter-indicator.js","webpack://free-design-system/../../../src/js/ui/ui.js","webpack://free-design-system/../../../src/js/slide/get-thumb-bounds.js","webpack://free-design-system/../../../src/js/opener.js","webpack://free-design-system/../../../src/js/photoswipe.js","webpack://free-design-system/src/components/Gallery/VGallery.vue","webpack://free-design-system/./src/components/Gallery/VGallery.vue?c438","webpack://free-design-system/./src/components/Gallery/VGallery.vue?3eb2","webpack://free-design-system/src/views/gallery/GalleryView.vue","webpack://free-design-system/./src/views/gallery/GalleryView.vue?42c4","webpack://free-design-system/./src/views/gallery/GalleryView.vue?49d7"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('v-gallery',{staticClass:\"mb-48 gallery-view\",attrs:{\"images\":_vm.images,\"height\":100,\"id\":\"gallery-2\"}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"gallery\",attrs:{\"id\":_vm.id}},_vm._l((_vm.imagesData),function(image,key){return _c('a',{key:key,staticClass:\"gallery__image\",attrs:{\"href\":image.largeURL,\"data-pswp-width\":image.width,\"data-pswp-height\":image.height,\"data-cropped\":\"true\",\"target\":\"_blank\",\"rel\":\"noreferrer\"}},[_c('img',{attrs:{\"src\":image.thumbnailURL,\"alt\":\"\"}})])}),0)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n/**\r\n * @template {keyof HTMLElementTagNameMap} T\r\n * @param {string} className\r\n * @param {T} tagName\r\n * @param {Node} [appendToEl]\r\n * @returns {HTMLElementTagNameMap[T]}\r\n */\r\nexport function createElement(className, tagName, appendToEl) {\r\n  const el = document.createElement(tagName);\r\n  if (className) {\r\n    el.className = className;\r\n  }\r\n  if (appendToEl) {\r\n    appendToEl.appendChild(el);\r\n  }\r\n  return el;\r\n}\r\n\r\n/**\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {Point}\r\n */\r\nexport function equalizePoints(p1, p2) {\r\n  p1.x = p2.x;\r\n  p1.y = p2.y;\r\n  if (p2.id !== undefined) {\r\n    p1.id = p2.id;\r\n  }\r\n  return p1;\r\n}\r\n\r\n/**\r\n * @param {Point} p\r\n */\r\nexport function roundPoint(p) {\r\n  p.x = Math.round(p.x);\r\n  p.y = Math.round(p.y);\r\n}\r\n\r\n/**\r\n * Returns distance between two points.\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {number}\r\n */\r\nexport function getDistanceBetween(p1, p2) {\r\n  const x = Math.abs(p1.x - p2.x);\r\n  const y = Math.abs(p1.y - p2.y);\r\n  return Math.sqrt((x * x) + (y * y));\r\n}\r\n\r\n/**\r\n * Whether X and Y positions of points are equal\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {boolean}\r\n */\r\nexport function pointsEqual(p1, p2) {\r\n  return p1.x === p2.x && p1.y === p2.y;\r\n}\r\n\r\n/**\r\n * The float result between the min and max values.\r\n *\r\n * @param {number} val\r\n * @param {number} min\r\n * @param {number} max\r\n * @returns {number}\r\n */\r\nexport function clamp(val, min, max) {\r\n  return Math.min(Math.max(val, min), max);\r\n}\r\n\r\n/**\r\n * Get transform string\r\n *\r\n * @param {number} x\r\n * @param {number} [y]\r\n * @param {number} [scale]\r\n * @returns {string}\r\n */\r\nexport function toTransformString(x, y, scale) {\r\n  let propValue = `translate3d(${x}px,${y || 0}px,0)`;\r\n\r\n  if (scale !== undefined) {\r\n    propValue += ` scale3d(${scale},${scale},1)`;\r\n  }\r\n\r\n  return propValue;\r\n}\r\n\r\n/**\r\n * Apply transform:translate(x, y) scale(scale) to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {number} x\r\n * @param {number} [y]\r\n * @param {number} [scale]\r\n */\r\nexport function setTransform(el, x, y, scale) {\r\n  el.style.transform = toTransformString(x, y, scale);\r\n}\r\n\r\nconst defaultCSSEasing = 'cubic-bezier(.4,0,.22,1)';\r\n\r\n/**\r\n * Apply CSS transition to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string} [prop] CSS property to animate\r\n * @param {number} [duration] in ms\r\n * @param {string} [ease] CSS easing function\r\n */\r\nexport function setTransitionStyle(el, prop, duration, ease) {\r\n  // inOut: 'cubic-bezier(.4, 0, .22, 1)', // for \"toggle state\" transitions\r\n  // out: 'cubic-bezier(0, 0, .22, 1)', // for \"show\" transitions\r\n  // in: 'cubic-bezier(.4, 0, 1, 1)'// for \"hide\" transitions\r\n  el.style.transition = prop\r\n    ? `${prop} ${duration}ms ${ease || defaultCSSEasing}`\r\n    : 'none';\r\n}\r\n\r\n/**\r\n * Apply width and height CSS properties to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string | number} w\r\n * @param {string | number} h\r\n */\r\nexport function setWidthHeight(el, w, h) {\r\n  el.style.width = (typeof w === 'number') ? `${w}px` : w;\r\n  el.style.height = (typeof h === 'number') ? `${h}px` : h;\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n */\r\nexport function removeTransitionStyle(el) {\r\n  setTransitionStyle(el);\r\n}\r\n\r\n/**\r\n * @param {HTMLImageElement} img\r\n * @returns {Promise<HTMLImageElement | void>}\r\n */\r\nexport function decodeImage(img) {\r\n  if ('decode' in img) {\r\n    return img.decode().catch(() => {});\r\n  }\r\n\r\n  if (img.complete) {\r\n    return Promise.resolve(img);\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    img.onload = () => resolve(img);\r\n    img.onerror = reject;\r\n  });\r\n}\r\n\r\n/** @typedef {LOAD_STATE[keyof LOAD_STATE]} LoadState */\r\n/** @type {{ IDLE: 'idle'; LOADING: 'loading'; LOADED: 'loaded'; ERROR: 'error' }} */\r\nexport const LOAD_STATE = {\r\n  IDLE: 'idle',\r\n  LOADING: 'loading',\r\n  LOADED: 'loaded',\r\n  ERROR: 'error',\r\n};\r\n\r\n\r\n/**\r\n * Check if click or keydown event was dispatched\r\n * with a special key or via mouse wheel.\r\n *\r\n * @param {MouseEvent | KeyboardEvent} e\r\n * @returns {boolean}\r\n */\r\nexport function specialKeyUsed(e) {\r\n  return ('button' in e && e.button === 1) || e.ctrlKey || e.metaKey || e.altKey || e.shiftKey;\r\n}\r\n\r\n/**\r\n * Parse `gallery` or `children` options.\r\n *\r\n * @param {import('../photoswipe.js').ElementProvider} [option]\r\n * @param {string} [legacySelector]\r\n * @param {HTMLElement | Document} [parent]\r\n * @returns HTMLElement[]\r\n */\r\nexport function getElementsFromOption(option, legacySelector, parent = document) {\r\n  /** @type {HTMLElement[]} */\r\n  let elements = [];\r\n\r\n  if (option instanceof Element) {\r\n    elements = [option];\r\n  } else if (option instanceof NodeList || Array.isArray(option)) {\r\n    elements = Array.from(option);\r\n  } else {\r\n    const selector = typeof option === 'string' ? option : legacySelector;\r\n    if (selector) {\r\n      elements = Array.from(parent.querySelectorAll(selector));\r\n    }\r\n  }\r\n\r\n  return elements;\r\n}\r\n\r\n/**\r\n * Check if variable is PhotoSwipe class\r\n *\r\n * @param {any} fn\r\n * @returns {boolean}\r\n */\r\nexport function isPswpClass(fn) {\r\n  return typeof fn === 'function'\r\n    && fn.prototype\r\n    && fn.prototype.goTo;\r\n}\r\n\r\n/**\r\n * Check if browser is Safari\r\n *\r\n * @returns {boolean}\r\n */\r\nexport function isSafari() {\r\n  return !!(navigator.vendor && navigator.vendor.match(/apple/i));\r\n}\r\n\r\n","/** @typedef {import('../lightbox/lightbox.js').default} PhotoSwipeLightbox */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\r\n/** @typedef {import('../ui/ui-element.js').UIElementData} UIElementData */\r\n/** @typedef {import('../slide/content.js').default} ContentDefault */\r\n/** @typedef {import('../slide/slide.js').default} Slide */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n/** @typedef {import('../slide/zoom-level.js').default} ZoomLevel */\r\n/** @typedef {import('../slide/get-thumb-bounds.js').Bounds} Bounds */\r\n\r\n/**\r\n * Allow adding an arbitrary props to the Content\r\n * https://photoswipe.com/custom-content/#using-webp-image-format\r\n * @typedef {ContentDefault & Record<string, any>} Content\r\n */\r\n/** @typedef {{ x?: number; y?: number }} Point */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeEventsMap https://photoswipe.com/events/\r\n *\r\n *\r\n * https://photoswipe.com/adding-ui-elements/\r\n *\r\n * @prop {undefined} uiRegister\r\n * @prop {{ data: UIElementData }} uiElementCreate\r\n *\r\n *\r\n * https://photoswipe.com/events/#initialization-events\r\n *\r\n * @prop {undefined} beforeOpen\r\n * @prop {undefined} firstUpdate\r\n * @prop {undefined} initialLayout\r\n * @prop {undefined} change\r\n * @prop {undefined} afterInit\r\n * @prop {undefined} bindEvents\r\n *\r\n *\r\n * https://photoswipe.com/events/#opening-or-closing-transition-events\r\n *\r\n * @prop {undefined} openingAnimationStart\r\n * @prop {undefined} openingAnimationEnd\r\n * @prop {undefined} closingAnimationStart\r\n * @prop {undefined} closingAnimationEnd\r\n *\r\n *\r\n * https://photoswipe.com/events/#closing-events\r\n *\r\n * @prop {undefined} close\r\n * @prop {undefined} destroy\r\n *\r\n *\r\n * https://photoswipe.com/events/#pointer-and-gesture-events\r\n *\r\n * @prop {{ originalEvent: PointerEvent }} pointerDown\r\n * @prop {{ originalEvent: PointerEvent }} pointerMove\r\n * @prop {{ originalEvent: PointerEvent }} pointerUp\r\n * @prop {{ bgOpacity: number }} pinchClose can be default prevented\r\n * @prop {{ panY: number }} verticalDrag can be default prevented\r\n *\r\n *\r\n * https://photoswipe.com/events/#slide-content-events\r\n *\r\n * @prop {{ content: Content }} contentInit\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoad can be default prevented\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoadImage can be default prevented\r\n * @prop {{ content: Content; slide: Slide; isError?: boolean }} loadComplete\r\n * @prop {{ content: Content; slide: Slide }} loadError\r\n * @prop {{ content: Content; width: number; height: number }} contentResize can be default prevented\r\n * @prop {{ content: Content; width: number; height: number; slide: Slide }} imageSizeChange\r\n * @prop {{ content: Content }} contentLazyLoad can be default prevented\r\n * @prop {{ content: Content }} contentAppend can be default prevented\r\n * @prop {{ content: Content }} contentActivate can be default prevented\r\n * @prop {{ content: Content }} contentDeactivate can be default prevented\r\n * @prop {{ content: Content }} contentRemove can be default prevented\r\n * @prop {{ content: Content }} contentDestroy can be default prevented\r\n *\r\n *\r\n * undocumented\r\n *\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} imageClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} bgClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} tapAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} doubleTapAction can be default prevented\r\n *\r\n * @prop {{ originalEvent: KeyboardEvent }} keydown can be default prevented\r\n * @prop {{ x: number; dragging: boolean }} moveMainScroll\r\n * @prop {{ slide: Slide }} firstZoomPan\r\n * @prop {{ slide: Slide | undefined, data: SlideData, index: number }} gettingData\r\n * @prop {undefined} beforeResize\r\n * @prop {undefined} resize\r\n * @prop {undefined} viewportSize\r\n * @prop {undefined} updateScrollOffset\r\n * @prop {{ slide: Slide }} slideInit\r\n * @prop {{ slide: Slide }} afterSetContent\r\n * @prop {{ slide: Slide }} slideLoad\r\n * @prop {{ slide: Slide }} appendHeavy can be default prevented\r\n * @prop {{ slide: Slide }} appendHeavyContent\r\n * @prop {{ slide: Slide }} slideActivate\r\n * @prop {{ slide: Slide }} slideDeactivate\r\n * @prop {{ slide: Slide }} slideDestroy\r\n * @prop {{ destZoomLevel: number, centerPoint: Point | undefined, transitionDuration: number | false | undefined }} beforeZoomTo\r\n * @prop {{ slide: Slide }} zoomPanUpdate\r\n * @prop {{ slide: Slide }} initialZoomPan\r\n * @prop {{ slide: Slide }} calcSlideSize\r\n * @prop {undefined} resolutionChanged\r\n * @prop {{ originalEvent: WheelEvent }} wheel can be default prevented\r\n * @prop {{ content: Content }} contentAppendImage can be default prevented\r\n * @prop {{ index: number; itemData: SlideData }} lazyLoadSlide can be default prevented\r\n * @prop {undefined} lazyLoad\r\n * @prop {{ slide: Slide }} calcBounds\r\n * @prop {{ zoomLevels: ZoomLevel, slideData: SlideData }} zoomLevelsUpdate\r\n *\r\n *\r\n * legacy\r\n *\r\n * @prop {undefined} init\r\n * @prop {undefined} initialZoomIn\r\n * @prop {undefined} initialZoomOut\r\n * @prop {undefined} initialZoomInEnd\r\n * @prop {undefined} initialZoomOutEnd\r\n * @prop {{ dataSource: DataSource | undefined, numItems: number }} numItems\r\n * @prop {{ itemData: SlideData; index: number }} itemData\r\n * @prop {{ index: number, itemData: SlideData, instance: PhotoSwipe }} thumbBounds\r\n */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeFiltersMap https://photoswipe.com/filters/\r\n *\r\n * @prop {(numItems: number, dataSource: DataSource | undefined) => number} numItems\r\n * Modify the total amount of slides. Example on Data sources page.\r\n * https://photoswipe.com/filters/#numitems\r\n *\r\n * @prop {(itemData: SlideData, index: number) => SlideData} itemData\r\n * Modify slide item data. Example on Data sources page.\r\n * https://photoswipe.com/filters/#itemdata\r\n *\r\n * @prop {(itemData: SlideData, element: HTMLElement, linkEl: HTMLAnchorElement) => SlideData} domItemData\r\n * Modify item data when it's parsed from DOM element. Example on Data sources page.\r\n * https://photoswipe.com/filters/#domitemdata\r\n *\r\n * @prop {(clickedIndex: number, e: MouseEvent, instance: PhotoSwipeLightbox) => number} clickedIndex\r\n * Modify clicked gallery item index.\r\n * https://photoswipe.com/filters/#clickedindex\r\n *\r\n * @prop {(placeholderSrc: string | false, content: Content) => string | false} placeholderSrc\r\n * Modify placeholder image source.\r\n * https://photoswipe.com/filters/#placeholdersrc\r\n *\r\n * @prop {(isContentLoading: boolean, content: Content) => boolean} isContentLoading\r\n * Modify if the content is currently loading.\r\n * https://photoswipe.com/filters/#iscontentloading\r\n *\r\n * @prop {(isContentZoomable: boolean, content: Content) => boolean} isContentZoomable\r\n * Modify if the content can be zoomed.\r\n * https://photoswipe.com/filters/#iscontentzoomable\r\n *\r\n * @prop {(useContentPlaceholder: boolean, content: Content) => boolean} useContentPlaceholder\r\n * Modify if the placeholder should be used for the content.\r\n * https://photoswipe.com/filters/#usecontentplaceholder\r\n *\r\n * @prop {(isKeepingPlaceholder: boolean, content: Content) => boolean} isKeepingPlaceholder\r\n * Modify if the placeholder should be kept after the content is loaded.\r\n * https://photoswipe.com/filters/#iskeepingplaceholder\r\n *\r\n *\r\n * @prop {(contentErrorElement: HTMLElement, content: Content) => HTMLElement} contentErrorElement\r\n * Modify an element when the content has error state (for example, if image cannot be loaded).\r\n * https://photoswipe.com/filters/#contenterrorelement\r\n *\r\n * @prop {(element: HTMLElement, data: UIElementData) => HTMLElement} uiElement\r\n * Modify a UI element that's being created.\r\n * https://photoswipe.com/filters/#uielement\r\n *\r\n * @prop {(thumbnail: HTMLElement | null | undefined, itemData: SlideData, index: number) => HTMLElement} thumbEl\r\n * Modify the thubmnail element from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbel\r\n *\r\n * @prop {(thumbBounds: Bounds | undefined, itemData: SlideData, index: number) => Bounds} thumbBounds\r\n * Modify the thubmnail bounds from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbbounds\r\n *\r\n * @prop {(srcsetSizesWidth: number, content: Content) => number} srcsetSizesWidth\r\n *\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeFiltersMap} T\r\n * @typedef {{ fn: PhotoSwipeFiltersMap[T], priority: number }} Filter\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {PhotoSwipeEventsMap[T] extends undefined ? PhotoSwipeEvent<T> : PhotoSwipeEvent<T> & PhotoSwipeEventsMap[T]} AugmentedEvent\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {(event: AugmentedEvent<T>) => void} EventCallback\r\n */\r\n\r\n/**\r\n * Base PhotoSwipe event object\r\n *\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n */\r\nclass PhotoSwipeEvent {\r\n  /**\r\n   * @param {T} type\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   */\r\n  constructor(type, details) {\r\n    this.type = type;\r\n    this.defaultPrevented = false;\r\n    if (details) {\r\n      Object.assign(this, details);\r\n    }\r\n  }\r\n\r\n  preventDefault() {\r\n    this.defaultPrevented = true;\r\n  }\r\n}\r\n\r\n/**\r\n * PhotoSwipe base class that can listen and dispatch for events.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox, extended by base.js\r\n */\r\nclass Eventable {\r\n  constructor() {\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeEventsMap]?: ((event: AugmentedEvent<T>) => void)[] }}\r\n     */\r\n    this._listeners = {};\r\n\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeFiltersMap]?: Filter<T>[] }}\r\n     */\r\n    this._filters = {};\r\n\r\n    /** @type {PhotoSwipe | undefined} */\r\n    this.pswp = undefined;\r\n\r\n    /** @type {PhotoSwipeOptions | undefined} */\r\n    this.options = undefined;\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   * @param {number} priority\r\n   */\r\n  addFilter(name, fn, priority = 100) {\r\n    if (!this._filters[name]) {\r\n      this._filters[name] = [];\r\n    }\r\n\r\n    this._filters[name]?.push({ fn, priority });\r\n    this._filters[name]?.sort((f1, f2) => f1.priority - f2.priority);\r\n\r\n    this.pswp?.addFilter(name, fn, priority);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   */\r\n  removeFilter(name, fn) {\r\n    if (this._filters[name]) {\r\n      // @ts-expect-error\r\n      this._filters[name] = this._filters[name].filter(filter => (filter.fn !== fn));\r\n    }\r\n\r\n    if (this.pswp) {\r\n      this.pswp.removeFilter(name, fn);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {Parameters<PhotoSwipeFiltersMap[T]>} args\r\n   * @returns {Parameters<PhotoSwipeFiltersMap[T]>[0]}\r\n   */\r\n  applyFilters(name, ...args) {\r\n    this._filters[name]?.forEach((filter) => {\r\n      // @ts-expect-error\r\n      args[0] = filter.fn.apply(this, args);\r\n    });\r\n    return args[0];\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  on(name, fn) {\r\n    if (!this._listeners[name]) {\r\n      this._listeners[name] = [];\r\n    }\r\n    this._listeners[name]?.push(fn);\r\n\r\n    // When binding events to lightbox,\r\n    // also bind events to PhotoSwipe Core,\r\n    // if it's open.\r\n    this.pswp?.on(name, fn);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  off(name, fn) {\r\n    if (this._listeners[name]) {\r\n      // @ts-expect-error\r\n      this._listeners[name] = this._listeners[name].filter(listener => (fn !== listener));\r\n    }\r\n\r\n    this.pswp?.off(name, fn);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   * @returns {AugmentedEvent<T>}\r\n   */\r\n  dispatch(name, details) {\r\n    if (this.pswp) {\r\n      return this.pswp.dispatch(name, details);\r\n    }\r\n\r\n    const event = /** @type {AugmentedEvent<T>} */ (new PhotoSwipeEvent(name, details));\r\n\r\n    this._listeners[name]?.forEach((listener) => {\r\n      listener.call(this, event);\r\n    });\r\n\r\n    return event;\r\n  }\r\n}\r\n\r\nexport default Eventable;\r\n","import { createElement, setWidthHeight, toTransformString } from '../util/util.js';\r\n\r\nclass Placeholder {\r\n  /**\r\n   * @param {string | false} imageSrc\r\n   * @param {HTMLElement} container\r\n   */\r\n  constructor(imageSrc, container) {\r\n    // Create placeholder\r\n    // (stretched thumbnail or simple div behind the main image)\r\n    /** @type {HTMLImageElement | HTMLDivElement | null} */\r\n    this.element = createElement(\r\n      'pswp__img pswp__img--placeholder',\r\n      imageSrc ? 'img' : 'div',\r\n      container\r\n    );\r\n\r\n    if (imageSrc) {\r\n      const imgEl = /** @type {HTMLImageElement} */ (this.element);\r\n      imgEl.decoding = 'async';\r\n      imgEl.alt = '';\r\n      imgEl.src = imageSrc;\r\n      imgEl.setAttribute('role', 'presentation');\r\n    }\r\n\r\n    this.element.setAttribute('aria-hidden', 'true');\r\n  }\r\n\r\n  /**\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.element.tagName === 'IMG') {\r\n      // Use transform scale() to modify img placeholder size\r\n      // (instead of changing width/height directly).\r\n      // This helps with performance, specifically in iOS15 Safari.\r\n      setWidthHeight(this.element, 250, 'auto');\r\n      this.element.style.transformOrigin = '0 0';\r\n      this.element.style.transform = toTransformString(0, 0, width / 250);\r\n    } else {\r\n      setWidthHeight(this.element, width, height);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    if (this.element?.parentNode) {\r\n      this.element.remove();\r\n    }\r\n    this.element = null;\r\n  }\r\n}\r\n\r\nexport default Placeholder;\r\n","import { createElement, isSafari, LOAD_STATE, setWidthHeight } from '../util/util.js';\r\nimport Placeholder from './placeholder.js';\r\n\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../util/util.js').LoadState} LoadState */\r\n\r\nclass Content {\r\n  /**\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n   * @param {number} index\r\n   */\r\n  constructor(itemData, instance, index) {\r\n    this.instance = instance;\r\n    this.data = itemData;\r\n    this.index = index;\r\n\r\n    /** @type {HTMLImageElement | HTMLDivElement | undefined} */\r\n    this.element = undefined;\r\n    /** @type {Placeholder | undefined} */\r\n    this.placeholder = undefined;\r\n    /** @type {Slide | undefined} */\r\n    this.slide = undefined;\r\n\r\n    this.displayedImageWidth = 0;\r\n    this.displayedImageHeight = 0;\r\n\r\n    this.width = Number(this.data.w) || Number(this.data.width) || 0;\r\n    this.height = Number(this.data.h) || Number(this.data.height) || 0;\r\n\r\n    this.isAttached = false;\r\n    this.hasSlide = false;\r\n    this.isDecoding = false;\r\n    /** @type {LoadState} */\r\n    this.state = LOAD_STATE.IDLE;\r\n\r\n    if (this.data.type) {\r\n      this.type = this.data.type;\r\n    } else if (this.data.src) {\r\n      this.type = 'image';\r\n    } else {\r\n      this.type = 'html';\r\n    }\r\n\r\n    this.instance.dispatch('contentInit', { content: this });\r\n  }\r\n\r\n  removePlaceholder() {\r\n    if (this.placeholder && !this.keepPlaceholder()) {\r\n      // With delay, as image might be loaded, but not rendered\r\n      setTimeout(() => {\r\n        if (this.placeholder) {\r\n          this.placeholder.destroy();\r\n          this.placeholder = undefined;\r\n        }\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload content\r\n   *\r\n   * @param {boolean} isLazy\r\n   * @param {boolean} [reload]\r\n   */\r\n  load(isLazy, reload) {\r\n    if (this.slide && this.usePlaceholder()) {\r\n      if (!this.placeholder) {\r\n        const placeholderSrc = this.instance.applyFilters(\r\n          'placeholderSrc',\r\n          // use  image-based placeholder only for the first slide,\r\n          // as rendering (even small stretched thumbnail) is an expensive operation\r\n          (this.data.msrc && this.slide.isFirstSlide) ? this.data.msrc : false,\r\n          this\r\n        );\r\n        this.placeholder = new Placeholder(\r\n          placeholderSrc,\r\n          this.slide.container\r\n        );\r\n      } else {\r\n        const placeholderEl = this.placeholder.element;\r\n        // Add placeholder to DOM if it was already created\r\n        if (placeholderEl && !placeholderEl.parentElement) {\r\n          this.slide.container.prepend(placeholderEl);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.element && !reload) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentLoad', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent()) {\r\n      this.element = createElement('pswp__img', 'img');\r\n      // Start loading only after width is defined, as sizes might depend on it.\r\n      // Due to Safari feature, we must define sizes before srcset.\r\n      if (this.displayedImageWidth) {\r\n        this.loadImage(isLazy);\r\n      }\r\n    } else {\r\n      this.element = createElement('pswp__content', 'div');\r\n      this.element.innerHTML = this.data.html || '';\r\n    }\r\n\r\n    if (reload && this.slide) {\r\n      this.slide.updateContentSize(true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload image\r\n   *\r\n   * @param {boolean} isLazy\r\n   */\r\n  loadImage(isLazy) {\r\n    if (!this.isImageContent()\r\n      || !this.element\r\n      || this.instance.dispatch('contentLoadImage', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const imageElement = /** @type HTMLImageElement */ (this.element);\r\n\r\n    this.updateSrcsetSizes();\r\n\r\n    if (this.data.srcset) {\r\n      imageElement.srcset = this.data.srcset;\r\n    }\r\n\r\n    imageElement.src = this.data.src ?? '';\r\n    imageElement.alt = this.data.alt ?? '';\r\n\r\n    this.state = LOAD_STATE.LOADING;\r\n\r\n    if (imageElement.complete) {\r\n      this.onLoaded();\r\n    } else {\r\n      imageElement.onload = () => {\r\n        this.onLoaded();\r\n      };\r\n\r\n      imageElement.onerror = () => {\r\n        this.onError();\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Assign slide to content\r\n   *\r\n   * @param {Slide} slide\r\n   */\r\n  setSlide(slide) {\r\n    this.slide = slide;\r\n    this.hasSlide = true;\r\n    this.instance = slide.pswp;\r\n\r\n    // todo: do we need to unset slide?\r\n  }\r\n\r\n  /**\r\n   * Content load success handler\r\n   */\r\n  onLoaded() {\r\n    this.state = LOAD_STATE.LOADED;\r\n\r\n    if (this.slide && this.element) {\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, content: this });\r\n\r\n      // if content is reloaded\r\n      if (this.slide.isActive\r\n          && this.slide.heavyAppended\r\n          && !this.element.parentNode) {\r\n        this.append();\r\n        this.slide.updateContentSize(true);\r\n      }\r\n\r\n      if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\r\n        this.removePlaceholder();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Content load error handler\r\n   */\r\n  onError() {\r\n    this.state = LOAD_STATE.ERROR;\r\n\r\n    if (this.slide) {\r\n      this.displayError();\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, isError: true, content: this });\r\n      this.instance.dispatch('loadError', { slide: this.slide, content: this });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is currently loading\r\n   */\r\n  isLoading() {\r\n    return this.instance.applyFilters(\r\n      'isContentLoading',\r\n      this.state === LOAD_STATE.LOADING,\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is in error state\r\n   */\r\n  isError() {\r\n    return this.state === LOAD_STATE.ERROR;\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content is image\r\n   */\r\n  isImageContent() {\r\n    return this.type === 'image';\r\n  }\r\n\r\n  /**\r\n   * Update content size\r\n   *\r\n   * @param {Number} width\r\n   * @param {Number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.setDisplayedSize(width, height);\r\n    }\r\n\r\n    if (this.instance.dispatch(\r\n      'contentResize',\r\n      { content: this, width, height }).defaultPrevented\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setWidthHeight(this.element, width, height);\r\n\r\n    if (this.isImageContent() && !this.isError()) {\r\n      const isInitialSizeUpdate = (!this.displayedImageWidth && width);\r\n\r\n      this.displayedImageWidth = width;\r\n      this.displayedImageHeight = height;\r\n\r\n      if (isInitialSizeUpdate) {\r\n        this.loadImage(false);\r\n      } else {\r\n        this.updateSrcsetSizes();\r\n      }\r\n\r\n      if (this.slide) {\r\n        this.instance.dispatch(\r\n          'imageSizeChange',\r\n          { slide: this.slide, width, height, content: this }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content can be zoomed\r\n   */\r\n  isZoomable() {\r\n    return this.instance.applyFilters(\r\n      'isContentZoomable',\r\n      this.isImageContent() && (this.state !== LOAD_STATE.ERROR),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Update image srcset sizes attribute based on width and height\r\n   */\r\n  updateSrcsetSizes() {\r\n    // Handle srcset sizes attribute.\r\n    //\r\n    // Never lower quality, if it was increased previously.\r\n    // Chrome does this automatically, Firefox and Safari do not,\r\n    // so we store largest used size in dataset.\r\n    if (!this.isImageContent() || !this.element || !this.data.srcset) {\r\n      return;\r\n    }\r\n\r\n    const image = /** @type HTMLImageElement */ (this.element);\r\n    const sizesWidth = this.instance.applyFilters(\r\n      'srcsetSizesWidth',\r\n      this.displayedImageWidth,\r\n      this\r\n    );\r\n\r\n    if (\r\n      !image.dataset.largestUsedSize\r\n      || sizesWidth > parseInt(image.dataset.largestUsedSize, 10)\r\n    ) {\r\n      image.sizes = sizesWidth + 'px';\r\n      image.dataset.largestUsedSize = String(sizesWidth);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If content should use a placeholder (from msrc by default)\r\n   */\r\n  usePlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'useContentPlaceholder',\r\n      this.isImageContent(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Preload content with lazy-loading param\r\n   */\r\n  lazyLoad() {\r\n    if (this.instance.dispatch('contentLazyLoad', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.load(true);\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If placeholder should be kept after content is loaded\r\n   */\r\n  keepPlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'isKeepingPlaceholder',\r\n      this.isLoading(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Destroy the content\r\n   */\r\n  destroy() {\r\n    this.hasSlide = false;\r\n    this.slide = undefined;\r\n\r\n    if (this.instance.dispatch('contentDestroy', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.remove();\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.destroy();\r\n      this.placeholder = undefined;\r\n    }\r\n\r\n    if (this.isImageContent() && this.element) {\r\n      this.element.onload = null;\r\n      this.element.onerror = null;\r\n      this.element = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Display error message\r\n   */\r\n  displayError() {\r\n    if (this.slide) {\r\n      let errorMsgEl = createElement('pswp__error-msg', 'div');\r\n      errorMsgEl.innerText = this.instance.options?.errorMsg ?? '';\r\n      errorMsgEl = /** @type {HTMLDivElement} */ (this.instance.applyFilters(\r\n        'contentErrorElement',\r\n        errorMsgEl,\r\n        this\r\n      ));\r\n      this.element = createElement('pswp__content pswp__error-msg-container', 'div');\r\n      this.element.appendChild(errorMsgEl);\r\n      this.slide.container.innerText = '';\r\n      this.slide.container.appendChild(this.element);\r\n      this.slide.updateContentSize(true);\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the content\r\n   */\r\n  append() {\r\n    if (this.isAttached || !this.element) {\r\n      return;\r\n    }\r\n\r\n    this.isAttached = true;\r\n\r\n    if (this.state === LOAD_STATE.ERROR) {\r\n      this.displayError();\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppend', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const supportsDecode = ('decode' in this.element);\r\n\r\n    if (this.isImageContent()) {\r\n      // Use decode() on nearby slides\r\n      //\r\n      // Nearby slide images are in DOM and not hidden via display:none.\r\n      // However, they are placed offscreen (to the left and right side).\r\n      //\r\n      // Some browsers do not composite the image until it's actually visible,\r\n      // using decode() helps.\r\n      //\r\n      // You might ask \"why dont you just decode() and then append all images\",\r\n      // that's because I want to show image before it's fully loaded,\r\n      // as browser can render parts of image while it is loading.\r\n      // We do not do this in Safari due to partial loading bug.\r\n      if (supportsDecode && this.slide && (!this.slide.isActive || isSafari())) {\r\n        this.isDecoding = true;\r\n        // purposefully using finally instead of then,\r\n        // as if srcset sizes changes dynamically - it may cause decode error\r\n        /** @type {HTMLImageElement} */\r\n        (this.element).decode().catch(() => {}).finally(() => {\r\n          this.isDecoding = false;\r\n          this.appendImage();\r\n        });\r\n      } else {\r\n        this.appendImage();\r\n      }\r\n    } else if (this.slide && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate the slide,\r\n   * active slide is generally the current one,\r\n   * meaning the user can see it.\r\n   */\r\n  activate() {\r\n    if (this.instance.dispatch('contentActivate', { content: this }).defaultPrevented\r\n      || !this.slide) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent() && this.isDecoding && !isSafari()) {\r\n      // add image to slide when it becomes active,\r\n      // even if it's not finished decoding\r\n      this.appendImage();\r\n    } else if (this.isError()) {\r\n      this.load(false, true); // try to reload\r\n    }\r\n\r\n    if (this.slide.holderElement) {\r\n      this.slide.holderElement.setAttribute('aria-hidden', 'false');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deactivate the content\r\n   */\r\n  deactivate() {\r\n    this.instance.dispatch('contentDeactivate', { content: this });\r\n    if (this.slide && this.slide.holderElement) {\r\n      this.slide.holderElement.setAttribute('aria-hidden', 'true');\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove the content from DOM\r\n   */\r\n  remove() {\r\n    this.isAttached = false;\r\n\r\n    if (this.instance.dispatch('contentRemove', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.element && this.element.parentNode) {\r\n      this.element.remove();\r\n    }\r\n\r\n    if (this.placeholder && this.placeholder.element) {\r\n      this.placeholder.element.remove();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the image content to slide container\r\n   */\r\n  appendImage() {\r\n    if (!this.isAttached) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppendImage', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    // ensure that element exists and is not already appended\r\n    if (this.slide && this.element && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n\r\n    if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {PhotoSwipeBase} pswp\r\n * @returns {Point}\r\n */\r\nexport function getViewportSize(options, pswp) {\r\n  if (options.getViewportSizeFn) {\r\n    const newViewportSize = options.getViewportSizeFn(options, pswp);\r\n    if (newViewportSize) {\r\n      return newViewportSize;\r\n    }\r\n  }\r\n\r\n  return {\r\n    x: document.documentElement.clientWidth,\r\n\r\n    // TODO: height on mobile is very incosistent due to toolbar\r\n    // find a way to improve this\r\n    //\r\n    // document.documentElement.clientHeight - doesn't seem to work well\r\n    y: window.innerHeight\r\n  };\r\n}\r\n\r\n/**\r\n * Parses padding option.\r\n * Supported formats:\r\n *\r\n * // Object\r\n * padding: {\r\n *  top: 0,\r\n *  bottom: 0,\r\n *  left: 0,\r\n *  right: 0\r\n * }\r\n *\r\n * // A function that returns the object\r\n * paddingFn: (viewportSize, itemData, index) => {\r\n *  return {\r\n *    top: 0,\r\n *    bottom: 0,\r\n *    left: 0,\r\n *    right: 0\r\n *  };\r\n * }\r\n *\r\n * // Legacy variant\r\n * paddingLeft: 0,\r\n * paddingRight: 0,\r\n * paddingTop: 0,\r\n * paddingBottom: 0,\r\n *\r\n * @param {'left' | 'top' | 'bottom' | 'right'} prop\r\n * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n * @param {Point} viewportSize PhotoSwipe viewport size, for example: { x:800, y:600 }\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {number} index Slide index\r\n * @returns {number}\r\n */\r\nexport function parsePaddingOption(prop, options, viewportSize, itemData, index) {\r\n  let paddingValue = 0;\r\n\r\n  if (options.paddingFn) {\r\n    paddingValue = options.paddingFn(viewportSize, itemData, index)[prop];\r\n  } else if (options.padding) {\r\n    paddingValue = options.padding[prop];\r\n  } else {\r\n    const legacyPropName = 'padding' + prop[0].toUpperCase() + prop.slice(1);\r\n    // @ts-expect-error\r\n    if (options[legacyPropName]) {\r\n      // @ts-expect-error\r\n      paddingValue = options[legacyPropName];\r\n    }\r\n  }\r\n\r\n  return Number(paddingValue) || 0;\r\n}\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {Point} viewportSize\r\n * @param {SlideData} itemData\r\n * @param {number} index\r\n * @returns {Point}\r\n */\r\nexport function getPanAreaSize(options, viewportSize, itemData, index) {\r\n  return {\r\n    x: viewportSize.x\r\n      - parsePaddingOption('left', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('right', options, viewportSize, itemData, index),\r\n    y: viewportSize.y\r\n      - parsePaddingOption('top', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('bottom', options, viewportSize, itemData, index)\r\n  };\r\n}\r\n","const MAX_IMAGE_WIDTH = 4000;\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n\r\n/** @typedef {'fit' | 'fill' | number | ((zoomLevelObject: ZoomLevel) => number)} ZoomLevelOption */\r\n\r\n/**\r\n * Calculates zoom levels for specific slide.\r\n * Depends on viewport size and image size.\r\n */\r\nclass ZoomLevel {\r\n  /**\r\n   * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {number} index Slide index\r\n   * @param {PhotoSwipe} [pswp] PhotoSwipe instance, can be undefined if not initialized yet\r\n   */\r\n  constructor(options, itemData, index, pswp) {\r\n    this.pswp = pswp;\r\n    this.options = options;\r\n    this.itemData = itemData;\r\n    this.index = index;\r\n    /** @type { Point | null } */\r\n    this.panAreaSize = null;\r\n    /** @type { Point | null } */\r\n    this.elementSize = null;\r\n    this.fit = 1;\r\n    this.fill = 1;\r\n    this.vFill = 1;\r\n    this.initial = 1;\r\n    this.secondary = 1;\r\n    this.max = 1;\r\n    this.min = 1;\r\n  }\r\n\r\n  /**\r\n   * Calculate initial, secondary and maximum zoom level for the specified slide.\r\n   *\r\n   * It should be called when either image or viewport size changes.\r\n   *\r\n   * @param {number} maxWidth\r\n   * @param {number} maxHeight\r\n   * @param {Point} panAreaSize\r\n   */\r\n  update(maxWidth, maxHeight, panAreaSize) {\r\n    /** @type {Point} */\r\n    const elementSize = { x: maxWidth, y: maxHeight };\r\n    this.elementSize = elementSize;\r\n    this.panAreaSize = panAreaSize;\r\n\r\n    const hRatio = panAreaSize.x / elementSize.x;\r\n    const vRatio = panAreaSize.y / elementSize.y;\r\n\r\n    this.fit = Math.min(1, hRatio < vRatio ? hRatio : vRatio);\r\n    this.fill = Math.min(1, hRatio > vRatio ? hRatio : vRatio);\r\n\r\n    // zoom.vFill defines zoom level of the image\r\n    // when it has 100% of viewport vertical space (height)\r\n    this.vFill = Math.min(1, vRatio);\r\n\r\n    this.initial = this._getInitial();\r\n    this.secondary = this._getSecondary();\r\n    this.max = Math.max(\r\n      this.initial,\r\n      this.secondary,\r\n      this._getMax()\r\n    );\r\n\r\n    this.min = Math.min(\r\n      this.fit,\r\n      this.initial,\r\n      this.secondary\r\n    );\r\n\r\n    if (this.pswp) {\r\n      this.pswp.dispatch('zoomLevelsUpdate', { zoomLevels: this, slideData: this.itemData });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses user-defined zoom option.\r\n   *\r\n   * @private\r\n   * @param {'initial' | 'secondary' | 'max'} optionPrefix Zoom level option prefix (initial, secondary, max)\r\n   * @returns { number | undefined }\r\n   */\r\n  _parseZoomLevelOption(optionPrefix) {\r\n    const optionName = /** @type {'initialZoomLevel' | 'secondaryZoomLevel' | 'maxZoomLevel'} */ (\r\n      optionPrefix + 'ZoomLevel'\r\n    );\r\n    const optionValue = this.options[optionName];\r\n\r\n    if (!optionValue) {\r\n      return;\r\n    }\r\n\r\n    if (typeof optionValue === 'function') {\r\n      return optionValue(this);\r\n    }\r\n\r\n    if (optionValue === 'fill') {\r\n      return this.fill;\r\n    }\r\n\r\n    if (optionValue === 'fit') {\r\n      return this.fit;\r\n    }\r\n\r\n    return Number(optionValue);\r\n  }\r\n\r\n  /**\r\n   * Get zoom level to which image will be zoomed after double-tap gesture,\r\n   * or when user clicks on zoom icon,\r\n   * or mouse-click on image itself.\r\n   * If you return 1 image will be zoomed to its original size.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getSecondary() {\r\n    let currZoomLevel = this._parseZoomLevelOption('secondary');\r\n\r\n    if (currZoomLevel) {\r\n      return currZoomLevel;\r\n    }\r\n\r\n    // 3x of \"fit\" state, but not larger than original\r\n    currZoomLevel = Math.min(1, this.fit * 3);\r\n\r\n    if (this.elementSize && currZoomLevel * this.elementSize.x > MAX_IMAGE_WIDTH) {\r\n      currZoomLevel = MAX_IMAGE_WIDTH / this.elementSize.x;\r\n    }\r\n\r\n    return currZoomLevel;\r\n  }\r\n\r\n  /**\r\n   * Get initial image zoom level.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getInitial() {\r\n    return this._parseZoomLevelOption('initial') || this.fit;\r\n  }\r\n\r\n  /**\r\n   * Maximum zoom level when user zooms\r\n   * via zoom/pinch gesture,\r\n   * via cmd/ctrl-wheel or via trackpad.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getMax() {\r\n    // max zoom level is x4 from \"fit state\",\r\n    // used for zoom gesture and ctrl/trackpad zoom\r\n    return this._parseZoomLevelOption('max') || Math.max(1, this.fit * 4);\r\n  }\r\n}\r\n\r\nexport default ZoomLevel;\r\n","import { getViewportSize, getPanAreaSize } from '../util/viewport-size.js';\r\nimport ZoomLevel from './zoom-level.js';\r\n\r\n/** @typedef {import('./content.js').default} Content */\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n\r\nconst MIN_SLIDES_TO_CACHE = 5;\r\n\r\n/**\r\n * Lazy-load an image\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n * @param {number} index\r\n * @returns {Content} Image that is being decoded or false.\r\n */\r\nexport function lazyLoadData(itemData, instance, index) {\r\n  const content = instance.createContentFromData(itemData, index);\r\n  /** @type {ZoomLevel | undefined} */\r\n  let zoomLevel;\r\n\r\n  const { options } = instance;\r\n\r\n  // We need to know dimensions of the image to preload it,\r\n  // as it might use srcset, and we need to define sizes\r\n  if (options) {\r\n    zoomLevel = new ZoomLevel(options, itemData, -1);\r\n\r\n    let viewportSize;\r\n    if (instance.pswp) {\r\n      viewportSize = instance.pswp.viewportSize;\r\n    } else {\r\n      viewportSize = getViewportSize(options, instance);\r\n    }\r\n\r\n    const panAreaSize = getPanAreaSize(options, viewportSize, itemData, index);\r\n    zoomLevel.update(content.width, content.height, panAreaSize);\r\n  }\r\n\r\n  content.lazyLoad();\r\n\r\n  if (zoomLevel) {\r\n    content.setDisplayedSize(\r\n      Math.ceil(content.width * zoomLevel.initial),\r\n      Math.ceil(content.height * zoomLevel.initial)\r\n    );\r\n  }\r\n\r\n  return content;\r\n}\r\n\r\n\r\n/**\r\n * Lazy-loads specific slide.\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * By default, it loads image based on viewport size and initial zoom level.\r\n *\r\n * @param {number} index Slide index\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox eventable instance\r\n * @returns {Content | undefined}\r\n */\r\nexport function lazyLoadSlide(index, instance) {\r\n  const itemData = instance.getItemData(index);\r\n\r\n  if (instance.dispatch('lazyLoadSlide', { index, itemData }).defaultPrevented) {\r\n    return;\r\n  }\r\n\r\n  return lazyLoadData(itemData, instance, index);\r\n}\r\n\r\nclass ContentLoader {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    // Total amount of cached images\r\n    this.limit = Math.max(\r\n      pswp.options.preload[0] + pswp.options.preload[1] + 1,\r\n      MIN_SLIDES_TO_CACHE\r\n    );\r\n    /** @type {Content[]} */\r\n    this._cachedItems = [];\r\n  }\r\n\r\n  /**\r\n   * Lazy load nearby slides based on `preload` option.\r\n   *\r\n   * @param {number} [diff] Difference between slide indexes that was changed recently, or 0.\r\n   */\r\n  updateLazy(diff) {\r\n    const { pswp } = this;\r\n\r\n    if (pswp.dispatch('lazyLoad').defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const { preload } = pswp.options;\r\n    const isForward = diff === undefined ? true : (diff >= 0);\r\n    let i;\r\n\r\n    // preload[1] - num items to preload in forward direction\r\n    for (i = 0; i <= preload[1]; i++) {\r\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? i : (-i)));\r\n    }\r\n\r\n    // preload[0] - num items to preload in backward direction\r\n    for (i = 1; i <= preload[0]; i++) {\r\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? (-i) : i));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} initialIndex\r\n   */\r\n  loadSlideByIndex(initialIndex) {\r\n    const index = this.pswp.getLoopedIndex(initialIndex);\r\n    // try to get cached content\r\n    let content = this.getContentByIndex(index);\r\n    if (!content) {\r\n      // no cached content, so try to load from scratch:\r\n      content = lazyLoadSlide(index, this.pswp);\r\n      // if content can be loaded, add it to cache:\r\n      if (content) {\r\n        this.addToCache(content);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Slide} slide\r\n   * @returns {Content}\r\n   */\r\n  getContentBySlide(slide) {\r\n    let content = this.getContentByIndex(slide.index);\r\n    if (!content) {\r\n      // create content if not found in cache\r\n      content = this.pswp.createContentFromData(slide.data, slide.index);\r\n      this.addToCache(content);\r\n    }\r\n\r\n    // assign slide to content\r\n    content.setSlide(slide);\r\n\r\n    return content;\r\n  }\r\n\r\n  /**\r\n   * @param {Content} content\r\n   */\r\n  addToCache(content) {\r\n    // move to the end of array\r\n    this.removeByIndex(content.index);\r\n    this._cachedItems.push(content);\r\n\r\n    if (this._cachedItems.length > this.limit) {\r\n      // Destroy the first content that's not attached\r\n      const indexToRemove = this._cachedItems.findIndex((item) => {\r\n        return !item.isAttached && !item.hasSlide;\r\n      });\r\n      if (indexToRemove !== -1) {\r\n        const removedItem = this._cachedItems.splice(indexToRemove, 1)[0];\r\n        removedItem.destroy();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes an image from cache, does not destroy() it, just removes.\r\n   *\r\n   * @param {number} index\r\n   */\r\n  removeByIndex(index) {\r\n    const indexToRemove = this._cachedItems.findIndex(item => item.index === index);\r\n    if (indexToRemove !== -1) {\r\n      this._cachedItems.splice(indexToRemove, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} index\r\n   * @returns {Content | undefined}\r\n   */\r\n  getContentByIndex(index) {\r\n    return this._cachedItems.find(content => content.index === index);\r\n  }\r\n\r\n  destroy() {\r\n    this._cachedItems.forEach(content => content.destroy());\r\n    this._cachedItems = [];\r\n  }\r\n}\r\n\r\nexport default ContentLoader;\r\n","import Eventable from './eventable.js';\r\nimport { getElementsFromOption } from '../util/util.js';\r\nimport Content from '../slide/content.js';\r\nimport { lazyLoadData } from '../slide/loader.js';\r\n\r\n/** @typedef {import(\"../photoswipe.js\").default} PhotoSwipe */\r\n/** @typedef {import(\"../slide/slide.js\").SlideData} SlideData */\r\n\r\n/**\r\n * PhotoSwipe base class that can retrieve data about every slide.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox\r\n */\r\nclass PhotoSwipeBase extends Eventable {\r\n  /**\r\n   * Get total number of slides\r\n   *\r\n   * @returns {number}\r\n   */\r\n  getNumItems() {\r\n    let numItems = 0;\r\n    const dataSource = this.options?.dataSource;\r\n\r\n    if (dataSource && 'length' in dataSource) {\r\n      // may be an array or just object with length property\r\n      numItems = dataSource.length;\r\n    } else if (dataSource && 'gallery' in dataSource) {\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      if (dataSource.items) {\r\n        numItems = dataSource.items.length;\r\n      }\r\n    }\r\n\r\n    // legacy event, before filters were introduced\r\n    const event = this.dispatch('numItems', {\r\n      dataSource,\r\n      numItems\r\n    });\r\n    return this.applyFilters('numItems', event.numItems, dataSource);\r\n  }\r\n\r\n  /**\r\n   * @param {SlideData} slideData\r\n   * @param {number} index\r\n   * @returns {Content}\r\n   */\r\n  createContentFromData(slideData, index) {\r\n    return new Content(slideData, this, index);\r\n  }\r\n\r\n  /**\r\n   * Get item data by index.\r\n   *\r\n   * \"item data\" should contain normalized information that PhotoSwipe needs to generate a slide.\r\n   * For example, it may contain properties like\r\n   * `src`, `srcset`, `w`, `h`, which will be used to generate a slide with image.\r\n   *\r\n   * @param {number} index\r\n   * @returns {SlideData}\r\n   */\r\n  getItemData(index) {\r\n    const dataSource = this.options?.dataSource;\r\n    /** @type {SlideData | HTMLElement} */\r\n    let dataSourceItem = {};\r\n    if (Array.isArray(dataSource)) {\r\n      // Datasource is an array of elements\r\n      dataSourceItem = dataSource[index];\r\n    } else if (dataSource && 'gallery' in dataSource) {\r\n      // dataSource has gallery property,\r\n      // thus it was created by Lightbox, based on\r\n      // gallery and children options\r\n\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      dataSourceItem = dataSource.items[index];\r\n    }\r\n\r\n    let itemData = dataSourceItem;\r\n\r\n    if (itemData instanceof Element) {\r\n      itemData = this._domElementToItemData(itemData);\r\n    }\r\n\r\n    // Dispatching the itemData event,\r\n    // it's a legacy verion before filters were introduced\r\n    const event = this.dispatch('itemData', {\r\n      itemData: itemData || {},\r\n      index\r\n    });\r\n\r\n    return this.applyFilters('itemData', event.itemData, index);\r\n  }\r\n\r\n  /**\r\n   * Get array of gallery DOM elements,\r\n   * based on childSelector and gallery element.\r\n   *\r\n   * @param {HTMLElement} galleryElement\r\n   * @returns {HTMLElement[]}\r\n   */\r\n  _getGalleryDOMElements(galleryElement) {\r\n    if (this.options?.children || this.options?.childSelector) {\r\n      return getElementsFromOption(\r\n        this.options.children,\r\n        this.options.childSelector,\r\n        galleryElement\r\n      ) || [];\r\n    }\r\n\r\n    return [galleryElement];\r\n  }\r\n\r\n  /**\r\n   * Converts DOM element to item data object.\r\n   *\r\n   * @param {HTMLElement} element DOM element\r\n   * @returns {SlideData}\r\n   */\r\n  _domElementToItemData(element) {\r\n    /** @type {SlideData} */\r\n    const itemData = {\r\n      element\r\n    };\r\n\r\n    const linkEl = /** @type {HTMLAnchorElement} */ (\r\n      element.tagName === 'A'\r\n        ? element\r\n        : element.querySelector('a')\r\n    );\r\n\r\n    if (linkEl) {\r\n      // src comes from data-pswp-src attribute,\r\n      // if it's empty link href is used\r\n      itemData.src = linkEl.dataset.pswpSrc || linkEl.href;\r\n\r\n      if (linkEl.dataset.pswpSrcset) {\r\n        itemData.srcset = linkEl.dataset.pswpSrcset;\r\n      }\r\n\r\n      itemData.width = linkEl.dataset.pswpWidth ? parseInt(linkEl.dataset.pswpWidth, 10) : 0;\r\n      itemData.height = linkEl.dataset.pswpHeight ? parseInt(linkEl.dataset.pswpHeight, 10) : 0;\r\n\r\n      // support legacy w & h properties\r\n      itemData.w = itemData.width;\r\n      itemData.h = itemData.height;\r\n\r\n      if (linkEl.dataset.pswpType) {\r\n        itemData.type = linkEl.dataset.pswpType;\r\n      }\r\n\r\n      const thumbnailEl = element.querySelector('img');\r\n\r\n      if (thumbnailEl) {\r\n        // msrc is URL to placeholder image that's displayed before large image is loaded\r\n        // by default it's displayed only for the first slide\r\n        itemData.msrc = thumbnailEl.currentSrc || thumbnailEl.src;\r\n        itemData.alt = thumbnailEl.getAttribute('alt') ?? '';\r\n      }\r\n\r\n      if (linkEl.dataset.pswpCropped || linkEl.dataset.cropped) {\r\n        itemData.thumbCropped = true;\r\n      }\r\n    }\r\n\r\n    return this.applyFilters('domItemData', itemData, element, linkEl);\r\n  }\r\n\r\n  /**\r\n   * Lazy-load by slide data\r\n   *\r\n   * @param {SlideData} itemData Data about the slide\r\n   * @param {number} index\r\n   * @returns {Content} Image that is being decoded or false.\r\n   */\r\n  lazyLoadData(itemData, index) {\r\n    return lazyLoadData(itemData, this, index);\r\n  }\r\n}\r\n\r\nexport default PhotoSwipeBase;\r\n","import {\r\n  specialKeyUsed,\r\n  getElementsFromOption,\r\n  isPswpClass\r\n} from '../util/util.js';\r\n\r\nimport PhotoSwipeBase from '../core/base.js';\r\nimport { lazyLoadSlide } from '../slide/loader.js';\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('../types.js').Type<T>} Type<T>\r\n */\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('../slide/content.js').default} Content */\r\n/** @typedef {import('../core/eventable.js').PhotoSwipeEventsMap} PhotoSwipeEventsMap */\r\n/** @typedef {import('../core/eventable.js').PhotoSwipeFiltersMap} PhotoSwipeFiltersMap */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {import('../core/eventable.js').EventCallback<T>} EventCallback<T>\r\n */\r\n\r\n/**\r\n * PhotoSwipe Lightbox\r\n *\r\n * - If user has unsupported browser it falls back to default browser action (just opens URL)\r\n * - Binds click event to links that should open PhotoSwipe\r\n * - parses DOM strcture for PhotoSwipe (retrieves large image URLs and sizes)\r\n * - Initializes PhotoSwipe\r\n *\r\n *\r\n * Loader options use the same object as PhotoSwipe, and supports such options:\r\n *\r\n * gallery - Element | Element[] | NodeList | string selector for the gallery element\r\n * children - Element | Element[] | NodeList | string selector for the gallery children\r\n *\r\n */\r\nclass PhotoSwipeLightbox extends PhotoSwipeBase {\r\n  /**\r\n   * @param {PhotoSwipeOptions} [options]\r\n   */\r\n  constructor(options) {\r\n    super();\r\n    /** @type {PhotoSwipeOptions} */\r\n    this.options = options || {};\r\n    this._uid = 0;\r\n    this.shouldOpen = false;\r\n    /**\r\n     * @private\r\n     * @type {Content | undefined}\r\n     */\r\n    this._preloadedContent = undefined;\r\n\r\n    this.onThumbnailsClick = this.onThumbnailsClick.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Initialize lightbox, should be called only once.\r\n   * It's not included in the main constructor, so you may bind events before it.\r\n   */\r\n  init() {\r\n    // Bind click events to each gallery\r\n    getElementsFromOption(this.options.gallery, this.options.gallerySelector)\r\n      .forEach((galleryElement) => {\r\n        galleryElement.addEventListener('click', this.onThumbnailsClick, false);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * @param {MouseEvent} e\r\n   */\r\n  onThumbnailsClick(e) {\r\n    // Exit and allow default browser action if:\r\n    if (specialKeyUsed(e) // ... if clicked with a special key (ctrl/cmd...)\r\n        || window.pswp // ... if PhotoSwipe is already open\r\n        || window.navigator.onLine === false) { // ... if offline\r\n      return;\r\n    }\r\n\r\n    // If both clientX and clientY are 0 or not defined,\r\n    // the event is likely triggered by keyboard,\r\n    // so we do not pass the initialPoint\r\n    //\r\n    // Note that some screen readers emulate the mouse position,\r\n    // so it's not the ideal way to detect them.\r\n    //\r\n    /** @type {Point | null} */\r\n    let initialPoint = { x: e.clientX, y: e.clientY };\r\n\r\n    if (!initialPoint.x && !initialPoint.y) {\r\n      initialPoint = null;\r\n    }\r\n\r\n    let clickedIndex = this.getClickedIndex(e);\r\n    clickedIndex = this.applyFilters('clickedIndex', clickedIndex, e, this);\r\n    /** @type {DataSource} */\r\n    const dataSource = {\r\n      gallery: /** @type {HTMLElement} */ (e.currentTarget)\r\n    };\r\n\r\n    if (clickedIndex >= 0) {\r\n      e.preventDefault();\r\n      this.loadAndOpen(clickedIndex, dataSource, initialPoint);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get index of gallery item that was clicked.\r\n   *\r\n   * @param {MouseEvent} e click event\r\n   * @returns {number}\r\n   */\r\n  getClickedIndex(e) {\r\n    // legacy option\r\n    if (this.options.getClickedIndexFn) {\r\n      return this.options.getClickedIndexFn.call(this, e);\r\n    }\r\n\r\n    const clickedTarget = /** @type {HTMLElement} */ (e.target);\r\n    const childElements = getElementsFromOption(\r\n      this.options.children,\r\n      this.options.childSelector,\r\n      /** @type {HTMLElement} */ (e.currentTarget)\r\n    );\r\n    const clickedChildIndex = childElements.findIndex(\r\n      child => child === clickedTarget || child.contains(clickedTarget)\r\n    );\r\n\r\n    if (clickedChildIndex !== -1) {\r\n      return clickedChildIndex;\r\n    } else if (this.options.children || this.options.childSelector) {\r\n      // click wasn't on a child element\r\n      return -1;\r\n    }\r\n\r\n    // There is only one item (which is the gallery)\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Load and open PhotoSwipe\r\n   *\r\n   * @param {number} index\r\n   * @param {DataSource} dataSource\r\n   * @param {Point | null} [initialPoint]\r\n   * @returns {boolean}\r\n   */\r\n  loadAndOpen(index, dataSource, initialPoint) {\r\n    // Check if the gallery is already open\r\n    if (window.pswp) {\r\n      return false;\r\n    }\r\n\r\n    // set initial index\r\n    this.options.index = index;\r\n\r\n    // define options for PhotoSwipe constructor\r\n    this.options.initialPointerPos = initialPoint;\r\n\r\n    this.shouldOpen = true;\r\n    this.preload(index, dataSource);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Load the main module and the slide content by index\r\n   *\r\n   * @param {number} index\r\n   * @param {DataSource} [dataSource]\r\n   */\r\n  preload(index, dataSource) {\r\n    const { options } = this;\r\n\r\n    if (dataSource) {\r\n      options.dataSource = dataSource;\r\n    }\r\n\r\n    // Add the main module\r\n    /** @type {Promise<Type<PhotoSwipe>>[]} */\r\n    const promiseArray = [];\r\n\r\n    const pswpModuleType = typeof options.pswpModule;\r\n    if (isPswpClass(options.pswpModule)) {\r\n      promiseArray.push(Promise.resolve(/** @type {Type<PhotoSwipe>} */ (options.pswpModule)));\r\n    } else if (pswpModuleType === 'string') {\r\n      throw new Error('pswpModule as string is no longer supported');\r\n    } else if (pswpModuleType === 'function') {\r\n      promiseArray.push(/** @type {() => Promise<Type<PhotoSwipe>>} */ (options.pswpModule)());\r\n    } else {\r\n      throw new Error('pswpModule is not valid');\r\n    }\r\n\r\n    // Add custom-defined promise, if any\r\n    if (typeof options.openPromise === 'function') {\r\n      // allow developers to perform some task before opening\r\n      promiseArray.push(options.openPromise());\r\n    }\r\n\r\n    if (options.preloadFirstSlide !== false && index >= 0) {\r\n      this._preloadedContent = lazyLoadSlide(index, this);\r\n    }\r\n\r\n    // Wait till all promises resolve and open PhotoSwipe\r\n    const uid = ++this._uid;\r\n    Promise.all(promiseArray).then((iterableModules) => {\r\n      if (this.shouldOpen) {\r\n        const mainModule = iterableModules[0];\r\n        this._openPhotoswipe(mainModule, uid);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Type<PhotoSwipe> | { default: Type<PhotoSwipe> }} module\r\n   * @param {number} uid\r\n   */\r\n  _openPhotoswipe(module, uid) {\r\n    // Cancel opening if UID doesn't match the current one\r\n    // (if user clicked on another gallery item before current was loaded).\r\n    //\r\n    // Or if shouldOpen flag is set to false\r\n    // (developer may modify it via public API)\r\n    if (uid !== this._uid && this.shouldOpen) {\r\n      return;\r\n    }\r\n\r\n    this.shouldOpen = false;\r\n\r\n    // PhotoSwipe is already open\r\n    if (window.pswp) {\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Pass data to PhotoSwipe and open init\r\n     *\r\n     * @type {PhotoSwipe}\r\n     */\r\n    const pswp = typeof module === 'object'\r\n        ? new module.default(this.options) // eslint-disable-line\r\n        : new module(this.options); // eslint-disable-line\r\n\r\n    this.pswp = pswp;\r\n    window.pswp = pswp;\r\n\r\n    // map listeners from Lightbox to PhotoSwipe Core\r\n    /** @type {(keyof PhotoSwipeEventsMap)[]} */\r\n    (Object.keys(this._listeners)).forEach((name) => {\r\n      this._listeners[name]?.forEach((fn) => {\r\n        pswp.on(name, /** @type {EventCallback<typeof name>} */(fn));\r\n      });\r\n    });\r\n\r\n    // same with filters\r\n    /** @type {(keyof PhotoSwipeFiltersMap)[]} */\r\n    (Object.keys(this._filters)).forEach((name) => {\r\n      this._filters[name]?.forEach((filter) => {\r\n        pswp.addFilter(name, filter.fn, filter.priority);\r\n      });\r\n    });\r\n\r\n    if (this._preloadedContent) {\r\n      pswp.contentLoader.addToCache(this._preloadedContent);\r\n      this._preloadedContent = undefined;\r\n    }\r\n\r\n    pswp.on('destroy', () => {\r\n      // clean up public variables\r\n      this.pswp = undefined;\r\n      delete window.pswp;\r\n    });\r\n\r\n    pswp.init();\r\n  }\r\n\r\n  /**\r\n   * Unbinds all events, closes PhotoSwipe if it's open.\r\n   */\r\n  destroy() {\r\n    this.pswp?.destroy();\r\n\r\n    this.shouldOpen = false;\r\n    this._listeners = {};\r\n\r\n    getElementsFromOption(this.options.gallery, this.options.gallerySelector)\r\n      .forEach((galleryElement) => {\r\n        galleryElement.removeEventListener('click', this.onThumbnailsClick, false);\r\n      });\r\n  }\r\n}\r\n\r\nexport default PhotoSwipeLightbox;\r\n","// Detect passive event listener support\r\nlet supportsPassive = false;\r\n/* eslint-disable */\r\ntry {\r\n  /* @ts-ignore */\r\n  window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\r\n    get: () => {\r\n      supportsPassive = true;\r\n    }\r\n  }));\r\n} catch (e) {}\r\n/* eslint-enable */\r\n\r\n/**\r\n * @typedef {Object} PoolItem\r\n * @prop {HTMLElement | Window | Document | undefined | null} target\r\n * @prop {string} type\r\n * @prop {EventListenerOrEventListenerObject} listener\r\n * @prop {boolean} [passive]\r\n */\r\n\r\nclass DOMEvents {\r\n  constructor() {\r\n    /**\r\n     * @type {PoolItem[]}\r\n     * @private\r\n     */\r\n    this._pool = [];\r\n  }\r\n\r\n  /**\r\n   * Adds event listeners\r\n   *\r\n   * @param {PoolItem['target']} target\r\n   * @param {PoolItem['type']} type Can be multiple, separated by space.\r\n   * @param {PoolItem['listener']} listener\r\n   * @param {PoolItem['passive']} [passive]\r\n   */\r\n  add(target, type, listener, passive) {\r\n    this._toggleListener(target, type, listener, passive);\r\n  }\r\n\r\n  /**\r\n   * Removes event listeners\r\n   *\r\n   * @param {PoolItem['target']} target\r\n   * @param {PoolItem['type']} type\r\n   * @param {PoolItem['listener']} listener\r\n   * @param {PoolItem['passive']} [passive]\r\n   */\r\n  remove(target, type, listener, passive) {\r\n    this._toggleListener(target, type, listener, passive, true);\r\n  }\r\n\r\n  /**\r\n   * Removes all bound events\r\n   */\r\n  removeAll() {\r\n    this._pool.forEach((poolItem) => {\r\n      this._toggleListener(\r\n        poolItem.target,\r\n        poolItem.type,\r\n        poolItem.listener,\r\n        poolItem.passive,\r\n        true,\r\n        true\r\n      );\r\n    });\r\n    this._pool = [];\r\n  }\r\n\r\n  /**\r\n   * Adds or removes event\r\n   *\r\n   * @private\r\n   * @param {PoolItem['target']} target\r\n   * @param {PoolItem['type']} type\r\n   * @param {PoolItem['listener']} listener\r\n   * @param {PoolItem['passive']} [passive]\r\n   * @param {boolean} [unbind] Whether the event should be added or removed\r\n   * @param {boolean} [skipPool] Whether events pool should be skipped\r\n   */\r\n  _toggleListener(target, type, listener, passive, unbind, skipPool) {\r\n    if (!target) {\r\n      return;\r\n    }\r\n\r\n    const methodName = unbind ? 'removeEventListener' : 'addEventListener';\r\n    const types = type.split(' ');\r\n    types.forEach((eType) => {\r\n      if (eType) {\r\n        // Events pool is used to easily unbind all events when PhotoSwipe is closed,\r\n        // so developer doesn't need to do this manually\r\n        if (!skipPool) {\r\n          if (unbind) {\r\n            // Remove from the events pool\r\n            this._pool = this._pool.filter((poolItem) => {\r\n              return poolItem.type !== eType\r\n                || poolItem.listener !== listener\r\n                || poolItem.target !== target;\r\n            });\r\n          } else {\r\n            // Add to the events pool\r\n            this._pool.push({\r\n              target,\r\n              type: eType,\r\n              listener,\r\n              passive\r\n            });\r\n          }\r\n        }\r\n\r\n        // most PhotoSwipe events call preventDefault,\r\n        // and we do not need browser to scroll the page\r\n        const eventOptions = supportsPassive ? { passive: (passive || false) } : false;\r\n\r\n        target[methodName](\r\n          eType,\r\n          listener,\r\n          eventOptions\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default DOMEvents;\r\n","import { clamp } from '../util/util.js';\r\nimport { parsePaddingOption } from '../util/viewport-size.js';\r\n\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {Record<Axis, number>} Point */\r\n/** @typedef {'x' | 'y'} Axis */\r\n\r\n/**\r\n * Calculates minimum, maximum and initial (center) bounds of a slide\r\n */\r\nclass PanBounds {\r\n  /**\r\n   * @param {Slide} slide\r\n   */\r\n  constructor(slide) {\r\n    this.slide = slide;\r\n    this.currZoomLevel = 1;\r\n    this.center = /** @type {Point} */ { x: 0, y: 0 };\r\n    this.max = /** @type {Point} */ { x: 0, y: 0 };\r\n    this.min = /** @type {Point} */ { x: 0, y: 0 };\r\n  }\r\n\r\n  /**\r\n   * _getItemBounds\r\n   *\r\n   * @param {number} currZoomLevel\r\n   */\r\n  update(currZoomLevel) {\r\n    this.currZoomLevel = currZoomLevel;\r\n\r\n    if (!this.slide.width) {\r\n      this.reset();\r\n    } else {\r\n      this._updateAxis('x');\r\n      this._updateAxis('y');\r\n      this.slide.pswp.dispatch('calcBounds', { slide: this.slide });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * _calculateItemBoundsForAxis\r\n   *\r\n   * @param {Axis} axis\r\n   */\r\n  _updateAxis(axis) {\r\n    const { pswp } = this.slide;\r\n    const elSize = this.slide[axis === 'x' ? 'width' : 'height'] * this.currZoomLevel;\r\n    const paddingProp = axis === 'x' ? 'left' : 'top';\r\n    const padding = parsePaddingOption(\r\n      paddingProp,\r\n      pswp.options,\r\n      pswp.viewportSize,\r\n      this.slide.data,\r\n      this.slide.index\r\n    );\r\n\r\n    const panAreaSize = this.slide.panAreaSize[axis];\r\n\r\n    // Default position of element.\r\n    // By default, it is center of viewport:\r\n    this.center[axis] = Math.round((panAreaSize - elSize) / 2) + padding;\r\n\r\n    // maximum pan position\r\n    this.max[axis] = (elSize > panAreaSize)\r\n      ? Math.round(panAreaSize - elSize) + padding\r\n      : this.center[axis];\r\n\r\n    // minimum pan position\r\n    this.min[axis] = (elSize > panAreaSize)\r\n      ? padding\r\n      : this.center[axis];\r\n  }\r\n\r\n  // _getZeroBounds\r\n  reset() {\r\n    this.center.x = 0;\r\n    this.center.y = 0;\r\n    this.max.x = 0;\r\n    this.max.y = 0;\r\n    this.min.x = 0;\r\n    this.min.y = 0;\r\n  }\r\n\r\n  /**\r\n   * Correct pan position if it's beyond the bounds\r\n   *\r\n   * @param {Axis} axis x or y\r\n   * @param {number} panOffset\r\n   * @returns {number}\r\n   */\r\n  correctPan(axis, panOffset) { // checkPanBounds\r\n    return clamp(panOffset, this.max[axis], this.min[axis]);\r\n  }\r\n}\r\n\r\nexport default PanBounds;\r\n","/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n/**\r\n * @typedef {_SlideData & Record<string, any>} SlideData\r\n * @typedef {Object} _SlideData\r\n * @prop {HTMLElement} [element] thumbnail element\r\n * @prop {string} [src] image URL\r\n * @prop {string} [srcset] image srcset\r\n * @prop {number} [w] image width (deprecated)\r\n * @prop {number} [h] image height (deprecated)\r\n * @prop {number} [width] image width\r\n * @prop {number} [height] image height\r\n * @prop {string} [msrc] placeholder image URL that's displayed before large image is loaded\r\n * @prop {string} [alt] image alt text\r\n * @prop {boolean} [thumbCropped] whether thumbnail is cropped client-side or not\r\n * @prop {string} [html] html content of a slide\r\n * @prop {'image' | 'html' | string} [type] slide type\r\n */\r\n\r\nimport {\r\n  createElement,\r\n  setTransform,\r\n  equalizePoints,\r\n  roundPoint,\r\n  toTransformString,\r\n  clamp,\r\n} from '../util/util.js';\r\n\r\nimport PanBounds from './pan-bounds.js';\r\nimport ZoomLevel from './zoom-level.js';\r\nimport { getPanAreaSize } from '../util/viewport-size.js';\r\n\r\n/**\r\n * Renders and allows to control a single slide\r\n */\r\nclass Slide {\r\n  /**\r\n   * @param {SlideData} data\r\n   * @param {number} index\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(data, index, pswp) {\r\n    this.data = data;\r\n    this.index = index;\r\n    this.pswp = pswp;\r\n    this.isActive = (index === pswp.currIndex);\r\n    this.currentResolution = 0;\r\n    /** @type {Point} */\r\n    this.panAreaSize = { x: 0, y: 0 };\r\n    /** @type {Point} */\r\n    this.pan = { x: 0, y: 0 };\r\n\r\n    this.isFirstSlide = (this.isActive && !pswp.opener.isOpen);\r\n\r\n    this.zoomLevels = new ZoomLevel(pswp.options, data, index, pswp);\r\n\r\n    this.pswp.dispatch('gettingData', {\r\n      slide: this,\r\n      data: this.data,\r\n      index\r\n    });\r\n\r\n    this.content = this.pswp.contentLoader.getContentBySlide(this);\r\n    this.container = createElement('pswp__zoom-wrap', 'div');\r\n    /** @type {HTMLElement | null} */\r\n    this.holderElement = null;\r\n\r\n    this.currZoomLevel = 1;\r\n    /** @type {number} */\r\n    this.width = this.content.width;\r\n    /** @type {number} */\r\n    this.height = this.content.height;\r\n    this.heavyAppended = false;\r\n    this.bounds = new PanBounds(this);\r\n\r\n    this.prevDisplayedWidth = -1;\r\n    this.prevDisplayedHeight = -1;\r\n\r\n    this.pswp.dispatch('slideInit', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * If this slide is active/current/visible\r\n   *\r\n   * @param {boolean} isActive\r\n   */\r\n  setIsActive(isActive) {\r\n    if (isActive && !this.isActive) {\r\n      // slide just became active\r\n      this.activate();\r\n    } else if (!isActive && this.isActive) {\r\n      // slide just became non-active\r\n      this.deactivate();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Appends slide content to DOM\r\n   *\r\n   * @param {HTMLElement} holderElement\r\n   */\r\n  append(holderElement) {\r\n    this.holderElement = holderElement;\r\n\r\n    this.container.style.transformOrigin = '0 0';\r\n\r\n    // Slide appended to DOM\r\n    if (!this.data) {\r\n      return;\r\n    }\r\n\r\n    this.calculateSize();\r\n\r\n    this.load();\r\n    this.updateContentSize();\r\n    this.appendHeavy();\r\n\r\n    this.holderElement.appendChild(this.container);\r\n\r\n    this.zoomAndPanToInitial();\r\n\r\n    this.pswp.dispatch('firstZoomPan', { slide: this });\r\n\r\n    this.applyCurrentZoomPan();\r\n\r\n    this.pswp.dispatch('afterSetContent', { slide: this });\r\n\r\n    if (this.isActive) {\r\n      this.activate();\r\n    }\r\n  }\r\n\r\n  load() {\r\n    this.content.load(false);\r\n    this.pswp.dispatch('slideLoad', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * Append \"heavy\" DOM elements\r\n   *\r\n   * This may depend on a type of slide,\r\n   * but generally these are large images.\r\n   */\r\n  appendHeavy() {\r\n    const { pswp } = this;\r\n    const appendHeavyNearby = true; // todo\r\n\r\n    // Avoid appending heavy elements during animations\r\n    if (this.heavyAppended\r\n        || !pswp.opener.isOpen\r\n        || pswp.mainScroll.isShifted()\r\n        || (!this.isActive && !appendHeavyNearby)) {\r\n      return;\r\n    }\r\n\r\n    if (this.pswp.dispatch('appendHeavy', { slide: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.heavyAppended = true;\r\n\r\n    this.content.append();\r\n\r\n    this.pswp.dispatch('appendHeavyContent', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * Triggered when this slide is active (selected).\r\n   *\r\n   * If it's part of opening/closing transition -\r\n   * activate() will trigger after the transition is ended.\r\n   */\r\n  activate() {\r\n    this.isActive = true;\r\n    this.appendHeavy();\r\n    this.content.activate();\r\n    this.pswp.dispatch('slideActivate', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * Triggered when this slide becomes inactive.\r\n   *\r\n   * Slide can become inactive only after it was active.\r\n   */\r\n  deactivate() {\r\n    this.isActive = false;\r\n    this.content.deactivate();\r\n\r\n    if (this.currZoomLevel !== this.zoomLevels.initial) {\r\n      // allow filtering\r\n      this.calculateSize();\r\n    }\r\n\r\n    // reset zoom level\r\n    this.currentResolution = 0;\r\n    this.zoomAndPanToInitial();\r\n    this.applyCurrentZoomPan();\r\n    this.updateContentSize();\r\n\r\n    this.pswp.dispatch('slideDeactivate', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * The slide should destroy itself, it will never be used again.\r\n   * (unbind all events and destroy internal components)\r\n   */\r\n  destroy() {\r\n    this.content.hasSlide = false;\r\n    this.content.remove();\r\n    this.container.remove();\r\n    this.pswp.dispatch('slideDestroy', { slide: this });\r\n  }\r\n\r\n  resize() {\r\n    if (this.currZoomLevel === this.zoomLevels.initial || !this.isActive) {\r\n      // Keep initial zoom level if it was before the resize,\r\n      // as well as when this slide is not active\r\n\r\n      // Reset position and scale to original state\r\n      this.calculateSize();\r\n      this.currentResolution = 0;\r\n      this.zoomAndPanToInitial();\r\n      this.applyCurrentZoomPan();\r\n      this.updateContentSize();\r\n    } else {\r\n      // readjust pan position if it's beyond the bounds\r\n      this.calculateSize();\r\n      this.bounds.update(this.currZoomLevel);\r\n      this.panTo(this.pan.x, this.pan.y);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Apply size to current slide content,\r\n   * based on the current resolution and scale.\r\n   *\r\n   * @param {boolean} [force] if size should be updated even if dimensions weren't changed\r\n   */\r\n  updateContentSize(force) {\r\n    // Use initial zoom level\r\n    // if resolution is not defined (user didn't zoom yet)\r\n    const scaleMultiplier = this.currentResolution || this.zoomLevels.initial;\r\n\r\n    if (!scaleMultiplier) {\r\n      return;\r\n    }\r\n\r\n    const width = Math.round(this.width * scaleMultiplier) || this.pswp.viewportSize.x;\r\n    const height = Math.round(this.height * scaleMultiplier) || this.pswp.viewportSize.y;\r\n\r\n    if (!this.sizeChanged(width, height) && !force) {\r\n      return;\r\n    }\r\n    this.content.setDisplayedSize(width, height);\r\n  }\r\n\r\n  /**\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\r\n  sizeChanged(width, height) {\r\n    if (width !== this.prevDisplayedWidth\r\n        || height !== this.prevDisplayedHeight) {\r\n      this.prevDisplayedWidth = width;\r\n      this.prevDisplayedHeight = height;\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /** @returns {HTMLImageElement | HTMLDivElement | null | undefined} */\r\n  getPlaceholderElement() {\r\n    return this.content.placeholder?.element;\r\n  }\r\n\r\n  /**\r\n   * Zoom current slide image to...\r\n   *\r\n   * @param {number} destZoomLevel Destination zoom level.\r\n   * @param {Point} [centerPoint]\r\n   * Transform origin center point, or false if viewport center should be used.\r\n   * @param {number | false} [transitionDuration] Transition duration, may be set to 0.\r\n   * @param {boolean} [ignoreBounds] Minimum and maximum zoom levels will be ignored.\r\n   */\r\n  zoomTo(destZoomLevel, centerPoint, transitionDuration, ignoreBounds) {\r\n    const { pswp } = this;\r\n    if (!this.isZoomable()\r\n        || pswp.mainScroll.isShifted()) {\r\n      return;\r\n    }\r\n\r\n    pswp.dispatch('beforeZoomTo', {\r\n      destZoomLevel, centerPoint, transitionDuration\r\n    });\r\n\r\n    // stop all pan and zoom transitions\r\n    pswp.animations.stopAllPan();\r\n\r\n    // if (!centerPoint) {\r\n    //   centerPoint = pswp.getViewportCenterPoint();\r\n    // }\r\n\r\n    const prevZoomLevel = this.currZoomLevel;\r\n\r\n    if (!ignoreBounds) {\r\n      destZoomLevel = clamp(destZoomLevel, this.zoomLevels.min, this.zoomLevels.max);\r\n    }\r\n\r\n    // if (transitionDuration === undefined) {\r\n    //   transitionDuration = this.pswp.options.zoomAnimationDuration;\r\n    // }\r\n\r\n    this.setZoomLevel(destZoomLevel);\r\n    this.pan.x = this.calculateZoomToPanOffset('x', centerPoint, prevZoomLevel);\r\n    this.pan.y = this.calculateZoomToPanOffset('y', centerPoint, prevZoomLevel);\r\n    roundPoint(this.pan);\r\n\r\n    const finishTransition = () => {\r\n      this._setResolution(destZoomLevel);\r\n      this.applyCurrentZoomPan();\r\n    };\r\n\r\n    if (!transitionDuration) {\r\n      finishTransition();\r\n    } else {\r\n      pswp.animations.startTransition({\r\n        isPan: true,\r\n        name: 'zoomTo',\r\n        target: this.container,\r\n        transform: this.getCurrentTransform(),\r\n        onComplete: finishTransition,\r\n        duration: transitionDuration,\r\n        easing: pswp.options.easing\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Point} [centerPoint]\r\n   */\r\n  toggleZoom(centerPoint) {\r\n    this.zoomTo(\r\n      this.currZoomLevel === this.zoomLevels.initial\r\n        ? this.zoomLevels.secondary : this.zoomLevels.initial,\r\n      centerPoint,\r\n      this.pswp.options.zoomAnimationDuration\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Updates zoom level property and recalculates new pan bounds,\r\n   * unlike zoomTo it does not apply transform (use applyCurrentZoomPan)\r\n   *\r\n   * @param {number} currZoomLevel\r\n   */\r\n  setZoomLevel(currZoomLevel) {\r\n    this.currZoomLevel = currZoomLevel;\r\n    this.bounds.update(this.currZoomLevel);\r\n  }\r\n\r\n  /**\r\n   * Get pan position after zoom at a given `point`.\r\n   *\r\n   * Always call setZoomLevel(newZoomLevel) beforehand to recalculate\r\n   * pan bounds according to the new zoom level.\r\n   *\r\n   * @param {'x' | 'y'} axis\r\n   * @param {Point} [point]\r\n   * point based on which zoom is performed, usually refers to the current mouse position,\r\n   * if false - viewport center will be used.\r\n   * @param {number} [prevZoomLevel] Zoom level before new zoom was applied.\r\n   * @returns {number}\r\n   */\r\n  calculateZoomToPanOffset(axis, point, prevZoomLevel) {\r\n    const totalPanDistance = this.bounds.max[axis] - this.bounds.min[axis];\r\n    if (totalPanDistance === 0) {\r\n      return this.bounds.center[axis];\r\n    }\r\n\r\n    if (!point) {\r\n      point = this.pswp.getViewportCenterPoint();\r\n    }\r\n\r\n    if (!prevZoomLevel) {\r\n      prevZoomLevel = this.zoomLevels.initial;\r\n    }\r\n\r\n    const zoomFactor = this.currZoomLevel / prevZoomLevel;\r\n    return this.bounds.correctPan(\r\n      axis,\r\n      (this.pan[axis] - point[axis]) * zoomFactor + point[axis]\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Apply pan and keep it within bounds.\r\n   *\r\n   * @param {number} panX\r\n   * @param {number} panY\r\n   */\r\n  panTo(panX, panY) {\r\n    this.pan.x = this.bounds.correctPan('x', panX);\r\n    this.pan.y = this.bounds.correctPan('y', panY);\r\n    this.applyCurrentZoomPan();\r\n  }\r\n\r\n  /**\r\n   * If the slide in the current state can be panned by the user\r\n   * @returns {boolean}\r\n   */\r\n  isPannable() {\r\n    return Boolean(this.width) && (this.currZoomLevel > this.zoomLevels.fit);\r\n  }\r\n\r\n  /**\r\n   * If the slide can be zoomed\r\n   * @returns {boolean}\r\n   */\r\n  isZoomable() {\r\n    return Boolean(this.width) && this.content.isZoomable();\r\n  }\r\n\r\n  /**\r\n   * Apply transform and scale based on\r\n   * the current pan position (this.pan) and zoom level (this.currZoomLevel)\r\n   */\r\n  applyCurrentZoomPan() {\r\n    this._applyZoomTransform(this.pan.x, this.pan.y, this.currZoomLevel);\r\n    if (this === this.pswp.currSlide) {\r\n      this.pswp.dispatch('zoomPanUpdate', { slide: this });\r\n    }\r\n  }\r\n\r\n  zoomAndPanToInitial() {\r\n    this.currZoomLevel = this.zoomLevels.initial;\r\n\r\n    // pan according to the zoom level\r\n    this.bounds.update(this.currZoomLevel);\r\n    equalizePoints(this.pan, this.bounds.center);\r\n    this.pswp.dispatch('initialZoomPan', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * Set translate and scale based on current resolution\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} zoom\r\n   * @private\r\n   */\r\n  _applyZoomTransform(x, y, zoom) {\r\n    zoom /= this.currentResolution || this.zoomLevels.initial;\r\n    setTransform(this.container, x, y, zoom);\r\n  }\r\n\r\n  calculateSize() {\r\n    const { pswp } = this;\r\n\r\n    equalizePoints(\r\n      this.panAreaSize,\r\n      getPanAreaSize(pswp.options, pswp.viewportSize, this.data, this.index)\r\n    );\r\n\r\n    this.zoomLevels.update(this.width, this.height, this.panAreaSize);\r\n\r\n    pswp.dispatch('calcSlideSize', {\r\n      slide: this\r\n    });\r\n  }\r\n\r\n  /** @returns {string} */\r\n  getCurrentTransform() {\r\n    const scale = this.currZoomLevel / (this.currentResolution || this.zoomLevels.initial);\r\n    return toTransformString(this.pan.x, this.pan.y, scale);\r\n  }\r\n\r\n  /**\r\n   * Set resolution and re-render the image.\r\n   *\r\n   * For example, if the real image size is 2000x1500,\r\n   * and resolution is 0.5 - it will be rendered as 1000x750.\r\n   *\r\n   * Image with zoom level 2 and resolution 0.5 is\r\n   * the same as image with zoom level 1 and resolution 1.\r\n   *\r\n   * Used to optimize animations and make\r\n   * sure that browser renders image in the highest quality.\r\n   * Also used by responsive images to load the correct one.\r\n   *\r\n   * @param {number} newResolution\r\n   */\r\n  _setResolution(newResolution) {\r\n    if (newResolution === this.currentResolution) {\r\n      return;\r\n    }\r\n\r\n    this.currentResolution = newResolution;\r\n    this.updateContentSize();\r\n\r\n    this.pswp.dispatch('resolutionChanged');\r\n  }\r\n}\r\n\r\nexport default Slide;\r\n","import {\r\n  equalizePoints, roundPoint, clamp\r\n} from '../util/util.js';\r\n\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('./gestures.js').default} Gestures */\r\n\r\nconst PAN_END_FRICTION = 0.35;\r\nconst VERTICAL_DRAG_FRICTION = 0.6;\r\n\r\n// 1 corresponds to the third of viewport height\r\nconst MIN_RATIO_TO_CLOSE = 0.4;\r\n\r\n// Minimum speed required to navigate\r\n// to next or previous slide\r\nconst MIN_NEXT_SLIDE_SPEED = 0.5;\r\n\r\n/**\r\n * @param {number} initialVelocity\r\n * @param {number} decelerationRate\r\n * @returns {number}\r\n */\r\nfunction project(initialVelocity, decelerationRate) {\r\n  return initialVelocity * decelerationRate / (1 - decelerationRate);\r\n}\r\n\r\n/**\r\n * Handles single pointer dragging\r\n */\r\nclass DragHandler {\r\n  /**\r\n   * @param {Gestures} gestures\r\n   */\r\n  constructor(gestures) {\r\n    this.gestures = gestures;\r\n    this.pswp = gestures.pswp;\r\n    /** @type {Point} */\r\n    this.startPan = { x: 0, y: 0 };\r\n  }\r\n\r\n  start() {\r\n    if (this.pswp.currSlide) {\r\n      equalizePoints(this.startPan, this.pswp.currSlide.pan);\r\n    }\r\n    this.pswp.animations.stopAll();\r\n  }\r\n\r\n  change() {\r\n    const { p1, prevP1, dragAxis } = this.gestures;\r\n    const { currSlide } = this.pswp;\r\n\r\n    if (dragAxis === 'y'\r\n        && this.pswp.options.closeOnVerticalDrag\r\n        && (currSlide && currSlide.currZoomLevel <= currSlide.zoomLevels.fit)\r\n        && !this.gestures.isMultitouch) {\r\n      // Handle vertical drag to close\r\n      const panY = currSlide.pan.y + (p1.y - prevP1.y);\r\n      if (!this.pswp.dispatch('verticalDrag', { panY }).defaultPrevented) {\r\n        this._setPanWithFriction('y', panY, VERTICAL_DRAG_FRICTION);\r\n        const bgOpacity = 1 - Math.abs(this._getVerticalDragRatio(currSlide.pan.y));\r\n        this.pswp.applyBgOpacity(bgOpacity);\r\n        currSlide.applyCurrentZoomPan();\r\n      }\r\n    } else {\r\n      const mainScrollChanged = this._panOrMoveMainScroll('x');\r\n      if (!mainScrollChanged) {\r\n        this._panOrMoveMainScroll('y');\r\n\r\n        if (currSlide) {\r\n          roundPoint(currSlide.pan);\r\n          currSlide.applyCurrentZoomPan();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  end() {\r\n    const { velocity } = this.gestures;\r\n    const { mainScroll, currSlide } = this.pswp;\r\n    let indexDiff = 0;\r\n\r\n    this.pswp.animations.stopAll();\r\n\r\n    // Handle main scroll if it's shifted\r\n    if (mainScroll.isShifted()) {\r\n      // Position of the main scroll relative to the viewport\r\n      const mainScrollShiftDiff = mainScroll.x - mainScroll.getCurrSlideX();\r\n\r\n      // Ratio between 0 and 1:\r\n      // 0 - slide is not visible at all,\r\n      // 0.5 - half of the slide is visible\r\n      // 1 - slide is fully visible\r\n      const currentSlideVisibilityRatio = (mainScrollShiftDiff / this.pswp.viewportSize.x);\r\n\r\n      // Go next slide.\r\n      //\r\n      // - if velocity and its direction is matched,\r\n      //   and we see at least tiny part of the next slide\r\n      //\r\n      // - or if we see less than 50% of the current slide\r\n      //   and velocity is close to 0\r\n      //\r\n      if ((velocity.x < -MIN_NEXT_SLIDE_SPEED && currentSlideVisibilityRatio < 0)\r\n          || (velocity.x < 0.1 && currentSlideVisibilityRatio < -0.5)) {\r\n        // Go to next slide\r\n        indexDiff = 1;\r\n        velocity.x = Math.min(velocity.x, 0);\r\n      } else if ((velocity.x > MIN_NEXT_SLIDE_SPEED && currentSlideVisibilityRatio > 0)\r\n          || (velocity.x > -0.1 && currentSlideVisibilityRatio > 0.5)) {\r\n        // Go to prev slide\r\n        indexDiff = -1;\r\n        velocity.x = Math.max(velocity.x, 0);\r\n      }\r\n\r\n      mainScroll.moveIndexBy(indexDiff, true, velocity.x);\r\n    }\r\n\r\n    // Restore zoom level\r\n    if ((currSlide && currSlide.currZoomLevel > currSlide.zoomLevels.max)\r\n        || this.gestures.isMultitouch) {\r\n      this.gestures.zoomLevels.correctZoomPan(true);\r\n    } else {\r\n      // we run two animations instead of one,\r\n      // as each axis has own pan boundaries and thus different spring function\r\n      // (correctZoomPan does not have this functionality,\r\n      //  it animates all properties with single timing function)\r\n      this._finishPanGestureForAxis('x');\r\n      this._finishPanGestureForAxis('y');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   */\r\n  _finishPanGestureForAxis(axis) {\r\n    const { velocity } = this.gestures;\r\n    const { currSlide } = this.pswp;\r\n\r\n    if (!currSlide) {\r\n      return;\r\n    }\r\n\r\n    const { pan, bounds } = currSlide;\r\n    const panPos = pan[axis];\r\n    const restoreBgOpacity = (this.pswp.bgOpacity < 1 && axis === 'y');\r\n\r\n    // 0.995 means - scroll view loses 0.5% of its velocity per millisecond\r\n    // Increasing this number will reduce travel distance\r\n    const decelerationRate = 0.995; // 0.99\r\n\r\n    // Pan position if there is no bounds\r\n    const projectedPosition = panPos + project(velocity[axis], decelerationRate);\r\n\r\n    if (restoreBgOpacity) {\r\n      const vDragRatio = this._getVerticalDragRatio(panPos);\r\n      const projectedVDragRatio = this._getVerticalDragRatio(projectedPosition);\r\n\r\n      // If we are above and moving upwards,\r\n      // or if we are below and moving downwards\r\n      if ((vDragRatio < 0 && projectedVDragRatio < -MIN_RATIO_TO_CLOSE)\r\n          || (vDragRatio > 0 && projectedVDragRatio > MIN_RATIO_TO_CLOSE)) {\r\n        this.pswp.close();\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Pan position with corrected bounds\r\n    const correctedPanPosition = bounds.correctPan(axis, projectedPosition);\r\n\r\n    // Exit if pan position should not be changed\r\n    // or if speed it too low\r\n    if (panPos === correctedPanPosition) {\r\n      return;\r\n    }\r\n\r\n    // Overshoot if the final position is out of pan bounds\r\n    const dampingRatio = (correctedPanPosition === projectedPosition) ? 1 : 0.82;\r\n\r\n    const initialBgOpacity = this.pswp.bgOpacity;\r\n    const totalPanDist = correctedPanPosition - panPos;\r\n\r\n    this.pswp.animations.startSpring({\r\n      name: 'panGesture' + axis,\r\n      isPan: true,\r\n      start: panPos,\r\n      end: correctedPanPosition,\r\n      velocity: velocity[axis],\r\n      dampingRatio,\r\n      onUpdate: (pos) => {\r\n        // Animate opacity of background relative to Y pan position of an image\r\n        if (restoreBgOpacity && this.pswp.bgOpacity < 1) {\r\n          // 0 - start of animation, 1 - end of animation\r\n          const animationProgressRatio = 1 - (correctedPanPosition - pos) / totalPanDist;\r\n\r\n          // We clamp opacity to keep it between 0 and 1.\r\n          // As progress ratio can be larger than 1 due to overshoot,\r\n          // and we do not want to bounce opacity.\r\n          this.pswp.applyBgOpacity(clamp(\r\n            initialBgOpacity + (1 - initialBgOpacity) * animationProgressRatio,\r\n            0,\r\n            1\r\n          ));\r\n        }\r\n\r\n        pan[axis] = Math.floor(pos);\r\n        currSlide.applyCurrentZoomPan();\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update position of the main scroll,\r\n   * or/and update pan position of the current slide.\r\n   *\r\n   * Should return true if it changes (or can change) main scroll.\r\n   *\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   * @returns {boolean}\r\n   */\r\n  _panOrMoveMainScroll(axis) {\r\n    const { p1, dragAxis, prevP1, isMultitouch } = this.gestures;\r\n    const { currSlide, mainScroll } = this.pswp;\r\n    const delta = (p1[axis] - prevP1[axis]);\r\n    const newMainScrollX = mainScroll.x + delta;\r\n\r\n    if (!delta || !currSlide) {\r\n      return false;\r\n    }\r\n\r\n    // Always move main scroll if image can not be panned\r\n    if (axis === 'x' && !currSlide.isPannable() && !isMultitouch) {\r\n      mainScroll.moveTo(newMainScrollX, true);\r\n      return true; // changed main scroll\r\n    }\r\n\r\n    const { bounds } = currSlide;\r\n    const newPan = currSlide.pan[axis] + delta;\r\n\r\n    if (this.pswp.options.allowPanToNext\r\n        && dragAxis === 'x'\r\n        && axis === 'x'\r\n        && !isMultitouch) {\r\n      const currSlideMainScrollX = mainScroll.getCurrSlideX();\r\n\r\n      // Position of the main scroll relative to the viewport\r\n      const mainScrollShiftDiff = mainScroll.x - currSlideMainScrollX;\r\n\r\n      const isLeftToRight = delta > 0;\r\n      const isRightToLeft = !isLeftToRight;\r\n\r\n      if (newPan > bounds.min[axis] && isLeftToRight) {\r\n        // Panning from left to right, beyond the left edge\r\n\r\n        // Wether the image was at minimum pan position (or less)\r\n        // when this drag gesture started.\r\n        // Minimum pan position refers to the left edge of the image.\r\n        const wasAtMinPanPosition = (bounds.min[axis] <= this.startPan[axis]);\r\n\r\n        if (wasAtMinPanPosition) {\r\n          mainScroll.moveTo(newMainScrollX, true);\r\n          return true;\r\n        } else {\r\n          this._setPanWithFriction(axis, newPan);\r\n          //currSlide.pan[axis] = newPan;\r\n        }\r\n      } else if (newPan < bounds.max[axis] && isRightToLeft) {\r\n        // Paning from right to left, beyond the right edge\r\n\r\n        // Maximum pan position refers to the right edge of the image.\r\n        const wasAtMaxPanPosition = (this.startPan[axis] <= bounds.max[axis]);\r\n\r\n        if (wasAtMaxPanPosition) {\r\n          mainScroll.moveTo(newMainScrollX, true);\r\n          return true;\r\n        } else {\r\n          this._setPanWithFriction(axis, newPan);\r\n          //currSlide.pan[axis] = newPan;\r\n        }\r\n      } else {\r\n        // If main scroll is shifted\r\n        if (mainScrollShiftDiff !== 0) {\r\n          // If main scroll is shifted right\r\n          if (mainScrollShiftDiff > 0 /*&& isRightToLeft*/) {\r\n            mainScroll.moveTo(Math.max(newMainScrollX, currSlideMainScrollX), true);\r\n            return true;\r\n          } else if (mainScrollShiftDiff < 0 /*&& isLeftToRight*/) {\r\n            // Main scroll is shifted left (Position is less than 0 comparing to the viewport 0)\r\n            mainScroll.moveTo(Math.min(newMainScrollX, currSlideMainScrollX), true);\r\n            return true;\r\n          }\r\n        } else {\r\n          // We are within pan bounds, so just pan\r\n          this._setPanWithFriction(axis, newPan);\r\n        }\r\n      }\r\n    } else {\r\n      if (axis === 'y') {\r\n        // Do not pan vertically if main scroll is shifted o\r\n        if (!mainScroll.isShifted() && bounds.min.y !== bounds.max.y) {\r\n          this._setPanWithFriction(axis, newPan);\r\n        }\r\n      } else {\r\n        this._setPanWithFriction(axis, newPan);\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // If we move above - the ratio is negative\r\n  // If we move below the ratio is positive\r\n\r\n  /**\r\n   * Relation between pan Y position and third of viewport height.\r\n   *\r\n   * When we are at initial position (center bounds) - the ratio is 0,\r\n   * if position is shifted upwards - the ratio is negative,\r\n   * if position is shifted downwards - the ratio is positive.\r\n   *\r\n   * @private\r\n   * @param {number} panY The current pan Y position.\r\n   * @returns {number}\r\n   */\r\n  _getVerticalDragRatio(panY) {\r\n    return (panY - (this.pswp.currSlide?.bounds.center.y ?? 0)) / (this.pswp.viewportSize.y / 3);\r\n  }\r\n\r\n  /**\r\n   * Set pan position of the current slide.\r\n   * Apply friction if the position is beyond the pan bounds,\r\n   * or if custom friction is defined.\r\n   *\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   * @param {number} potentialPan\r\n   * @param {number} [customFriction] (0.1 - 1)\r\n   */\r\n  _setPanWithFriction(axis, potentialPan, customFriction) {\r\n    const { currSlide } = this.pswp;\r\n\r\n    if (!currSlide) {\r\n      return;\r\n    }\r\n\r\n    const { pan, bounds } = currSlide;\r\n    const correctedPan = bounds.correctPan(axis, potentialPan);\r\n    // If we are out of pan bounds\r\n    if (correctedPan !== potentialPan || customFriction) {\r\n      const delta = Math.round(potentialPan - pan[axis]);\r\n      pan[axis] += delta * (customFriction || PAN_END_FRICTION);\r\n    } else {\r\n      pan[axis] = potentialPan;\r\n    }\r\n  }\r\n}\r\n\r\nexport default DragHandler;\r\n","import {\r\n  equalizePoints, getDistanceBetween, clamp, pointsEqual\r\n} from '../util/util.js';\r\n\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('./gestures.js').default} Gestures */\r\n\r\nconst UPPER_ZOOM_FRICTION = 0.05;\r\nconst LOWER_ZOOM_FRICTION = 0.15;\r\n\r\n\r\n/**\r\n * Get center point between two points\r\n *\r\n * @param {Point} p\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {Point}\r\n */\r\nfunction getZoomPointsCenter(p, p1, p2) {\r\n  p.x = (p1.x + p2.x) / 2;\r\n  p.y = (p1.y + p2.y) / 2;\r\n  return p;\r\n}\r\n\r\nclass ZoomHandler {\r\n  /**\r\n   * @param {Gestures} gestures\r\n   */\r\n  constructor(gestures) {\r\n    this.gestures = gestures;\r\n    /**\r\n     * @private\r\n     * @type {Point}\r\n     */\r\n    this._startPan = { x: 0, y: 0 };\r\n    /**\r\n     * @private\r\n     * @type {Point}\r\n     */\r\n    this._startZoomPoint = { x: 0, y: 0 };\r\n    /**\r\n     * @private\r\n     * @type {Point}\r\n     */\r\n    this._zoomPoint = { x: 0, y: 0 };\r\n    /** @private */\r\n    this._wasOverFitZoomLevel = false;\r\n    /** @private */\r\n    this._startZoomLevel = 1;\r\n  }\r\n\r\n  start() {\r\n    const { currSlide } = this.gestures.pswp;\r\n    if (currSlide) {\r\n      this._startZoomLevel = currSlide.currZoomLevel;\r\n      equalizePoints(this._startPan, currSlide.pan);\r\n    }\r\n\r\n    this.gestures.pswp.animations.stopAllPan();\r\n    this._wasOverFitZoomLevel = false;\r\n  }\r\n\r\n  change() {\r\n    const { p1, startP1, p2, startP2, pswp } = this.gestures;\r\n    const { currSlide } = pswp;\r\n\r\n    if (!currSlide) {\r\n      return;\r\n    }\r\n\r\n    const minZoomLevel = currSlide.zoomLevels.min;\r\n    const maxZoomLevel = currSlide.zoomLevels.max;\r\n\r\n    if (!currSlide.isZoomable() || pswp.mainScroll.isShifted()) {\r\n      return;\r\n    }\r\n\r\n    getZoomPointsCenter(this._startZoomPoint, startP1, startP2);\r\n    getZoomPointsCenter(this._zoomPoint, p1, p2);\r\n\r\n    let currZoomLevel = (1 / getDistanceBetween(startP1, startP2))\r\n                      * getDistanceBetween(p1, p2)\r\n                      * this._startZoomLevel;\r\n\r\n    // slightly over the zoom.fit\r\n    if (currZoomLevel > currSlide.zoomLevels.initial + (currSlide.zoomLevels.initial / 15)) {\r\n      this._wasOverFitZoomLevel = true;\r\n    }\r\n\r\n    if (currZoomLevel < minZoomLevel) {\r\n      if (pswp.options.pinchToClose\r\n          && !this._wasOverFitZoomLevel\r\n          && this._startZoomLevel <= currSlide.zoomLevels.initial) {\r\n        // fade out background if zooming out\r\n        const bgOpacity = 1 - ((minZoomLevel - currZoomLevel) / (minZoomLevel / 1.2));\r\n        if (!pswp.dispatch('pinchClose', { bgOpacity }).defaultPrevented) {\r\n          pswp.applyBgOpacity(bgOpacity);\r\n        }\r\n      } else {\r\n        // Apply the friction if zoom level is below the min\r\n        currZoomLevel = minZoomLevel - (minZoomLevel - currZoomLevel) * LOWER_ZOOM_FRICTION;\r\n      }\r\n    } else if (currZoomLevel > maxZoomLevel) {\r\n      // Apply the friction if zoom level is above the max\r\n      currZoomLevel = maxZoomLevel + (currZoomLevel - maxZoomLevel) * UPPER_ZOOM_FRICTION;\r\n    }\r\n\r\n    currSlide.pan.x = this._calculatePanForZoomLevel('x', currZoomLevel);\r\n    currSlide.pan.y = this._calculatePanForZoomLevel('y', currZoomLevel);\r\n\r\n    currSlide.setZoomLevel(currZoomLevel);\r\n    currSlide.applyCurrentZoomPan();\r\n  }\r\n\r\n  end() {\r\n    const { pswp } = this.gestures;\r\n    const { currSlide } = pswp;\r\n    if ((!currSlide || currSlide.currZoomLevel < currSlide.zoomLevels.initial)\r\n        && !this._wasOverFitZoomLevel\r\n        && pswp.options.pinchToClose) {\r\n      pswp.close();\r\n    } else {\r\n      this.correctZoomPan();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   * @param {number} currZoomLevel\r\n   * @returns {number}\r\n   */\r\n  _calculatePanForZoomLevel(axis, currZoomLevel) {\r\n    const zoomFactor = currZoomLevel / this._startZoomLevel;\r\n    return this._zoomPoint[axis]\r\n            - ((this._startZoomPoint[axis] - this._startPan[axis]) * zoomFactor);\r\n  }\r\n\r\n  /**\r\n   * Correct currZoomLevel and pan if they are\r\n   * beyond minimum or maximum values.\r\n   * With animation.\r\n   *\r\n   * @param {boolean} [ignoreGesture]\r\n   * Wether gesture coordinates should be ignored when calculating destination pan position.\r\n   */\r\n  correctZoomPan(ignoreGesture) {\r\n    const { pswp } = this.gestures;\r\n    const { currSlide } = pswp;\r\n\r\n    if (!currSlide?.isZoomable()) {\r\n      return;\r\n    }\r\n\r\n    if (this._zoomPoint.x === 0) {\r\n      ignoreGesture = true;\r\n    }\r\n\r\n    const prevZoomLevel = currSlide.currZoomLevel;\r\n\r\n    /** @type {number} */\r\n    let destinationZoomLevel;\r\n    let currZoomLevelNeedsChange = true;\r\n\r\n    if (prevZoomLevel < currSlide.zoomLevels.initial) {\r\n      destinationZoomLevel = currSlide.zoomLevels.initial;\r\n      // zoom to min\r\n    } else if (prevZoomLevel > currSlide.zoomLevels.max) {\r\n      destinationZoomLevel = currSlide.zoomLevels.max;\r\n      // zoom to max\r\n    } else {\r\n      currZoomLevelNeedsChange = false;\r\n      destinationZoomLevel = prevZoomLevel;\r\n    }\r\n\r\n    const initialBgOpacity = pswp.bgOpacity;\r\n    const restoreBgOpacity = pswp.bgOpacity < 1;\r\n\r\n    const initialPan = equalizePoints({ x: 0, y: 0 }, currSlide.pan);\r\n    let destinationPan = equalizePoints({ x: 0, y: 0 }, initialPan);\r\n\r\n    if (ignoreGesture) {\r\n      this._zoomPoint.x = 0;\r\n      this._zoomPoint.y = 0;\r\n      this._startZoomPoint.x = 0;\r\n      this._startZoomPoint.y = 0;\r\n      this._startZoomLevel = prevZoomLevel;\r\n      equalizePoints(this._startPan, initialPan);\r\n    }\r\n\r\n    if (currZoomLevelNeedsChange) {\r\n      destinationPan = {\r\n        x: this._calculatePanForZoomLevel('x', destinationZoomLevel),\r\n        y: this._calculatePanForZoomLevel('y', destinationZoomLevel)\r\n      };\r\n    }\r\n\r\n    // set zoom level, so pan bounds are updated according to it\r\n    currSlide.setZoomLevel(destinationZoomLevel);\r\n\r\n    destinationPan = {\r\n      x: currSlide.bounds.correctPan('x', destinationPan.x),\r\n      y: currSlide.bounds.correctPan('y', destinationPan.y)\r\n    };\r\n\r\n    // return zoom level and its bounds to initial\r\n    currSlide.setZoomLevel(prevZoomLevel);\r\n\r\n    const panNeedsChange = !pointsEqual(destinationPan, initialPan);\r\n\r\n    if (!panNeedsChange && !currZoomLevelNeedsChange && !restoreBgOpacity) {\r\n      // update resolution after gesture\r\n      currSlide._setResolution(destinationZoomLevel);\r\n      currSlide.applyCurrentZoomPan();\r\n\r\n      // nothing to animate\r\n      return;\r\n    }\r\n\r\n    pswp.animations.stopAllPan();\r\n\r\n    pswp.animations.startSpring({\r\n      isPan: true,\r\n      start: 0,\r\n      end: 1000,\r\n      velocity: 0,\r\n      dampingRatio: 1,\r\n      naturalFrequency: 40,\r\n      onUpdate: (now) => {\r\n        now /= 1000; // 0 - start, 1 - end\r\n\r\n        if (panNeedsChange || currZoomLevelNeedsChange) {\r\n          if (panNeedsChange) {\r\n            currSlide.pan.x = initialPan.x + (destinationPan.x - initialPan.x) * now;\r\n            currSlide.pan.y = initialPan.y + (destinationPan.y - initialPan.y) * now;\r\n          }\r\n\r\n          if (currZoomLevelNeedsChange) {\r\n            const newZoomLevel = prevZoomLevel\r\n                        + (destinationZoomLevel - prevZoomLevel) * now;\r\n            currSlide.setZoomLevel(newZoomLevel);\r\n          }\r\n\r\n          currSlide.applyCurrentZoomPan();\r\n        }\r\n\r\n        // Restore background opacity\r\n        if (restoreBgOpacity && pswp.bgOpacity < 1) {\r\n          // We clamp opacity to keep it between 0 and 1.\r\n          // As progress ratio can be larger than 1 due to overshoot,\r\n          // and we do not want to bounce opacity.\r\n          pswp.applyBgOpacity(clamp(\r\n            initialBgOpacity + (1 - initialBgOpacity) * now, 0, 1\r\n          ));\r\n        }\r\n      },\r\n      onComplete: () => {\r\n        // update resolution after transition ends\r\n        currSlide._setResolution(destinationZoomLevel);\r\n        currSlide.applyCurrentZoomPan();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default ZoomHandler;\r\n","/**\r\n * @template {string} T\r\n * @template {string} P\r\n * @typedef {import('../types.js').AddPostfix<T, P>} AddPostfix<T, P>\r\n */\r\n\r\n/** @typedef {import('./gestures.js').default} Gestures */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n/** @typedef {'imageClick' | 'bgClick' | 'tap' | 'doubleTap'} Actions */\r\n\r\n/**\r\n * Whether the tap was performed on the main slide\r\n * (rather than controls or caption).\r\n *\r\n * @param {PointerEvent} event\r\n * @returns {boolean}\r\n */\r\nfunction didTapOnMainContent(event) {\r\n  return !!(/** @type {HTMLElement} */ (event.target).closest('.pswp__container'));\r\n}\r\n\r\n/**\r\n * Tap, double-tap handler.\r\n */\r\nclass TapHandler {\r\n  /**\r\n   * @param {Gestures} gestures\r\n   */\r\n  constructor(gestures) {\r\n    this.gestures = gestures;\r\n  }\r\n\r\n  /**\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\r\n  click(point, originalEvent) {\r\n    const targetClassList = /** @type {HTMLElement} */ (originalEvent.target).classList;\r\n    const isImageClick = targetClassList.contains('pswp__img');\r\n    const isBackgroundClick = targetClassList.contains('pswp__item')\r\n                              || targetClassList.contains('pswp__zoom-wrap');\r\n\r\n    if (isImageClick) {\r\n      this._doClickOrTapAction('imageClick', point, originalEvent);\r\n    } else if (isBackgroundClick) {\r\n      this._doClickOrTapAction('bgClick', point, originalEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\r\n  tap(point, originalEvent) {\r\n    if (didTapOnMainContent(originalEvent)) {\r\n      this._doClickOrTapAction('tap', point, originalEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\r\n  doubleTap(point, originalEvent) {\r\n    if (didTapOnMainContent(originalEvent)) {\r\n      this._doClickOrTapAction('doubleTap', point, originalEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Actions} actionName\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\r\n  _doClickOrTapAction(actionName, point, originalEvent) {\r\n    const { pswp } = this.gestures;\r\n    const { currSlide } = pswp;\r\n    const actionFullName = /** @type {AddPostfix<Actions, 'Action'>} */ (actionName + 'Action');\r\n    const optionValue = pswp.options[actionFullName];\r\n\r\n    if (pswp.dispatch(actionFullName, { point, originalEvent }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (typeof optionValue === 'function') {\r\n      optionValue.call(pswp, point, originalEvent);\r\n      return;\r\n    }\r\n\r\n    switch (optionValue) {\r\n      case 'close':\r\n      case 'next':\r\n        pswp[optionValue]();\r\n        break;\r\n      case 'zoom':\r\n        currSlide?.toggleZoom(point);\r\n        break;\r\n      case 'zoom-or-close':\r\n        // by default click zooms current image,\r\n        // if it can not be zoomed - gallery will be closed\r\n        if (currSlide?.isZoomable()\r\n            && currSlide.zoomLevels.secondary !== currSlide.zoomLevels.initial) {\r\n          currSlide.toggleZoom(point);\r\n        } else if (pswp.options.clickToCloseNonZoomable) {\r\n          pswp.close();\r\n        }\r\n        break;\r\n      case 'toggle-controls':\r\n        this.gestures.pswp.element?.classList.toggle('pswp--ui-visible');\r\n        // if (_controlsVisible) {\r\n        //   _ui.hideControls();\r\n        // } else {\r\n        //   _ui.showControls();\r\n        // }\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport default TapHandler;\r\n","import {\r\n  equalizePoints, pointsEqual, getDistanceBetween\r\n} from '../util/util.js';\r\n\r\nimport DragHandler from './drag-handler.js';\r\nimport ZoomHandler from './zoom-handler.js';\r\nimport TapHandler from './tap-handler.js';\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n// How far should user should drag\r\n// until we can determine that the gesture is swipe and its direction\r\nconst AXIS_SWIPE_HYSTERISIS = 10;\r\n//const PAN_END_FRICTION = 0.35;\r\n\r\nconst DOUBLE_TAP_DELAY = 300; // ms\r\nconst MIN_TAP_DISTANCE = 25; // px\r\n\r\n/**\r\n * Gestures class bind touch, pointer or mouse events\r\n * and emits drag to drag-handler and zoom events zoom-handler.\r\n *\r\n * Drag and zoom events are emited in requestAnimationFrame,\r\n * and only when one of pointers was actually changed.\r\n */\r\nclass Gestures {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n\r\n    /** @type {'x' | 'y' | null} */\r\n    this.dragAxis = null;\r\n\r\n    // point objects are defined once and reused\r\n    // PhotoSwipe keeps track only of two pointers, others are ignored\r\n    /** @type {Point} */\r\n    this.p1 = { x: 0, y: 0 }; // the first pressed pointer\r\n    /** @type {Point} */\r\n    this.p2 = { x: 0, y: 0 }; // the second pressed pointer\r\n    /** @type {Point} */\r\n    this.prevP1 = { x: 0, y: 0 };\r\n    /** @type {Point} */\r\n    this.prevP2 = { x: 0, y: 0 };\r\n    /** @type {Point} */\r\n    this.startP1 = { x: 0, y: 0 };\r\n    /** @type {Point} */\r\n    this.startP2 = { x: 0, y: 0 };\r\n    /** @type {Point} */\r\n    this.velocity = { x: 0, y: 0 };\r\n\r\n    /** @type {Point}\r\n     * @private\r\n     */\r\n    this._lastStartP1 = { x: 0, y: 0 };\r\n    /** @type {Point}\r\n     * @private\r\n     */\r\n    this._intervalP1 = { x: 0, y: 0 };\r\n    /** @private */\r\n    this._numActivePoints = 0;\r\n    /** @type {Point[]}\r\n     * @private\r\n     */\r\n    this._ongoingPointers = [];\r\n    /** @private */\r\n    this._touchEventEnabled = 'ontouchstart' in window;\r\n    /** @private */\r\n    this._pointerEventEnabled = !!(window.PointerEvent);\r\n    this.supportsTouch = this._touchEventEnabled\r\n                          || (this._pointerEventEnabled && navigator.maxTouchPoints > 1);\r\n    /** @private */\r\n    this._numActivePoints = 0;\r\n    /** @private */\r\n    this._intervalTime = 0;\r\n    /** @private */\r\n    this._velocityCalculated = false;\r\n    this.isMultitouch = false;\r\n    this.isDragging = false;\r\n    this.isZooming = false;\r\n    /** @type {number | null} */\r\n    this.raf = null;\r\n    /** @type {NodeJS.Timeout | null}\r\n     * @private\r\n     */\r\n    this._tapTimer = null;\r\n\r\n    if (!this.supportsTouch) {\r\n      // disable pan to next slide for non-touch devices\r\n      pswp.options.allowPanToNext = false;\r\n    }\r\n\r\n    this.drag = new DragHandler(this);\r\n    this.zoomLevels = new ZoomHandler(this);\r\n    this.tapHandler = new TapHandler(this);\r\n\r\n    pswp.on('bindEvents', () => {\r\n      pswp.events.add(\r\n        pswp.scrollWrap,\r\n        'click',\r\n        /** @type EventListener */(this._onClick.bind(this))\r\n      );\r\n\r\n      if (this._pointerEventEnabled) {\r\n        this._bindEvents('pointer', 'down', 'up', 'cancel');\r\n      } else if (this._touchEventEnabled) {\r\n        this._bindEvents('touch', 'start', 'end', 'cancel');\r\n\r\n        // In previous versions we also bound mouse event here,\r\n        // in case device supports both touch and mouse events,\r\n        // but newer versions of browsers now support PointerEvent.\r\n\r\n        // on iOS10 if you bind touchmove/end after touchstart,\r\n        // and you don't preventDefault touchstart (which PhotoSwipe does),\r\n        // preventDefault will have no effect on touchmove and touchend.\r\n        // Unless you bind it previously.\r\n        if (pswp.scrollWrap) {\r\n          pswp.scrollWrap.ontouchmove = () => {};\r\n          pswp.scrollWrap.ontouchend = () => {};\r\n        }\r\n      } else {\r\n        this._bindEvents('mouse', 'down', 'up');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {'mouse' | 'touch' | 'pointer'} pref\r\n   * @param {'down' | 'start'} down\r\n   * @param {'up' | 'end'} up\r\n   * @param {'cancel'} [cancel]\r\n   */\r\n  _bindEvents(pref, down, up, cancel) {\r\n    const { pswp } = this;\r\n    const { events } = pswp;\r\n\r\n    const cancelEvent = cancel ? pref + cancel : '';\r\n\r\n    events.add(\r\n      pswp.scrollWrap,\r\n      pref + down,\r\n      /** @type EventListener */(this.onPointerDown.bind(this))\r\n    );\r\n    events.add(window, pref + 'move', /** @type EventListener */(this.onPointerMove.bind(this)));\r\n    events.add(window, pref + up, /** @type EventListener */(this.onPointerUp.bind(this)));\r\n    if (cancelEvent) {\r\n      events.add(\r\n        pswp.scrollWrap,\r\n        cancelEvent,\r\n        /** @type EventListener */(this.onPointerUp.bind(this))\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} e\r\n   */\r\n  onPointerDown(e) {\r\n    // We do not call preventDefault for touch events\r\n    // to allow browser to show native dialog on longpress\r\n    // (the one that allows to save image or open it in new tab).\r\n    //\r\n    // Desktop Safari allows to drag images when preventDefault isn't called on mousedown,\r\n    // even though preventDefault IS called on mousemove. That's why we preventDefault mousedown.\r\n    const isMousePointer = e.type === 'mousedown' || e.pointerType === 'mouse';\r\n\r\n    // Allow dragging only via left mouse button.\r\n    // http://www.quirksmode.org/js/events_properties.html\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/event.button\r\n    if (isMousePointer && e.button > 0) {\r\n      return;\r\n    }\r\n\r\n    const { pswp } = this;\r\n\r\n    // if PhotoSwipe is opening or closing\r\n    if (!pswp.opener.isOpen) {\r\n      e.preventDefault();\r\n      return;\r\n    }\r\n\r\n    if (pswp.dispatch('pointerDown', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (isMousePointer) {\r\n      pswp.mouseDetected();\r\n\r\n      // preventDefault mouse event to prevent\r\n      // browser image drag feature\r\n      this._preventPointerEventBehaviour(e);\r\n    }\r\n\r\n    pswp.animations.stopAll();\r\n\r\n    this._updatePoints(e, 'down');\r\n\r\n    if (this._numActivePoints === 1) {\r\n      this.dragAxis = null;\r\n      // we need to store initial point to determine the main axis,\r\n      // drag is activated only after the axis is determined\r\n      equalizePoints(this.startP1, this.p1);\r\n    }\r\n\r\n    if (this._numActivePoints > 1) {\r\n      // Tap or double tap should not trigger if more than one pointer\r\n      this._clearTapTimer();\r\n      this.isMultitouch = true;\r\n    } else {\r\n      this.isMultitouch = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} e\r\n   */\r\n  onPointerMove(e) {\r\n    e.preventDefault(); // always preventDefault move event\r\n\r\n    if (!this._numActivePoints) {\r\n      return;\r\n    }\r\n\r\n    this._updatePoints(e, 'move');\r\n\r\n    if (this.pswp.dispatch('pointerMove', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this._numActivePoints === 1 && !this.isDragging) {\r\n      if (!this.dragAxis) {\r\n        this._calculateDragDirection();\r\n      }\r\n\r\n      // Drag axis was detected, emit drag.start\r\n      if (this.dragAxis && !this.isDragging) {\r\n        if (this.isZooming) {\r\n          this.isZooming = false;\r\n          this.zoomLevels.end();\r\n        }\r\n\r\n        this.isDragging = true;\r\n        this._clearTapTimer(); // Tap can not trigger after drag\r\n\r\n        // Adjust starting point\r\n        this._updateStartPoints();\r\n        this._intervalTime = Date.now();\r\n        //this._startTime = this._intervalTime;\r\n        this._velocityCalculated = false;\r\n        equalizePoints(this._intervalP1, this.p1);\r\n        this.velocity.x = 0;\r\n        this.velocity.y = 0;\r\n        this.drag.start();\r\n\r\n        this._rafStopLoop();\r\n        this._rafRenderLoop();\r\n      }\r\n    } else if (this._numActivePoints > 1 && !this.isZooming) {\r\n      this._finishDrag();\r\n\r\n      this.isZooming = true;\r\n\r\n      // Adjust starting points\r\n      this._updateStartPoints();\r\n\r\n      this.zoomLevels.start();\r\n\r\n      this._rafStopLoop();\r\n      this._rafRenderLoop();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _finishDrag() {\r\n    if (this.isDragging) {\r\n      this.isDragging = false;\r\n\r\n      // Try to calculate velocity,\r\n      // if it wasn't calculated yet in drag.change\r\n      if (!this._velocityCalculated) {\r\n        this._updateVelocity(true);\r\n      }\r\n\r\n      this.drag.end();\r\n      this.dragAxis = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} e\r\n   */\r\n  onPointerUp(e) {\r\n    if (!this._numActivePoints) {\r\n      return;\r\n    }\r\n\r\n    this._updatePoints(e, 'up');\r\n\r\n    if (this.pswp.dispatch('pointerUp', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this._numActivePoints === 0) {\r\n      this._rafStopLoop();\r\n\r\n      if (this.isDragging) {\r\n        this._finishDrag();\r\n      } else if (!this.isZooming && !this.isMultitouch) {\r\n        //this.zoomLevels.correctZoomPan();\r\n        this._finishTap(e);\r\n      }\r\n    }\r\n\r\n    if (this._numActivePoints < 2 && this.isZooming) {\r\n      this.isZooming = false;\r\n      this.zoomLevels.end();\r\n\r\n      if (this._numActivePoints === 1) {\r\n        // Since we have 1 point left, we need to reinitiate drag\r\n        this.dragAxis = null;\r\n        this._updateStartPoints();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _rafRenderLoop() {\r\n    if (this.isDragging || this.isZooming) {\r\n      this._updateVelocity();\r\n\r\n      if (this.isDragging) {\r\n        // make sure that pointer moved since the last update\r\n        if (!pointsEqual(this.p1, this.prevP1)) {\r\n          this.drag.change();\r\n        }\r\n      } else /* if (this.isZooming) */ {\r\n        if (!pointsEqual(this.p1, this.prevP1)\r\n            || !pointsEqual(this.p2, this.prevP2)) {\r\n          this.zoomLevels.change();\r\n        }\r\n      }\r\n\r\n      this._updatePrevPoints();\r\n      this.raf = requestAnimationFrame(this._rafRenderLoop.bind(this));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update velocity at 50ms interval\r\n   *\r\n   * @private\r\n   * @param {boolean} [force]\r\n   */\r\n  _updateVelocity(force) {\r\n    const time = Date.now();\r\n    const duration = time - this._intervalTime;\r\n\r\n    if (duration < 50 && !force) {\r\n      return;\r\n    }\r\n\r\n\r\n    this.velocity.x = this._getVelocity('x', duration);\r\n    this.velocity.y = this._getVelocity('y', duration);\r\n\r\n    this._intervalTime = time;\r\n    equalizePoints(this._intervalP1, this.p1);\r\n    this._velocityCalculated = true;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {PointerEvent} e\r\n   */\r\n  _finishTap(e) {\r\n    const { mainScroll } = this.pswp;\r\n\r\n    // Do not trigger tap events if main scroll is shifted\r\n    if (mainScroll.isShifted()) {\r\n      // restore main scroll position\r\n      // (usually happens if stopped in the middle of animation)\r\n      mainScroll.moveIndexBy(0, true);\r\n      return;\r\n    }\r\n\r\n    // Do not trigger tap for touchcancel or pointercancel\r\n    if (e.type.indexOf('cancel') > 0) {\r\n      return;\r\n    }\r\n\r\n    // Trigger click instead of tap for mouse events\r\n    if (e.type === 'mouseup' || e.pointerType === 'mouse') {\r\n      this.tapHandler.click(this.startP1, e);\r\n      return;\r\n    }\r\n\r\n    // Disable delay if there is no doubleTapAction\r\n    const tapDelay = this.pswp.options.doubleTapAction ? DOUBLE_TAP_DELAY : 0;\r\n\r\n    // If tapTimer is defined - we tapped recently,\r\n    // check if the current tap is close to the previous one,\r\n    // if yes - trigger double tap\r\n    if (this._tapTimer) {\r\n      this._clearTapTimer();\r\n      // Check if two taps were more or less on the same place\r\n      if (getDistanceBetween(this._lastStartP1, this.startP1) < MIN_TAP_DISTANCE) {\r\n        this.tapHandler.doubleTap(this.startP1, e);\r\n      }\r\n    } else {\r\n      equalizePoints(this._lastStartP1, this.startP1);\r\n      this._tapTimer = setTimeout(() => {\r\n        this.tapHandler.tap(this.startP1, e);\r\n        this._clearTapTimer();\r\n      }, tapDelay);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _clearTapTimer() {\r\n    if (this._tapTimer) {\r\n      clearTimeout(this._tapTimer);\r\n      this._tapTimer = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get velocity for axis\r\n   *\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   * @param {number} duration\r\n   * @returns {number}\r\n   */\r\n  _getVelocity(axis, duration) {\r\n    // displacement is like distance, but can be negative.\r\n    const displacement = this.p1[axis] - this._intervalP1[axis];\r\n\r\n    if (Math.abs(displacement) > 1 && duration > 5) {\r\n      return displacement / duration;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _rafStopLoop() {\r\n    if (this.raf) {\r\n      cancelAnimationFrame(this.raf);\r\n      this.raf = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {PointerEvent} e\r\n   */\r\n  _preventPointerEventBehaviour(e) {\r\n    // TODO find a way to disable e.preventDefault on some elements\r\n    //      via event or some class or something\r\n    e.preventDefault();\r\n  }\r\n\r\n  /**\r\n   * Parses and normalizes points from the touch, mouse or pointer event.\r\n   * Updates p1 and p2.\r\n   *\r\n   * @private\r\n   * @param {PointerEvent | TouchEvent} e\r\n   * @param {'up' | 'down' | 'move'} pointerType Normalized pointer type\r\n   */\r\n  _updatePoints(e, pointerType) {\r\n    if (this._pointerEventEnabled) {\r\n      const pointerEvent = /** @type {PointerEvent} */ (e);\r\n      // Try to find the current pointer in ongoing pointers by its ID\r\n      const pointerIndex = this._ongoingPointers.findIndex((ongoingPointer) => {\r\n        return ongoingPointer.id === pointerEvent.pointerId;\r\n      });\r\n\r\n      if (pointerType === 'up' && pointerIndex > -1) {\r\n        // release the pointer - remove it from ongoing\r\n        this._ongoingPointers.splice(pointerIndex, 1);\r\n      } else if (pointerType === 'down' && pointerIndex === -1) {\r\n        // add new pointer\r\n        this._ongoingPointers.push(this._convertEventPosToPoint(pointerEvent, { x: 0, y: 0 }));\r\n      } else if (pointerIndex > -1) {\r\n        // update existing pointer\r\n        this._convertEventPosToPoint(pointerEvent, this._ongoingPointers[pointerIndex]);\r\n      }\r\n\r\n      this._numActivePoints = this._ongoingPointers.length;\r\n\r\n      // update points that PhotoSwipe uses\r\n      // to calculate position and scale\r\n      if (this._numActivePoints > 0) {\r\n        equalizePoints(this.p1, this._ongoingPointers[0]);\r\n      }\r\n\r\n      if (this._numActivePoints > 1) {\r\n        equalizePoints(this.p2, this._ongoingPointers[1]);\r\n      }\r\n    } else {\r\n      const touchEvent = /** @type {TouchEvent} */ (e);\r\n\r\n      this._numActivePoints = 0;\r\n      if (touchEvent.type.indexOf('touch') > -1) {\r\n        // Touch Event\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent\r\n        if (touchEvent.touches && touchEvent.touches.length > 0) {\r\n          this._convertEventPosToPoint(touchEvent.touches[0], this.p1);\r\n          this._numActivePoints++;\r\n          if (touchEvent.touches.length > 1) {\r\n            this._convertEventPosToPoint(touchEvent.touches[1], this.p2);\r\n            this._numActivePoints++;\r\n          }\r\n        }\r\n      } else {\r\n        // Mouse Event\r\n        this._convertEventPosToPoint(/** @type {PointerEvent} */ (e), this.p1);\r\n        if (pointerType === 'up') {\r\n          // clear all points on mouseup\r\n          this._numActivePoints = 0;\r\n        } else {\r\n          this._numActivePoints++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** update points that were used during previous rAF tick\r\n   * @private\r\n   */\r\n  _updatePrevPoints() {\r\n    equalizePoints(this.prevP1, this.p1);\r\n    equalizePoints(this.prevP2, this.p2);\r\n  }\r\n\r\n  /** update points at the start of gesture\r\n   * @private\r\n   */\r\n  _updateStartPoints() {\r\n    equalizePoints(this.startP1, this.p1);\r\n    equalizePoints(this.startP2, this.p2);\r\n    this._updatePrevPoints();\r\n  }\r\n\r\n  /** @private */\r\n  _calculateDragDirection() {\r\n    if (this.pswp.mainScroll.isShifted()) {\r\n      // if main scroll position is shifted – direction is always horizontal\r\n      this.dragAxis = 'x';\r\n    } else {\r\n      // calculate delta of the last touchmove tick\r\n      const diff = Math.abs(this.p1.x - this.startP1.x) - Math.abs(this.p1.y - this.startP1.y);\r\n\r\n      if (diff !== 0) {\r\n        // check if pointer was shifted horizontally or vertically\r\n        const axisToCheck = diff > 0 ? 'x' : 'y';\r\n\r\n        if (Math.abs(this.p1[axisToCheck] - this.startP1[axisToCheck]) >= AXIS_SWIPE_HYSTERISIS) {\r\n          this.dragAxis = axisToCheck;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Converts touch, pointer or mouse event\r\n   * to PhotoSwipe point.\r\n   *\r\n   * @private\r\n   * @param {Touch | PointerEvent} e\r\n   * @param {Point} p\r\n   * @returns {Point}\r\n   */\r\n  _convertEventPosToPoint(e, p) {\r\n    p.x = e.pageX - this.pswp.offset.x;\r\n    p.y = e.pageY - this.pswp.offset.y;\r\n\r\n    if ('pointerId' in e) {\r\n      p.id = e.pointerId;\r\n    } else if (e.identifier !== undefined) {\r\n      p.id = e.identifier;\r\n    }\r\n\r\n    return p;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {PointerEvent} e\r\n   */\r\n  _onClick(e) {\r\n    // Do not allow click event to pass through after drag\r\n    if (this.pswp.mainScroll.isShifted()) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Gestures;\r\n","import {\r\n  setTransform,\r\n  createElement,\r\n} from './util/util.js';\r\n\r\n/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('./slide/slide.js').default} Slide */\r\n\r\n/** @typedef {{ el: HTMLDivElement; slide?: Slide }} ItemHolder */\r\n\r\nconst MAIN_SCROLL_END_FRICTION = 0.35;\r\n\r\n\r\n// const MIN_SWIPE_TRANSITION_DURATION = 250;\r\n// const MAX_SWIPE_TRABSITION_DURATION = 500;\r\n// const DEFAULT_SWIPE_TRANSITION_DURATION = 333;\r\n\r\n/**\r\n * Handles movement of the main scrolling container\r\n * (for example, it repositions when user swipes left or right).\r\n *\r\n * Also stores its state.\r\n */\r\nclass MainScroll {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    this.x = 0;\r\n    this.slideWidth = 0;\r\n    /** @private */\r\n    this._currPositionIndex = 0;\r\n    /** @private */\r\n    this._prevPositionIndex = 0;\r\n    /** @private */\r\n    this._containerShiftIndex = -1;\r\n\r\n    /** @type {ItemHolder[]} */\r\n    this.itemHolders = [];\r\n  }\r\n\r\n  /**\r\n   * Position the scroller and slide containers\r\n   * according to viewport size.\r\n   *\r\n   * @param {boolean} [resizeSlides] Whether slides content should resized\r\n   */\r\n  resize(resizeSlides) {\r\n    const { pswp } = this;\r\n    const newSlideWidth = Math.round(\r\n      pswp.viewportSize.x + pswp.viewportSize.x * pswp.options.spacing\r\n    );\r\n    // Mobile browsers might trigger a resize event during a gesture.\r\n    // (due to toolbar appearing or hiding).\r\n    // Avoid re-adjusting main scroll position if width wasn't changed\r\n    const slideWidthChanged = (newSlideWidth !== this.slideWidth);\r\n\r\n    if (slideWidthChanged) {\r\n      this.slideWidth = newSlideWidth;\r\n      this.moveTo(this.getCurrSlideX());\r\n    }\r\n\r\n    this.itemHolders.forEach((itemHolder, index) => {\r\n      if (slideWidthChanged) {\r\n        setTransform(itemHolder.el, (index + this._containerShiftIndex)\r\n                                    * this.slideWidth);\r\n      }\r\n\r\n      if (resizeSlides && itemHolder.slide) {\r\n        itemHolder.slide.resize();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Reset X position of the main scroller to zero\r\n   */\r\n  resetPosition() {\r\n    // Position on the main scroller (offset)\r\n    // it is independent from slide index\r\n    this._currPositionIndex = 0;\r\n    this._prevPositionIndex = 0;\r\n\r\n    // This will force recalculation of size on next resize()\r\n    this.slideWidth = 0;\r\n\r\n    // _containerShiftIndex*viewportSize will give you amount of transform of the current slide\r\n    this._containerShiftIndex = -1;\r\n  }\r\n\r\n  /**\r\n   * Create and append array of three items\r\n   * that hold data about slides in DOM\r\n   */\r\n  appendHolders() {\r\n    this.itemHolders = [];\r\n\r\n    // append our three slide holders -\r\n    // previous, current, and next\r\n    for (let i = 0; i < 3; i++) {\r\n      const el = createElement('pswp__item', 'div', this.pswp.container);\r\n      el.setAttribute('role', 'group');\r\n      el.setAttribute('aria-roledescription', 'slide');\r\n      el.setAttribute('aria-hidden', 'true');\r\n\r\n      // hide nearby item holders until initial zoom animation finishes (to avoid extra Paints)\r\n      el.style.display = (i === 1) ? 'block' : 'none';\r\n\r\n      this.itemHolders.push({\r\n        el,\r\n        //index: -1\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Whether the main scroll can be horizontally swiped to the next or previous slide.\r\n   * @returns {boolean}\r\n   */\r\n  canBeSwiped() {\r\n    return this.pswp.getNumItems() > 1;\r\n  }\r\n\r\n  /**\r\n   * Move main scroll by X amount of slides.\r\n   * For example:\r\n   *   `-1` will move to the previous slide,\r\n   *    `0` will reset the scroll position of the current slide,\r\n   *    `3` will move three slides forward\r\n   *\r\n   * If loop option is enabled - index will be automatically looped too,\r\n   * (for example `-1` will move to the last slide of the gallery).\r\n   *\r\n   * @param {number} diff\r\n   * @param {boolean} [animate]\r\n   * @param {number} [velocityX]\r\n   * @returns {boolean} whether index was changed or not\r\n   */\r\n  moveIndexBy(diff, animate, velocityX) {\r\n    const { pswp } = this;\r\n    let newIndex = pswp.potentialIndex + diff;\r\n    const numSlides = pswp.getNumItems();\r\n\r\n    if (pswp.canLoop()) {\r\n      newIndex = pswp.getLoopedIndex(newIndex);\r\n      const distance = (diff + numSlides) % numSlides;\r\n      if (distance <= numSlides / 2) {\r\n        // go forward\r\n        diff = distance;\r\n      } else {\r\n        // go backwards\r\n        diff = distance - numSlides;\r\n      }\r\n    } else {\r\n      if (newIndex < 0) {\r\n        newIndex = 0;\r\n      } else if (newIndex >= numSlides) {\r\n        newIndex = numSlides - 1;\r\n      }\r\n      diff = newIndex - pswp.potentialIndex;\r\n    }\r\n\r\n    pswp.potentialIndex = newIndex;\r\n    this._currPositionIndex -= diff;\r\n\r\n    pswp.animations.stopMainScroll();\r\n\r\n    const destinationX = this.getCurrSlideX();\r\n    if (!animate) {\r\n      this.moveTo(destinationX);\r\n      this.updateCurrItem();\r\n    } else {\r\n      pswp.animations.startSpring({\r\n        isMainScroll: true,\r\n        start: this.x,\r\n        end: destinationX,\r\n        velocity: velocityX || 0,\r\n        naturalFrequency: 30,\r\n        dampingRatio: 1, //0.7,\r\n        onUpdate: (x) => {\r\n          this.moveTo(x);\r\n        },\r\n        onComplete: () => {\r\n          this.updateCurrItem();\r\n          pswp.appendHeavy();\r\n        }\r\n      });\r\n\r\n      let currDiff = pswp.potentialIndex - pswp.currIndex;\r\n      if (pswp.canLoop()) {\r\n        const currDistance = (currDiff + numSlides) % numSlides;\r\n        if (currDistance <= numSlides / 2) {\r\n          // go forward\r\n          currDiff = currDistance;\r\n        } else {\r\n          // go backwards\r\n          currDiff = currDistance - numSlides;\r\n        }\r\n      }\r\n\r\n      // Force-append new slides during transition\r\n      // if difference between slides is more than 1\r\n      if (Math.abs(currDiff) > 1) {\r\n        this.updateCurrItem();\r\n      }\r\n    }\r\n\r\n    return Boolean(diff);\r\n  }\r\n\r\n  /**\r\n   * X position of the main scroll for the current slide\r\n   * (ignores position during dragging)\r\n   * @returns {number}\r\n   */\r\n  getCurrSlideX() {\r\n    return this.slideWidth * this._currPositionIndex;\r\n  }\r\n\r\n  /**\r\n   * Whether scroll position is shifted.\r\n   * For example, it will return true if the scroll is being dragged or animated.\r\n   * @returns {boolean}\r\n   */\r\n  isShifted() {\r\n    return this.x !== this.getCurrSlideX();\r\n  }\r\n\r\n  /**\r\n   * Update slides X positions and set their content\r\n   */\r\n  updateCurrItem() {\r\n    const { pswp } = this;\r\n    const positionDifference = this._prevPositionIndex - this._currPositionIndex;\r\n\r\n    if (!positionDifference) {\r\n      return;\r\n    }\r\n\r\n    this._prevPositionIndex = this._currPositionIndex;\r\n\r\n    pswp.currIndex = pswp.potentialIndex;\r\n\r\n    let diffAbs = Math.abs(positionDifference);\r\n    /** @type {ItemHolder | undefined} */\r\n    let tempHolder;\r\n\r\n    if (diffAbs >= 3) {\r\n      this._containerShiftIndex += positionDifference + (positionDifference > 0 ? -3 : 3);\r\n      diffAbs = 3;\r\n    }\r\n\r\n    for (let i = 0; i < diffAbs; i++) {\r\n      if (positionDifference > 0) {\r\n        tempHolder = this.itemHolders.shift();\r\n        if (tempHolder) {\r\n          this.itemHolders[2] = tempHolder; // move first to last\r\n\r\n          this._containerShiftIndex++;\r\n\r\n          setTransform(tempHolder.el, (this._containerShiftIndex + 2) * this.slideWidth);\r\n\r\n          pswp.setContent(tempHolder, (pswp.currIndex - diffAbs) + i + 2);\r\n        }\r\n      } else {\r\n        tempHolder = this.itemHolders.pop();\r\n        if (tempHolder) {\r\n          this.itemHolders.unshift(tempHolder); // move last to first\r\n\r\n          this._containerShiftIndex--;\r\n\r\n          setTransform(tempHolder.el, this._containerShiftIndex * this.slideWidth);\r\n\r\n          pswp.setContent(tempHolder, (pswp.currIndex + diffAbs) - i - 2);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Reset transfrom every 50ish navigations in one direction.\r\n    //\r\n    // Otherwise transform will keep growing indefinitely,\r\n    // which might cause issues as browsers have a maximum transform limit.\r\n    // I wasn't able to reach it, but just to be safe.\r\n    // This should not cause noticable lag.\r\n    if (Math.abs(this._containerShiftIndex) > 50 && !this.isShifted()) {\r\n      this.resetPosition();\r\n      this.resize();\r\n    }\r\n\r\n    // Pan transition might be running (and consntantly updating pan position)\r\n    pswp.animations.stopAllPan();\r\n\r\n    this.itemHolders.forEach((itemHolder, i) => {\r\n      if (itemHolder.slide) {\r\n        // Slide in the 2nd holder is always active\r\n        itemHolder.slide.setIsActive(i === 1);\r\n      }\r\n    });\r\n\r\n    pswp.currSlide = this.itemHolders[1]?.slide;\r\n    pswp.contentLoader.updateLazy(positionDifference);\r\n\r\n    if (pswp.currSlide) {\r\n      pswp.currSlide.applyCurrentZoomPan();\r\n    }\r\n\r\n    pswp.dispatch('change');\r\n  }\r\n\r\n  /**\r\n   * Move the X position of the main scroll container\r\n   *\r\n   * @param {number} x\r\n   * @param {boolean} [dragging]\r\n   */\r\n  moveTo(x, dragging) {\r\n    if (!this.pswp.canLoop() && dragging) {\r\n      // Apply friction\r\n      let newSlideIndexOffset = ((this.slideWidth * this._currPositionIndex) - x) / this.slideWidth;\r\n      newSlideIndexOffset += this.pswp.currIndex;\r\n      const delta = Math.round(x - this.x);\r\n\r\n      if ((newSlideIndexOffset < 0 && delta > 0)\r\n          || (newSlideIndexOffset >= this.pswp.getNumItems() - 1 && delta < 0)) {\r\n        x = this.x + (delta * MAIN_SCROLL_END_FRICTION);\r\n      }\r\n    }\r\n\r\n    this.x = x;\r\n\r\n    if (this.pswp.container) {\r\n      setTransform(this.pswp.container, x);\r\n    }\r\n\r\n    this.pswp.dispatch('moveMainScroll', { x, dragging: dragging ?? false });\r\n  }\r\n}\r\n\r\nexport default MainScroll;\r\n","import { specialKeyUsed } from './util/util.js';\r\n\r\n/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('./types.js').Methods<T>} Methods<T>\r\n */\r\n\r\nconst KeyboardKeyCodesMap = {\r\n  Escape: 27,\r\n  z: 90,\r\n  ArrowLeft: 37,\r\n  ArrowUp: 38,\r\n  ArrowRight: 39,\r\n  ArrowDown: 40,\r\n  Tab: 9,\r\n};\r\n\r\n/**\r\n * @template {keyof KeyboardKeyCodesMap} T\r\n * @param {T} key\r\n * @param {boolean} isKeySupported\r\n * @returns {T | number | undefined}\r\n */\r\nconst getKeyboardEventKey = (key, isKeySupported) => {\r\n  return isKeySupported ? key : KeyboardKeyCodesMap[key];\r\n};\r\n\r\n/**\r\n * - Manages keyboard shortcuts.\r\n * - Helps trap focus within photoswipe.\r\n */\r\nclass Keyboard {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    /** @private */\r\n    this._wasFocused = false;\r\n\r\n    pswp.on('bindEvents', () => {\r\n      // Dialog was likely opened by keyboard if initial point is not defined\r\n      if (!pswp.options.initialPointerPos) {\r\n        // focus causes layout,\r\n        // which causes lag during the animation,\r\n        // that's why we delay it until the opener transition ends\r\n        this._focusRoot();\r\n      }\r\n\r\n      pswp.events.add(document, 'focusin', /** @type EventListener */(this._onFocusIn.bind(this)));\r\n      pswp.events.add(document, 'keydown', /** @type EventListener */(this._onKeyDown.bind(this)));\r\n    });\r\n\r\n    const lastActiveElement = /** @type {HTMLElement} */ (document.activeElement);\r\n    pswp.on('destroy', () => {\r\n      if (pswp.options.returnFocus\r\n          && lastActiveElement\r\n          && this._wasFocused) {\r\n        lastActiveElement.focus();\r\n      }\r\n    });\r\n  }\r\n\r\n  /** @private */\r\n  _focusRoot() {\r\n    if (!this._wasFocused && this.pswp.element) {\r\n      this.pswp.element.focus();\r\n      this._wasFocused = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {KeyboardEvent} e\r\n   */\r\n  _onKeyDown(e) {\r\n    const { pswp } = this;\r\n\r\n    if (pswp.dispatch('keydown', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (specialKeyUsed(e)) {\r\n      // don't do anything if special key pressed\r\n      // to prevent from overriding default browser actions\r\n      // for example, in Chrome on Mac cmd+arrow-left returns to previous page\r\n      return;\r\n    }\r\n\r\n    /** @type {Methods<PhotoSwipe> | undefined} */\r\n    let keydownAction;\r\n    /** @type {'x' | 'y' | undefined} */\r\n    let axis;\r\n    let isForward = false;\r\n    const isKeySupported = 'key' in e;\r\n\r\n    switch (isKeySupported ? e.key : e.keyCode) {\r\n      case getKeyboardEventKey('Escape', isKeySupported):\r\n        if (pswp.options.escKey) {\r\n          keydownAction = 'close';\r\n        }\r\n        break;\r\n      case getKeyboardEventKey('z', isKeySupported):\r\n        keydownAction = 'toggleZoom';\r\n        break;\r\n      case getKeyboardEventKey('ArrowLeft', isKeySupported):\r\n        axis = 'x';\r\n        break;\r\n      case getKeyboardEventKey('ArrowUp', isKeySupported):\r\n        axis = 'y';\r\n        break;\r\n      case getKeyboardEventKey('ArrowRight', isKeySupported):\r\n        axis = 'x';\r\n        isForward = true;\r\n        break;\r\n      case getKeyboardEventKey('ArrowDown', isKeySupported):\r\n        isForward = true;\r\n        axis = 'y';\r\n        break;\r\n      case getKeyboardEventKey('Tab', isKeySupported):\r\n        this._focusRoot();\r\n        break;\r\n      default:\r\n    }\r\n\r\n    // if left/right/top/bottom key\r\n    if (axis) {\r\n      // prevent page scroll\r\n      e.preventDefault();\r\n\r\n      const { currSlide } = pswp;\r\n\r\n      if (pswp.options.arrowKeys\r\n          && axis === 'x'\r\n          && pswp.getNumItems() > 1) {\r\n        keydownAction = isForward ? 'next' : 'prev';\r\n      } else if (currSlide && currSlide.currZoomLevel > currSlide.zoomLevels.fit) {\r\n        // up/down arrow keys pan the image vertically\r\n        // left/right arrow keys pan horizontally.\r\n        // Unless there is only one image,\r\n        // or arrowKeys option is disabled\r\n        currSlide.pan[axis] += isForward ? -80 : 80;\r\n        currSlide.panTo(currSlide.pan.x, currSlide.pan.y);\r\n      }\r\n    }\r\n\r\n    if (keydownAction) {\r\n      e.preventDefault();\r\n      // @ts-ignore\r\n      pswp[keydownAction]();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Trap focus inside photoswipe\r\n   *\r\n   * @private\r\n   * @param {FocusEvent} e\r\n   */\r\n  _onFocusIn(e) {\r\n    const { template } = this.pswp;\r\n    if (template\r\n        && document !== e.target\r\n        && template !== e.target\r\n        && !template.contains(/** @type {Node} */ (e.target))) {\r\n      // focus root element\r\n      template.focus();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Keyboard;\r\n","import { setTransitionStyle, removeTransitionStyle } from './util.js';\r\n\r\nconst DEFAULT_EASING = 'cubic-bezier(.4,0,.22,1)';\r\n\r\n/** @typedef {import('./animations.js').SharedAnimationProps} SharedAnimationProps */\r\n\r\n/** @typedef {Object} DefaultCssAnimationProps\r\n *\r\n * @prop {HTMLElement} target\r\n * @prop {number} [duration]\r\n * @prop {string} [easing]\r\n * @prop {string} [transform]\r\n * @prop {string} [opacity]\r\n * */\r\n\r\n/** @typedef {SharedAnimationProps & DefaultCssAnimationProps} CssAnimationProps */\r\n\r\n/**\r\n * Runs CSS transition.\r\n */\r\nclass CSSAnimation {\r\n  /**\r\n   * onComplete can be unpredictable, be careful about current state\r\n   *\r\n   * @param {CssAnimationProps} props\r\n   */\r\n  constructor(props) {\r\n    this.props = props;\r\n    const {\r\n      target,\r\n      onComplete,\r\n      transform,\r\n      onFinish = () => {},\r\n      duration = 333,\r\n      easing = DEFAULT_EASING,\r\n    } = props;\r\n\r\n    this.onFinish = onFinish;\r\n\r\n    // support only transform and opacity\r\n    const prop = transform ? 'transform' : 'opacity';\r\n    const propValue = props[prop] ?? '';\r\n\r\n    /** @private */\r\n    this._target = target;\r\n    /** @private */\r\n    this._onComplete = onComplete;\r\n    /** @private */\r\n    this._finished = false;\r\n\r\n    /** @private */\r\n    this._onTransitionEnd = this._onTransitionEnd.bind(this);\r\n\r\n    // Using timeout hack to make sure that animation\r\n    // starts even if the animated property was changed recently,\r\n    // otherwise transitionend might not fire or transition won't start.\r\n    // https://drafts.csswg.org/css-transitions/#starting\r\n    //\r\n    // ¯\\_(ツ)_/¯\r\n    /** @private */\r\n    this._helperTimeout = setTimeout(() => {\r\n      setTransitionStyle(target, prop, duration, easing);\r\n      this._helperTimeout = setTimeout(() => {\r\n        target.addEventListener('transitionend', this._onTransitionEnd, false);\r\n        target.addEventListener('transitioncancel', this._onTransitionEnd, false);\r\n\r\n        // Safari occasionally does not emit transitionend event\r\n        // if element property was modified during the transition,\r\n        // which may be caused by resize or third party component,\r\n        // using timeout as a safety fallback\r\n        this._helperTimeout = setTimeout(() => {\r\n          this._finalizeAnimation();\r\n        }, duration + 500);\r\n        target.style[prop] = propValue;\r\n      }, 30); // Do not reduce this number\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {TransitionEvent} e\r\n   */\r\n  _onTransitionEnd(e) {\r\n    if (e.target === this._target) {\r\n      this._finalizeAnimation();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _finalizeAnimation() {\r\n    if (!this._finished) {\r\n      this._finished = true;\r\n      this.onFinish();\r\n      if (this._onComplete) {\r\n        this._onComplete();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Destroy is called automatically onFinish\r\n  destroy() {\r\n    if (this._helperTimeout) {\r\n      clearTimeout(this._helperTimeout);\r\n    }\r\n    removeTransitionStyle(this._target);\r\n    this._target.removeEventListener('transitionend', this._onTransitionEnd, false);\r\n    this._target.removeEventListener('transitioncancel', this._onTransitionEnd, false);\r\n    if (!this._finished) {\r\n      this._finalizeAnimation();\r\n    }\r\n  }\r\n}\r\n\r\nexport default CSSAnimation;\r\n","const DEFAULT_NATURAL_FREQUENCY = 12;\r\nconst DEFAULT_DAMPING_RATIO = 0.75;\r\n\r\n/**\r\n * Spring easing helper\r\n */\r\nclass SpringEaser {\r\n  /**\r\n   * @param {number} initialVelocity Initial velocity, px per ms.\r\n   *\r\n   * @param {number} [dampingRatio]\r\n   * Determines how bouncy animation will be.\r\n   * From 0 to 1, 0 - always overshoot, 1 - do not overshoot.\r\n   * \"overshoot\" refers to part of animation that\r\n   * goes beyond the final value.\r\n   *\r\n   * @param {number} [naturalFrequency]\r\n   * Determines how fast animation will slow down.\r\n   * The higher value - the stiffer the transition will be,\r\n   * and the faster it will slow down.\r\n   * Recommended value from 10 to 50\r\n   */\r\n  constructor(initialVelocity, dampingRatio, naturalFrequency) {\r\n    this.velocity = initialVelocity * 1000; // convert to \"pixels per second\"\r\n\r\n    // https://en.wikipedia.org/wiki/Damping_ratio\r\n    this._dampingRatio = dampingRatio || DEFAULT_DAMPING_RATIO;\r\n\r\n    // https://en.wikipedia.org/wiki/Natural_frequency\r\n    this._naturalFrequency = naturalFrequency || DEFAULT_NATURAL_FREQUENCY;\r\n\r\n    this._dampedFrequency = this._naturalFrequency;\r\n\r\n    if (this._dampingRatio < 1) {\r\n      this._dampedFrequency *= Math.sqrt(1 - this._dampingRatio * this._dampingRatio);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} deltaPosition Difference between current and end position of the animation\r\n   * @param {number} deltaTime Frame duration in milliseconds\r\n   *\r\n   * @returns {number} Displacement, relative to the end position.\r\n   */\r\n  easeFrame(deltaPosition, deltaTime) {\r\n    // Inspired by Apple Webkit and Android spring function implementation\r\n    // https://en.wikipedia.org/wiki/Oscillation\r\n    // https://en.wikipedia.org/wiki/Damping_ratio\r\n    // we ignore mass (assume that it's 1kg)\r\n\r\n    let displacement = 0;\r\n    let coeff;\r\n\r\n    deltaTime /= 1000;\r\n\r\n    const naturalDumpingPow = Math.E ** (-this._dampingRatio * this._naturalFrequency * deltaTime);\r\n\r\n    if (this._dampingRatio === 1) {\r\n      coeff = this.velocity + this._naturalFrequency * deltaPosition;\r\n\r\n      displacement = (deltaPosition + coeff * deltaTime) * naturalDumpingPow;\r\n\r\n      this.velocity = displacement\r\n                        * (-this._naturalFrequency) + coeff\r\n                        * naturalDumpingPow;\r\n    } else if (this._dampingRatio < 1) {\r\n      coeff = (1 / this._dampedFrequency)\r\n                * (this._dampingRatio * this._naturalFrequency * deltaPosition + this.velocity);\r\n\r\n      const dumpedFCos = Math.cos(this._dampedFrequency * deltaTime);\r\n      const dumpedFSin = Math.sin(this._dampedFrequency * deltaTime);\r\n\r\n      displacement = naturalDumpingPow\r\n                       * (deltaPosition * dumpedFCos + coeff * dumpedFSin);\r\n\r\n      this.velocity = displacement\r\n                        * (-this._naturalFrequency)\r\n                        * this._dampingRatio\r\n                        + naturalDumpingPow\r\n                        * (-this._dampedFrequency * deltaPosition * dumpedFSin\r\n                        + this._dampedFrequency * coeff * dumpedFCos);\r\n    }\r\n\r\n    // Overdamped (>1) damping ratio is not supported\r\n\r\n    return displacement;\r\n  }\r\n}\r\n\r\nexport default SpringEaser;\r\n","import SpringEaser from './spring-easer.js';\r\n\r\n/** @typedef {import('./animations.js').SharedAnimationProps} SharedAnimationProps */\r\n\r\n/**\r\n * @typedef {Object} DefaultSpringAnimationProps\r\n *\r\n * @prop {number} start\r\n * @prop {number} end\r\n * @prop {number} velocity\r\n * @prop {number} [dampingRatio]\r\n * @prop {number} [naturalFrequency]\r\n * @prop {(end: number) => void} onUpdate\r\n */\r\n\r\n/** @typedef {SharedAnimationProps & DefaultSpringAnimationProps} SpringAnimationProps */\r\n\r\nclass SpringAnimation {\r\n  /**\r\n   * @param {SpringAnimationProps} props\r\n   */\r\n  constructor(props) {\r\n    this.props = props;\r\n    this._raf = 0;\r\n\r\n    const {\r\n      start,\r\n      end,\r\n      velocity,\r\n      onUpdate,\r\n      onComplete,\r\n      onFinish = () => {},\r\n      dampingRatio,\r\n      naturalFrequency\r\n    } = props;\r\n\r\n    this.onFinish = onFinish;\r\n\r\n    const easer = new SpringEaser(velocity, dampingRatio, naturalFrequency);\r\n    let prevTime = Date.now();\r\n    let deltaPosition = start - end;\r\n\r\n    const animationLoop = () => {\r\n      if (this._raf) {\r\n        deltaPosition = easer.easeFrame(deltaPosition, Date.now() - prevTime);\r\n\r\n        // Stop the animation if velocity is low and position is close to end\r\n        if (Math.abs(deltaPosition) < 1 && Math.abs(easer.velocity) < 50) {\r\n          // Finalize the animation\r\n          onUpdate(end);\r\n          if (onComplete) {\r\n            onComplete();\r\n          }\r\n          this.onFinish();\r\n        } else {\r\n          prevTime = Date.now();\r\n          onUpdate(deltaPosition + end);\r\n          this._raf = requestAnimationFrame(animationLoop);\r\n        }\r\n      }\r\n    };\r\n\r\n    this._raf = requestAnimationFrame(animationLoop);\r\n  }\r\n\r\n  // Destroy is called automatically onFinish\r\n  destroy() {\r\n    if (this._raf >= 0) {\r\n      cancelAnimationFrame(this._raf);\r\n    }\r\n    this._raf = 0;\r\n  }\r\n}\r\n\r\nexport default SpringAnimation;\r\n","import CSSAnimation from './css-animation.js';\r\nimport SpringAnimation from './spring-animation.js';\r\n\r\n/** @typedef {import('./css-animation.js').CssAnimationProps} CssAnimationProps */\r\n/** @typedef {import('./spring-animation.js').SpringAnimationProps} SpringAnimationProps */\r\n\r\n/** @typedef {Object} SharedAnimationProps\r\n * @prop {string} [name]\r\n * @prop {boolean} [isPan]\r\n * @prop {boolean} [isMainScroll]\r\n * @prop {VoidFunction} [onComplete]\r\n * @prop {VoidFunction} [onFinish]\r\n */\r\n\r\n/** @typedef {SpringAnimation | CSSAnimation} Animation */\r\n/** @typedef {SpringAnimationProps | CssAnimationProps} AnimationProps */\r\n\r\n/**\r\n * Manages animations\r\n */\r\nclass Animations {\r\n  constructor() {\r\n    /** @type {Animation[]} */\r\n    this.activeAnimations = [];\r\n  }\r\n\r\n  /**\r\n   * @param {SpringAnimationProps} props\r\n   */\r\n  startSpring(props) {\r\n    this._start(props, true);\r\n  }\r\n\r\n  /**\r\n   * @param {CssAnimationProps} props\r\n   */\r\n  startTransition(props) {\r\n    this._start(props);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {AnimationProps} props\r\n   * @param {boolean} [isSpring]\r\n   * @returns {Animation}\r\n   */\r\n  _start(props, isSpring) {\r\n    const animation = isSpring\r\n      ? new SpringAnimation(/** @type SpringAnimationProps */ (props))\r\n      : new CSSAnimation(/** @type CssAnimationProps */ (props));\r\n\r\n    this.activeAnimations.push(animation);\r\n    animation.onFinish = () => this.stop(animation);\r\n\r\n    return animation;\r\n  }\r\n\r\n  /**\r\n   * @param {Animation} animation\r\n   */\r\n  stop(animation) {\r\n    animation.destroy();\r\n    const index = this.activeAnimations.indexOf(animation);\r\n    if (index > -1) {\r\n      this.activeAnimations.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  stopAll() { // _stopAllAnimations\r\n    this.activeAnimations.forEach((animation) => {\r\n      animation.destroy();\r\n    });\r\n    this.activeAnimations = [];\r\n  }\r\n\r\n  /**\r\n   * Stop all pan or zoom transitions\r\n   */\r\n  stopAllPan() {\r\n    this.activeAnimations = this.activeAnimations.filter((animation) => {\r\n      if (animation.props.isPan) {\r\n        animation.destroy();\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    });\r\n  }\r\n\r\n  stopMainScroll() {\r\n    this.activeAnimations = this.activeAnimations.filter((animation) => {\r\n      if (animation.props.isMainScroll) {\r\n        animation.destroy();\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns true if main scroll transition is running\r\n   */\r\n  // isMainScrollRunning() {\r\n  //   return this.activeAnimations.some((animation) => {\r\n  //     return animation.props.isMainScroll;\r\n  //   });\r\n  // }\r\n\r\n  /**\r\n   * Returns true if any pan or zoom transition is running\r\n   */\r\n  isPanRunning() {\r\n    return this.activeAnimations.some((animation) => {\r\n      return animation.props.isPan;\r\n    });\r\n  }\r\n}\r\n\r\nexport default Animations;\r\n","/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\r\n\r\n/**\r\n * Handles scroll wheel.\r\n * Can pan and zoom current slide image.\r\n */\r\nclass ScrollWheel {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    pswp.events.add(pswp.element, 'wheel', /** @type EventListener */(this._onWheel.bind(this)));\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {WheelEvent} e\r\n   */\r\n  _onWheel(e) {\r\n    e.preventDefault();\r\n    const { currSlide } = this.pswp;\r\n    let { deltaX, deltaY } = e;\r\n\r\n    if (!currSlide) {\r\n      return;\r\n    }\r\n\r\n    if (this.pswp.dispatch('wheel', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (e.ctrlKey || this.pswp.options.wheelToZoom) {\r\n      // zoom\r\n      if (currSlide.isZoomable()) {\r\n        let zoomFactor = -deltaY;\r\n        if (e.deltaMode === 1 /* DOM_DELTA_LINE */) {\r\n          zoomFactor *= 0.05;\r\n        } else {\r\n          zoomFactor *= e.deltaMode ? 1 : 0.002;\r\n        }\r\n        zoomFactor = 2 ** zoomFactor;\r\n\r\n        const destZoomLevel = currSlide.currZoomLevel * zoomFactor;\r\n        currSlide.zoomTo(destZoomLevel, {\r\n          x: e.clientX,\r\n          y: e.clientY\r\n        });\r\n      }\r\n    } else {\r\n      // pan\r\n      if (currSlide.isPannable()) {\r\n        if (e.deltaMode === 1 /* DOM_DELTA_LINE */) {\r\n          // 18 - average line height\r\n          deltaX *= 18;\r\n          deltaY *= 18;\r\n        }\r\n\r\n        currSlide.panTo(\r\n          currSlide.pan.x - deltaX,\r\n          currSlide.pan.y - deltaY\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default ScrollWheel;\r\n","import { createElement } from '../util/util.js';\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('../types.js').Methods<T>} Methods<T>\r\n */\r\n\r\n/**\r\n * @typedef {Object} UIElementMarkupProps\r\n * @prop {boolean} [isCustomSVG]\r\n * @prop {string} inner\r\n * @prop {string} [outlineID]\r\n * @prop {number | string} [size]\r\n */\r\n\r\n/**\r\n * @typedef {Object} UIElementData\r\n * @prop {DefaultUIElements | string} [name]\r\n * @prop {string} [className]\r\n * @prop {UIElementMarkup} [html]\r\n * @prop {boolean} [isButton]\r\n * @prop {keyof HTMLElementTagNameMap} [tagName]\r\n * @prop {string} [title]\r\n * @prop {string} [ariaLabel]\r\n * @prop {(element: HTMLElement, pswp: PhotoSwipe) => void} [onInit]\r\n * @prop {Methods<PhotoSwipe> | ((e: MouseEvent, element: HTMLElement, pswp: PhotoSwipe) => void)} [onClick]\r\n * @prop {'bar' | 'wrapper' | 'root'} [appendTo]\r\n * @prop {number} [order]\r\n */\r\n\r\n/** @typedef {'arrowPrev' | 'arrowNext' | 'close' | 'zoom' | 'counter'} DefaultUIElements */\r\n\r\n/** @typedef {string | UIElementMarkupProps} UIElementMarkup */\r\n\r\n/**\r\n * @param {UIElementMarkup} [htmlData]\r\n * @returns {string}\r\n */\r\nfunction addElementHTML(htmlData) {\r\n  if (typeof htmlData === 'string') {\r\n    // Allow developers to provide full svg,\r\n    // For example:\r\n    // <svg viewBox=\"0 0 32 32\" width=\"32\" height=\"32\" aria-hidden=\"true\" class=\"pswp__icn\">\r\n    //   <path d=\"...\" />\r\n    //   <circle ... />\r\n    // </svg>\r\n    // Can also be any HTML string.\r\n    return htmlData;\r\n  }\r\n\r\n  if (!htmlData || !htmlData.isCustomSVG) {\r\n    return '';\r\n  }\r\n\r\n  const svgData = htmlData;\r\n  let out = '<svg aria-hidden=\"true\" class=\"pswp__icn\" viewBox=\"0 0 %d %d\" width=\"%d\" height=\"%d\">';\r\n  // replace all %d with size\r\n  out = out.split('%d').join(/** @type {string} */ (svgData.size || 32));\r\n\r\n  // Icons may contain outline/shadow,\r\n  // to make it we \"clone\" base icon shape and add border to it.\r\n  // Icon itself and border are styled via CSS.\r\n  //\r\n  // Property shadowID defines ID of element that should be cloned.\r\n  if (svgData.outlineID) {\r\n    out += '<use class=\"pswp__icn-shadow\" xlink:href=\"#' + svgData.outlineID + '\"/>';\r\n  }\r\n\r\n  out += svgData.inner;\r\n\r\n  out += '</svg>';\r\n\r\n  return out;\r\n}\r\n\r\nclass UIElement {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   * @param {UIElementData} data\r\n   */\r\n  constructor(pswp, data) {\r\n    const name = data.name || data.className;\r\n    let elementHTML = data.html;\r\n\r\n    // @ts-expect-error lookup only by `data.name` maybe?\r\n    if (pswp.options[name] === false) {\r\n      // exit if element is disabled from options\r\n      return;\r\n    }\r\n\r\n    // Allow to override SVG icons from options\r\n    // @ts-expect-error lookup only by `data.name` maybe?\r\n    if (typeof pswp.options[name + 'SVG'] === 'string') {\r\n      // arrowPrevSVG\r\n      // arrowNextSVG\r\n      // closeSVG\r\n      // zoomSVG\r\n      // @ts-expect-error lookup only by `data.name` maybe?\r\n      elementHTML = pswp.options[name + 'SVG'];\r\n    }\r\n\r\n    pswp.dispatch('uiElementCreate', { data });\r\n\r\n    let className = '';\r\n    if (data.isButton) {\r\n      className += 'pswp__button ';\r\n      className += (data.className || `pswp__button--${data.name}`);\r\n    } else {\r\n      className += (data.className || `pswp__${data.name}`);\r\n    }\r\n\r\n    let tagName = data.isButton ? (data.tagName || 'button') : (data.tagName || 'div');\r\n    tagName = /** @type {keyof HTMLElementTagNameMap} */ (tagName.toLowerCase());\r\n    /** @type {HTMLElement} */\r\n    const element = createElement(className, tagName);\r\n\r\n    if (data.isButton) {\r\n      if (tagName === 'button') {\r\n        /** @type {HTMLButtonElement} */ (element).type = 'button';\r\n      }\r\n\r\n      let { title } = data;\r\n      const { ariaLabel } = data;\r\n\r\n      // @ts-expect-error lookup only by `data.name` maybe?\r\n      if (typeof pswp.options[name + 'Title'] === 'string') {\r\n        // @ts-expect-error lookup only by `data.name` maybe?\r\n        title = pswp.options[name + 'Title'];\r\n      }\r\n\r\n      if (title) {\r\n        element.title = title;\r\n      }\r\n\r\n      const ariaText = ariaLabel || title;\r\n      if (ariaText) {\r\n        element.setAttribute('aria-label', ariaText);\r\n      }\r\n    }\r\n\r\n    element.innerHTML = addElementHTML(elementHTML);\r\n\r\n    if (data.onInit) {\r\n      data.onInit(element, pswp);\r\n    }\r\n\r\n    if (data.onClick) {\r\n      element.onclick = (e) => {\r\n        if (typeof data.onClick === 'string') {\r\n          // @ts-ignore\r\n          pswp[data.onClick]();\r\n        } else if (typeof data.onClick === 'function') {\r\n          data.onClick(e, element, pswp);\r\n        }\r\n      };\r\n    }\r\n\r\n    // Top bar is default position\r\n    const appendTo = data.appendTo || 'bar';\r\n    /** @type {HTMLElement | undefined} root element by default */\r\n    let container = pswp.element;\r\n    if (appendTo === 'bar') {\r\n      if (!pswp.topBar) {\r\n        pswp.topBar = createElement('pswp__top-bar pswp__hide-on-close', 'div', pswp.scrollWrap);\r\n      }\r\n      container = pswp.topBar;\r\n    } else {\r\n      // element outside of top bar gets a secondary class\r\n      // that makes element fade out on close\r\n      element.classList.add('pswp__hide-on-close');\r\n\r\n      if (appendTo === 'wrapper') {\r\n        container = pswp.scrollWrap;\r\n      }\r\n    }\r\n\r\n    container?.appendChild(pswp.applyFilters('uiElement', element, data));\r\n  }\r\n}\r\n\r\nexport default UIElement;\r\n","/*\r\n  Backward and forward arrow buttons\r\n */\r\n\r\n/** @typedef {import('./ui-element.js').UIElementData} UIElementData */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n\r\n/**\r\n *\r\n * @param {HTMLElement} element\r\n * @param {PhotoSwipe} pswp\r\n * @param {boolean} [isNextButton]\r\n */\r\nfunction initArrowButton(element, pswp, isNextButton) {\r\n  element.classList.add('pswp__button--arrow');\r\n  // TODO: this should point to a unique id for this instance\r\n  element.setAttribute('aria-controls', 'pswp__items');\r\n  pswp.on('change', () => {\r\n    if (!pswp.options.loop) {\r\n      if (isNextButton) {\r\n        /** @type {HTMLButtonElement} */\r\n        (element).disabled = !(pswp.currIndex < pswp.getNumItems() - 1);\r\n      } else {\r\n        /** @type {HTMLButtonElement} */\r\n        (element).disabled = !(pswp.currIndex > 0);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n/** @type {UIElementData} */\r\nexport const arrowPrev = {\r\n  name: 'arrowPrev',\r\n  className: 'pswp__button--arrow--prev',\r\n  title: 'Previous',\r\n  order: 10,\r\n  isButton: true,\r\n  appendTo: 'wrapper',\r\n  html: {\r\n    isCustomSVG: true,\r\n    size: 60,\r\n    inner: '<path d=\"M29 43l-3 3-16-16 16-16 3 3-13 13 13 13z\" id=\"pswp__icn-arrow\"/>',\r\n    outlineID: 'pswp__icn-arrow'\r\n  },\r\n  onClick: 'prev',\r\n  onInit: initArrowButton\r\n};\r\n\r\n/** @type {UIElementData} */\r\nexport const arrowNext = {\r\n  name: 'arrowNext',\r\n  className: 'pswp__button--arrow--next',\r\n  title: 'Next',\r\n  order: 11,\r\n  isButton: true,\r\n  appendTo: 'wrapper',\r\n  html: {\r\n    isCustomSVG: true,\r\n    size: 60,\r\n    inner: '<use xlink:href=\"#pswp__icn-arrow\"/>',\r\n    outlineID: 'pswp__icn-arrow'\r\n  },\r\n  onClick: 'next',\r\n  onInit: (el, pswp) => {\r\n    initArrowButton(el, pswp, true);\r\n  }\r\n};\r\n","/** @type {import('./ui-element.js').UIElementData} UIElementData */\r\nconst closeButton = {\r\n  name: 'close',\r\n  title: 'Close',\r\n  order: 20,\r\n  isButton: true,\r\n  html: {\r\n    isCustomSVG: true,\r\n    inner: '<path d=\"M24 10l-2-2-6 6-6-6-2 2 6 6-6 6 2 2 6-6 6 6 2-2-6-6z\" id=\"pswp__icn-close\"/>',\r\n    outlineID: 'pswp__icn-close'\r\n  },\r\n  onClick: 'close'\r\n};\r\n\r\nexport default closeButton;\r\n","/** @type {import('./ui-element.js').UIElementData} UIElementData */\r\nconst zoomButton = {\r\n  name: 'zoom',\r\n  title: 'Zoom',\r\n  order: 10,\r\n  isButton: true,\r\n  html: {\r\n    isCustomSVG: true,\r\n    // eslint-disable-next-line max-len\r\n    inner: '<path d=\"M17.426 19.926a6 6 0 1 1 1.5-1.5L23 22.5 21.5 24l-4.074-4.074z\" id=\"pswp__icn-zoom\"/>'\r\n          + '<path fill=\"currentColor\" class=\"pswp__zoom-icn-bar-h\" d=\"M11 16v-2h6v2z\"/>'\r\n          + '<path fill=\"currentColor\" class=\"pswp__zoom-icn-bar-v\" d=\"M13 12h2v6h-2z\"/>',\r\n    outlineID: 'pswp__icn-zoom'\r\n  },\r\n  onClick: 'toggleZoom'\r\n};\r\n\r\nexport default zoomButton;\r\n","/** @type {import('./ui-element.js').UIElementData} UIElementData */\r\nexport const loadingIndicator = {\r\n  name: 'preloader',\r\n  appendTo: 'bar',\r\n  order: 7,\r\n  html: {\r\n    isCustomSVG: true,\r\n    // eslint-disable-next-line max-len\r\n    inner: '<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M21.2 16a5.2 5.2 0 1 1-5.2-5.2V8a8 8 0 1 0 8 8h-2.8Z\" id=\"pswp__icn-loading\"/>',\r\n    outlineID: 'pswp__icn-loading'\r\n  },\r\n  onInit: (indicatorElement, pswp) => {\r\n    /** @type {boolean | undefined} */\r\n    let isVisible;\r\n    /** @type {NodeJS.Timeout | null} */\r\n    let delayTimeout = null;\r\n\r\n    /**\r\n     * @param {string} className\r\n     * @param {boolean} add\r\n     */\r\n    const toggleIndicatorClass = (className, add) => {\r\n      indicatorElement.classList.toggle('pswp__preloader--' + className, add);\r\n    };\r\n\r\n    /**\r\n     * @param {boolean} visible\r\n     */\r\n    const setIndicatorVisibility = (visible) => {\r\n      if (isVisible !== visible) {\r\n        isVisible = visible;\r\n        toggleIndicatorClass('active', visible);\r\n      }\r\n    };\r\n\r\n    const updatePreloaderVisibility = () => {\r\n      if (!pswp.currSlide?.content.isLoading()) {\r\n        setIndicatorVisibility(false);\r\n        if (delayTimeout) {\r\n          clearTimeout(delayTimeout);\r\n          delayTimeout = null;\r\n        }\r\n        return;\r\n      }\r\n\r\n      if (!delayTimeout) {\r\n        // display loading indicator with delay\r\n        delayTimeout = setTimeout(() => {\r\n          setIndicatorVisibility(Boolean(pswp.currSlide?.content.isLoading()));\r\n          delayTimeout = null;\r\n        }, pswp.options.preloaderDelay);\r\n      }\r\n    };\r\n\r\n    pswp.on('change', updatePreloaderVisibility);\r\n\r\n    pswp.on('loadComplete', (e) => {\r\n      if (pswp.currSlide === e.slide) {\r\n        updatePreloaderVisibility();\r\n      }\r\n    });\r\n\r\n    // expose the method\r\n    if (pswp.ui) {\r\n      pswp.ui.updatePreloaderVisibility = updatePreloaderVisibility;\r\n    }\r\n  }\r\n};\r\n","/** @type {import('./ui-element.js').UIElementData} UIElementData */\r\nexport const counterIndicator = {\r\n  name: 'counter',\r\n  order: 5,\r\n  onInit: (counterElement, pswp) => {\r\n    pswp.on('change', () => {\r\n      counterElement.innerText = (pswp.currIndex + 1)\r\n                                  + pswp.options.indexIndicatorSep\r\n                                  + pswp.getNumItems();\r\n    });\r\n  }\r\n};\r\n","import UIElement from './ui-element.js';\r\nimport { arrowPrev, arrowNext } from './button-arrow.js';\r\nimport closeButton from './button-close.js';\r\nimport zoomButton from './button-zoom.js';\r\nimport { loadingIndicator } from './loading-indicator.js';\r\nimport { counterIndicator } from './counter-indicator.js';\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('./ui-element.js').UIElementData} UIElementData */\r\n\r\n/**\r\n * Set special class on element when image is zoomed.\r\n *\r\n * By default, it is used to adjust\r\n * zoom icon and zoom cursor via CSS.\r\n *\r\n * @param {HTMLElement} el\r\n * @param {boolean} isZoomedIn\r\n */\r\nfunction setZoomedIn(el, isZoomedIn) {\r\n  el.classList.toggle('pswp--zoomed-in', isZoomedIn);\r\n}\r\n\r\nclass UI {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    this.isRegistered = false;\r\n    /** @type {UIElementData[]} */\r\n    this.uiElementsData = [];\r\n    /** @type {(UIElement | UIElementData)[]} */\r\n    this.items = [];\r\n    /** @type {() => void} */\r\n    this.updatePreloaderVisibility = () => {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {number | undefined}\r\n     */\r\n    this._lastUpdatedZoomLevel = undefined;\r\n  }\r\n\r\n  init() {\r\n    const { pswp } = this;\r\n    this.isRegistered = false;\r\n    this.uiElementsData = [\r\n      closeButton,\r\n      arrowPrev,\r\n      arrowNext,\r\n      zoomButton,\r\n      loadingIndicator,\r\n      counterIndicator\r\n    ];\r\n\r\n    pswp.dispatch('uiRegister');\r\n\r\n    // sort by order\r\n    this.uiElementsData.sort((a, b) => {\r\n      // default order is 0\r\n      return (a.order || 0) - (b.order || 0);\r\n    });\r\n\r\n    this.items = [];\r\n\r\n    this.isRegistered = true;\r\n    this.uiElementsData.forEach((uiElementData) => {\r\n      this.registerElement(uiElementData);\r\n    });\r\n\r\n    pswp.on('change', () => {\r\n      pswp.element?.classList.toggle('pswp--one-slide', pswp.getNumItems() === 1);\r\n    });\r\n\r\n    pswp.on('zoomPanUpdate', () => this._onZoomPanUpdate());\r\n  }\r\n\r\n  /**\r\n   * @param {UIElementData} elementData\r\n   */\r\n  registerElement(elementData) {\r\n    if (this.isRegistered) {\r\n      this.items.push(\r\n        new UIElement(this.pswp, elementData)\r\n      );\r\n    } else {\r\n      this.uiElementsData.push(elementData);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fired each time zoom or pan position is changed.\r\n   * Update classes that control visibility of zoom button and cursor icon.\r\n   *\r\n   * @private\r\n   */\r\n  _onZoomPanUpdate() {\r\n    const { template, currSlide, options } = this.pswp;\r\n\r\n    if (this.pswp.opener.isClosing || !template || !currSlide) {\r\n      return;\r\n    }\r\n\r\n    let { currZoomLevel } = currSlide;\r\n\r\n    // if not open yet - check against initial zoom level\r\n    if (!this.pswp.opener.isOpen) {\r\n      currZoomLevel = currSlide.zoomLevels.initial;\r\n    }\r\n\r\n    if (currZoomLevel === this._lastUpdatedZoomLevel) {\r\n      return;\r\n    }\r\n    this._lastUpdatedZoomLevel = currZoomLevel;\r\n\r\n    const currZoomLevelDiff = currSlide.zoomLevels.initial - currSlide.zoomLevels.secondary;\r\n\r\n    // Initial and secondary zoom levels are almost equal\r\n    if (Math.abs(currZoomLevelDiff) < 0.01 || !currSlide.isZoomable()) {\r\n      // disable zoom\r\n      setZoomedIn(template, false);\r\n      template.classList.remove('pswp--zoom-allowed');\r\n      return;\r\n    }\r\n\r\n    template.classList.add('pswp--zoom-allowed');\r\n\r\n    const potentialZoomLevel = currZoomLevel === currSlide.zoomLevels.initial\r\n      ? currSlide.zoomLevels.secondary : currSlide.zoomLevels.initial;\r\n\r\n    setZoomedIn(template, potentialZoomLevel <= currZoomLevel);\r\n\r\n    if (options.imageClickAction === 'zoom'\r\n        || options.imageClickAction === 'zoom-or-close') {\r\n      template.classList.add('pswp--click-to-zoom');\r\n    }\r\n  }\r\n}\r\n\r\nexport default UI;\r\n","/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n\r\n/** @typedef {{ x: number; y: number; w: number; innerRect?: { w: number; h: number; x: number; y: number } }} Bounds */\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n * @returns Bounds\r\n */\r\nfunction getBoundsByElement(el) {\r\n  const thumbAreaRect = el.getBoundingClientRect();\r\n  return {\r\n    x: thumbAreaRect.left,\r\n    y: thumbAreaRect.top,\r\n    w: thumbAreaRect.width\r\n  };\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n * @param {number} imageWidth\r\n * @param {number} imageHeight\r\n * @returns Bounds\r\n */\r\nfunction getCroppedBoundsByElement(el, imageWidth, imageHeight) {\r\n  const thumbAreaRect = el.getBoundingClientRect();\r\n\r\n  // fill image into the area\r\n  // (do they same as object-fit:cover does to retrieve coordinates)\r\n  const hRatio = thumbAreaRect.width / imageWidth;\r\n  const vRatio = thumbAreaRect.height / imageHeight;\r\n  const fillZoomLevel = hRatio > vRatio ? hRatio : vRatio;\r\n\r\n  const offsetX = (thumbAreaRect.width - imageWidth * fillZoomLevel) / 2;\r\n  const offsetY = (thumbAreaRect.height - imageHeight * fillZoomLevel) / 2;\r\n\r\n  /**\r\n   * Coordinates of the image,\r\n   * as if it was not cropped,\r\n   * height is calculated automatically\r\n   *\r\n   * @type {Bounds}\r\n   */\r\n  const bounds = {\r\n    x: thumbAreaRect.left + offsetX,\r\n    y: thumbAreaRect.top + offsetY,\r\n    w: imageWidth * fillZoomLevel\r\n  };\r\n\r\n  // Coordinates of inner crop area\r\n  // relative to the image\r\n  bounds.innerRect = {\r\n    w: thumbAreaRect.width,\r\n    h: thumbAreaRect.height,\r\n    x: offsetX,\r\n    y: offsetY\r\n  };\r\n\r\n  return bounds;\r\n}\r\n\r\n/**\r\n * Get dimensions of thumbnail image\r\n * (click on which opens photoswipe or closes photoswipe to)\r\n *\r\n * @param {number} index\r\n * @param {SlideData} itemData\r\n * @param {PhotoSwipe} instance PhotoSwipe instance\r\n * @returns {Bounds | undefined}\r\n */\r\nexport function getThumbBounds(index, itemData, instance) {\r\n  // legacy event, before filters were introduced\r\n  const event = instance.dispatch('thumbBounds', {\r\n    index,\r\n    itemData,\r\n    instance\r\n  });\r\n  // @ts-expect-error\r\n  if (event.thumbBounds) {\r\n    // @ts-expect-error\r\n    return event.thumbBounds;\r\n  }\r\n\r\n  const { element } = itemData;\r\n  /** @type {Bounds | undefined} */\r\n  let thumbBounds;\r\n  /** @type {HTMLElement | null | undefined} */\r\n  let thumbnail;\r\n\r\n  if (element && instance.options.thumbSelector !== false) {\r\n    const thumbSelector = instance.options.thumbSelector || 'img';\r\n    thumbnail = element.matches(thumbSelector)\r\n      ? element : /** @type {HTMLElement | null} */ (element.querySelector(thumbSelector));\r\n  }\r\n\r\n  thumbnail = instance.applyFilters('thumbEl', thumbnail, itemData, index);\r\n\r\n  if (thumbnail) {\r\n    if (!itemData.thumbCropped) {\r\n      thumbBounds = getBoundsByElement(thumbnail);\r\n    } else {\r\n      thumbBounds = getCroppedBoundsByElement(\r\n        thumbnail,\r\n        itemData.width || itemData.w || 0,\r\n        itemData.height || itemData.h || 0\r\n      );\r\n    }\r\n  }\r\n\r\n  return instance.applyFilters('thumbBounds', thumbBounds, itemData, index);\r\n}\r\n","import {\r\n  setTransform,\r\n  equalizePoints,\r\n  decodeImage,\r\n  toTransformString\r\n} from './util/util.js';\r\n\r\n/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('./slide/get-thumb-bounds.js').Bounds} Bounds */\r\n/** @typedef {import('./util/animations.js').AnimationProps} AnimationProps */\r\n\r\n// some browsers do not paint\r\n// elements which opacity is set to 0,\r\n// since we need to pre-render elements for the animation -\r\n// we set it to the minimum amount\r\nconst MIN_OPACITY = 0.003;\r\n\r\n/**\r\n * Manages opening and closing transitions of the PhotoSwipe.\r\n *\r\n * It can perform zoom, fade or no transition.\r\n */\r\nclass Opener {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    this.isClosed = true;\r\n    this.isOpen = false;\r\n    this.isClosing = false;\r\n    this.isOpening = false;\r\n    /**\r\n     * @private\r\n     * @type {number | false | undefined}\r\n     */\r\n    this._duration = undefined;\r\n    /** @private */\r\n    this._useAnimation = false;\r\n    /** @private */\r\n    this._croppedZoom = false;\r\n    /** @private */\r\n    this._animateRootOpacity = false;\r\n    /** @private */\r\n    this._animateBgOpacity = false;\r\n    /**\r\n     * @private\r\n     * @type { HTMLDivElement | HTMLImageElement | null | undefined }\r\n     */\r\n    this._placeholder = undefined;\r\n    /**\r\n     * @private\r\n     * @type { HTMLDivElement | undefined }\r\n     */\r\n    this._opacityElement = undefined;\r\n    /**\r\n     * @private\r\n     * @type { HTMLDivElement | undefined }\r\n     */\r\n    this._cropContainer1 = undefined;\r\n    /**\r\n     * @private\r\n     * @type { HTMLElement | null | undefined }\r\n     */\r\n    this._cropContainer2 = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Bounds | undefined}\r\n     */\r\n    this._thumbBounds = undefined;\r\n\r\n\r\n    this._prepareOpen = this._prepareOpen.bind(this);\r\n\r\n    // Override initial zoom and pan position\r\n    pswp.on('firstZoomPan', this._prepareOpen);\r\n  }\r\n\r\n  open() {\r\n    this._prepareOpen();\r\n    this._start();\r\n  }\r\n\r\n  close() {\r\n    if (this.isClosed || this.isClosing || this.isOpening) {\r\n      // if we close during opening animation\r\n      // for now do nothing,\r\n      // browsers aren't good at changing the direction of the CSS transition\r\n      return;\r\n    }\r\n\r\n    const slide = this.pswp.currSlide;\r\n\r\n    this.isOpen = false;\r\n    this.isOpening = false;\r\n    this.isClosing = true;\r\n    this._duration = this.pswp.options.hideAnimationDuration;\r\n\r\n    if (slide && slide.currZoomLevel * slide.width >= this.pswp.options.maxWidthToAnimate) {\r\n      this._duration = 0;\r\n    }\r\n\r\n    this._applyStartProps();\r\n    setTimeout(() => {\r\n      this._start();\r\n    }, this._croppedZoom ? 30 : 0);\r\n  }\r\n\r\n  /** @private */\r\n  _prepareOpen() {\r\n    this.pswp.off('firstZoomPan', this._prepareOpen);\r\n    if (!this.isOpening) {\r\n      const slide = this.pswp.currSlide;\r\n      this.isOpening = true;\r\n      this.isClosing = false;\r\n      this._duration = this.pswp.options.showAnimationDuration;\r\n      if (slide && slide.zoomLevels.initial * slide.width >= this.pswp.options.maxWidthToAnimate) {\r\n        this._duration = 0;\r\n      }\r\n      this._applyStartProps();\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _applyStartProps() {\r\n    const { pswp } = this;\r\n    const slide = this.pswp.currSlide;\r\n    const { options } = pswp;\r\n\r\n    if (options.showHideAnimationType === 'fade') {\r\n      options.showHideOpacity = true;\r\n      this._thumbBounds = undefined;\r\n    } else if (options.showHideAnimationType === 'none') {\r\n      options.showHideOpacity = false;\r\n      this._duration = 0;\r\n      this._thumbBounds = undefined;\r\n    } else if (this.isOpening && pswp._initialThumbBounds) {\r\n      // Use initial bounds if defined\r\n      this._thumbBounds = pswp._initialThumbBounds;\r\n    } else {\r\n      this._thumbBounds = this.pswp.getThumbBounds();\r\n    }\r\n\r\n    this._placeholder = slide?.getPlaceholderElement();\r\n\r\n    pswp.animations.stopAll();\r\n\r\n    // Discard animations when duration is less than 50ms\r\n    this._useAnimation = Boolean(this._duration && this._duration > 50);\r\n    this._animateZoom = Boolean(this._thumbBounds)\r\n                        && slide?.content.usePlaceholder()\r\n                        && (!this.isClosing || !pswp.mainScroll.isShifted());\r\n    if (!this._animateZoom) {\r\n      this._animateRootOpacity = true;\r\n\r\n      if (this.isOpening && slide) {\r\n        slide.zoomAndPanToInitial();\r\n        slide.applyCurrentZoomPan();\r\n      }\r\n    } else {\r\n      this._animateRootOpacity = options.showHideOpacity ?? false;\r\n    }\r\n    this._animateBgOpacity = !this._animateRootOpacity && this.pswp.options.bgOpacity > MIN_OPACITY;\r\n    this._opacityElement = this._animateRootOpacity ? pswp.element : pswp.bg;\r\n\r\n    if (!this._useAnimation) {\r\n      this._duration = 0;\r\n      this._animateZoom = false;\r\n      this._animateBgOpacity = false;\r\n      this._animateRootOpacity = true;\r\n      if (this.isOpening) {\r\n        if (pswp.element) {\r\n          pswp.element.style.opacity = String(MIN_OPACITY);\r\n        }\r\n        pswp.applyBgOpacity(1);\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (this._animateZoom && this._thumbBounds && this._thumbBounds.innerRect) {\r\n      // Properties are used when animation from cropped thumbnail\r\n      this._croppedZoom = true;\r\n      this._cropContainer1 = this.pswp.container;\r\n      this._cropContainer2 = this.pswp.currSlide?.holderElement;\r\n\r\n      if (pswp.container) {\r\n        pswp.container.style.overflow = 'hidden';\r\n        pswp.container.style.width = pswp.viewportSize.x + 'px';\r\n      }\r\n    } else {\r\n      this._croppedZoom = false;\r\n    }\r\n\r\n    if (this.isOpening) {\r\n      // Apply styles before opening transition\r\n      if (this._animateRootOpacity) {\r\n        if (pswp.element) {\r\n          pswp.element.style.opacity = String(MIN_OPACITY);\r\n        }\r\n        pswp.applyBgOpacity(1);\r\n      } else {\r\n        if (this._animateBgOpacity && pswp.bg) {\r\n          pswp.bg.style.opacity = String(MIN_OPACITY);\r\n        }\r\n        if (pswp.element) {\r\n          pswp.element.style.opacity = '1';\r\n        }\r\n      }\r\n\r\n      if (this._animateZoom) {\r\n        this._setClosedStateZoomPan();\r\n        if (this._placeholder) {\r\n          // tell browser that we plan to animate the placeholder\r\n          this._placeholder.style.willChange = 'transform';\r\n\r\n          // hide placeholder to allow hiding of\r\n          // elements that overlap it (such as icons over the thumbnail)\r\n          this._placeholder.style.opacity = String(MIN_OPACITY);\r\n        }\r\n      }\r\n    } else if (this.isClosing) {\r\n      // hide nearby slides to make sure that\r\n      // they are not painted during the transition\r\n      if (pswp.mainScroll.itemHolders[0]) {\r\n        pswp.mainScroll.itemHolders[0].el.style.display = 'none';\r\n      }\r\n      if (pswp.mainScroll.itemHolders[2]) {\r\n        pswp.mainScroll.itemHolders[2].el.style.display = 'none';\r\n      }\r\n\r\n      if (this._croppedZoom) {\r\n        if (pswp.mainScroll.x !== 0) {\r\n          // shift the main scroller to zero position\r\n          pswp.mainScroll.resetPosition();\r\n          pswp.mainScroll.resize();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _start() {\r\n    if (this.isOpening\r\n        && this._useAnimation\r\n        && this._placeholder\r\n        && this._placeholder.tagName === 'IMG') {\r\n      // To ensure smooth animation\r\n      // we wait till the current slide image placeholder is decoded,\r\n      // but no longer than 250ms,\r\n      // and no shorter than 50ms\r\n      // (just using requestanimationframe is not enough in Firefox,\r\n      // for some reason)\r\n      new Promise((resolve) => {\r\n        let decoded = false;\r\n        let isDelaying = true;\r\n        decodeImage(/** @type {HTMLImageElement} */ (this._placeholder)).finally(() => {\r\n          decoded = true;\r\n          if (!isDelaying) {\r\n            resolve(true);\r\n          }\r\n        });\r\n        setTimeout(() => {\r\n          isDelaying = false;\r\n          if (decoded) {\r\n            resolve(true);\r\n          }\r\n        }, 50);\r\n        setTimeout(resolve, 250);\r\n      }).finally(() => this._initiate());\r\n    } else {\r\n      this._initiate();\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _initiate() {\r\n    this.pswp.element?.style.setProperty('--pswp-transition-duration', this._duration + 'ms');\r\n\r\n    this.pswp.dispatch(\r\n      this.isOpening ? 'openingAnimationStart' : 'closingAnimationStart'\r\n    );\r\n\r\n    // legacy event\r\n    this.pswp.dispatch(\r\n      /** @type {'initialZoomIn' | 'initialZoomOut'} */\r\n      ('initialZoom' + (this.isOpening ? 'In' : 'Out'))\r\n    );\r\n\r\n    this.pswp.element?.classList.toggle('pswp--ui-visible', this.isOpening);\r\n\r\n    if (this.isOpening) {\r\n      if (this._placeholder) {\r\n        // unhide the placeholder\r\n        this._placeholder.style.opacity = '1';\r\n      }\r\n      this._animateToOpenState();\r\n    } else if (this.isClosing) {\r\n      this._animateToClosedState();\r\n    }\r\n\r\n    if (!this._useAnimation) {\r\n      this._onAnimationComplete();\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _onAnimationComplete() {\r\n    const { pswp } = this;\r\n    this.isOpen = this.isOpening;\r\n    this.isClosed = this.isClosing;\r\n    this.isOpening = false;\r\n    this.isClosing = false;\r\n\r\n    pswp.dispatch(\r\n      this.isOpen ? 'openingAnimationEnd' : 'closingAnimationEnd'\r\n    );\r\n\r\n    // legacy event\r\n    pswp.dispatch(\r\n      /** @type {'initialZoomInEnd' | 'initialZoomOutEnd'} */\r\n      ('initialZoom' + (this.isOpen ? 'InEnd' : 'OutEnd'))\r\n    );\r\n\r\n    if (this.isClosed) {\r\n      pswp.destroy();\r\n    } else if (this.isOpen) {\r\n      if (this._animateZoom && pswp.container) {\r\n        pswp.container.style.overflow = 'visible';\r\n        pswp.container.style.width = '100%';\r\n      }\r\n      pswp.currSlide?.applyCurrentZoomPan();\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _animateToOpenState() {\r\n    const { pswp } = this;\r\n    if (this._animateZoom) {\r\n      if (this._croppedZoom && this._cropContainer1 && this._cropContainer2) {\r\n        this._animateTo(this._cropContainer1, 'transform', 'translate3d(0,0,0)');\r\n        this._animateTo(this._cropContainer2, 'transform', 'none');\r\n      }\r\n\r\n      if (pswp.currSlide) {\r\n        pswp.currSlide.zoomAndPanToInitial();\r\n        this._animateTo(\r\n          pswp.currSlide.container,\r\n          'transform',\r\n          pswp.currSlide.getCurrentTransform()\r\n        );\r\n      }\r\n    }\r\n\r\n    if (this._animateBgOpacity && pswp.bg) {\r\n      this._animateTo(pswp.bg, 'opacity', String(pswp.options.bgOpacity));\r\n    }\r\n\r\n    if (this._animateRootOpacity && pswp.element) {\r\n      this._animateTo(pswp.element, 'opacity', '1');\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _animateToClosedState() {\r\n    const { pswp } = this;\r\n\r\n    if (this._animateZoom) {\r\n      this._setClosedStateZoomPan(true);\r\n    }\r\n\r\n    // do not animate opacity if it's already at 0\r\n    if (this._animateBgOpacity && pswp.bgOpacity > 0.01 && pswp.bg) {\r\n      this._animateTo(pswp.bg, 'opacity', '0');\r\n    }\r\n\r\n    if (this._animateRootOpacity && pswp.element) {\r\n      this._animateTo(pswp.element, 'opacity', '0');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {boolean} [animate]\r\n   */\r\n  _setClosedStateZoomPan(animate) {\r\n    if (!this._thumbBounds) return;\r\n\r\n    const { pswp } = this;\r\n    const { innerRect } = this._thumbBounds;\r\n    const { currSlide, viewportSize } = pswp;\r\n\r\n    if (this._croppedZoom && innerRect && this._cropContainer1 && this._cropContainer2) {\r\n      const containerOnePanX = -viewportSize.x + (this._thumbBounds.x - innerRect.x) + innerRect.w;\r\n      const containerOnePanY = -viewportSize.y + (this._thumbBounds.y - innerRect.y) + innerRect.h;\r\n      const containerTwoPanX = viewportSize.x - innerRect.w;\r\n      const containerTwoPanY = viewportSize.y - innerRect.h;\r\n\r\n\r\n      if (animate) {\r\n        this._animateTo(\r\n          this._cropContainer1,\r\n          'transform',\r\n          toTransformString(containerOnePanX, containerOnePanY)\r\n        );\r\n\r\n        this._animateTo(\r\n          this._cropContainer2,\r\n          'transform',\r\n          toTransformString(containerTwoPanX, containerTwoPanY)\r\n        );\r\n      } else {\r\n        setTransform(this._cropContainer1, containerOnePanX, containerOnePanY);\r\n        setTransform(this._cropContainer2, containerTwoPanX, containerTwoPanY);\r\n      }\r\n    }\r\n\r\n    if (currSlide) {\r\n      equalizePoints(currSlide.pan, innerRect || this._thumbBounds);\r\n      currSlide.currZoomLevel = this._thumbBounds.w / currSlide.width;\r\n      if (animate) {\r\n        this._animateTo(currSlide.container, 'transform', currSlide.getCurrentTransform());\r\n      } else {\r\n        currSlide.applyCurrentZoomPan();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {HTMLElement} target\r\n   * @param {'transform' | 'opacity'} prop\r\n   * @param {string} propValue\r\n   */\r\n  _animateTo(target, prop, propValue) {\r\n    if (!this._duration) {\r\n      target.style[prop] = propValue;\r\n      return;\r\n    }\r\n\r\n    const { animations } = this.pswp;\r\n    /** @type {AnimationProps} */\r\n    const animProps = {\r\n      duration: this._duration,\r\n      easing: this.pswp.options.easing,\r\n      onComplete: () => {\r\n        if (!animations.activeAnimations.length) {\r\n          this._onAnimationComplete();\r\n        }\r\n      },\r\n      target,\r\n    };\r\n    animProps[prop] = propValue;\r\n    animations.startTransition(animProps);\r\n  }\r\n}\r\n\r\nexport default Opener;\r\n","import {\r\n  createElement,\r\n  equalizePoints,\r\n  pointsEqual,\r\n  clamp,\r\n} from './util/util.js';\r\n\r\nimport DOMEvents from './util/dom-events.js';\r\nimport Slide from './slide/slide.js';\r\nimport Gestures from './gestures/gestures.js';\r\nimport MainScroll from './main-scroll.js';\r\n\r\nimport Keyboard from './keyboard.js';\r\nimport Animations from './util/animations.js';\r\nimport ScrollWheel from './scroll-wheel.js';\r\nimport UI from './ui/ui.js';\r\nimport { getViewportSize } from './util/viewport-size.js';\r\nimport { getThumbBounds } from './slide/get-thumb-bounds.js';\r\nimport PhotoSwipeBase from './core/base.js';\r\nimport Opener from './opener.js';\r\nimport ContentLoader from './slide/loader.js';\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('./types.js').Type<T>} Type<T>\r\n */\r\n\r\n/** @typedef {import('./slide/slide.js').SlideData} SlideData */\r\n/** @typedef {import('./slide/zoom-level.js').ZoomLevelOption} ZoomLevelOption */\r\n/** @typedef {import('./ui/ui-element.js').UIElementData} UIElementData */\r\n/** @typedef {import('./main-scroll.js').ItemHolder} ItemHolder */\r\n/** @typedef {import('./core/eventable.js').PhotoSwipeEventsMap} PhotoSwipeEventsMap */\r\n/** @typedef {import('./core/eventable.js').PhotoSwipeFiltersMap} PhotoSwipeFiltersMap */\r\n/** @typedef {import('./slide/get-thumb-bounds').Bounds} Bounds */\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {import('./core/eventable.js').EventCallback<T>} EventCallback<T>\r\n */\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {import('./core/eventable.js').AugmentedEvent<T>} AugmentedEvent<T>\r\n */\r\n\r\n/** @typedef {{ x: number; y: number; id?: string | number }} Point */\r\n/** @typedef {{ top: number; bottom: number; left: number; right: number }} Padding */\r\n/** @typedef {SlideData[]} DataSourceArray */\r\n/** @typedef {{ gallery: HTMLElement; items?: HTMLElement[] }} DataSourceObject */\r\n/** @typedef {DataSourceArray | DataSourceObject} DataSource */\r\n/** @typedef {(point: Point, originalEvent: PointerEvent) => void} ActionFn */\r\n/** @typedef {'close' | 'next' | 'zoom' | 'zoom-or-close' | 'toggle-controls'} ActionType */\r\n/** @typedef {Type<PhotoSwipe> | { default: Type<PhotoSwipe> }} PhotoSwipeModule */\r\n/** @typedef {PhotoSwipeModule | Promise<PhotoSwipeModule> | (() => Promise<PhotoSwipeModule>)} PhotoSwipeModuleOption */\r\n\r\n/**\r\n * @typedef {string | NodeListOf<HTMLElement> | HTMLElement[] | HTMLElement} ElementProvider\r\n */\r\n\r\n/** @typedef {Partial<PreparedPhotoSwipeOptions>} PhotoSwipeOptions https://photoswipe.com/options/ */\r\n/**\r\n * @typedef {Object} PreparedPhotoSwipeOptions\r\n *\r\n * @prop {DataSource} [dataSource]\r\n * Pass an array of any items via dataSource option. Its length will determine amount of slides\r\n * (which may be modified further from numItems event).\r\n *\r\n * Each item should contain data that you need to generate slide\r\n * (for image slide it would be src (image URL), width (image width), height, srcset, alt).\r\n *\r\n * If these properties are not present in your initial array, you may \"pre-parse\" each item from itemData filter.\r\n *\r\n * @prop {number} bgOpacity\r\n * Background backdrop opacity, always define it via this option and not via CSS rgba color.\r\n *\r\n * @prop {number} spacing\r\n * Spacing between slides. Defined as ratio relative to the viewport width (0.1 = 10% of viewport).\r\n *\r\n * @prop {boolean} allowPanToNext\r\n * Allow swipe navigation to the next slide when the current slide is zoomed. Does not apply to mouse events.\r\n *\r\n * @prop {boolean} loop\r\n * If set to true you'll be able to swipe from the last to the first image.\r\n * Option is always false when there are less than 3 slides.\r\n *\r\n * @prop {boolean} [wheelToZoom]\r\n * By default PhotoSwipe zooms image with ctrl-wheel, if you enable this option - image will zoom just via wheel.\r\n *\r\n * @prop {boolean} pinchToClose\r\n * Pinch touch gesture to close the gallery.\r\n *\r\n * @prop {boolean} closeOnVerticalDrag\r\n * Vertical drag gesture to close the PhotoSwipe.\r\n *\r\n * @prop {Padding} [padding]\r\n * Slide area padding (in pixels).\r\n *\r\n * @prop {(viewportSize: Point, itemData: SlideData, index: number) => Padding} [paddingFn]\r\n * The option is checked frequently, so make sure it's performant. Overrides padding option if defined. For example:\r\n *\r\n * @prop {number | false} hideAnimationDuration\r\n * Transition duration in milliseconds, can be 0.\r\n *\r\n * @prop {number | false} showAnimationDuration\r\n * Transition duration in milliseconds, can be 0.\r\n *\r\n * @prop {number | false} zoomAnimationDuration\r\n * Transition duration in milliseconds, can be 0.\r\n *\r\n * @prop {string} easing\r\n * String, 'cubic-bezier(.4,0,.22,1)'. CSS easing function for open/close/zoom transitions.\r\n *\r\n * @prop {boolean} escKey\r\n * Esc key to close.\r\n *\r\n * @prop {boolean} arrowKeys\r\n * Left/right arrow keys for navigation.\r\n *\r\n * @prop {boolean} returnFocus\r\n * Restore focus the last active element after PhotoSwipe is closed.\r\n *\r\n * @prop {boolean} clickToCloseNonZoomable\r\n * If image is not zoomable (for example, smaller than viewport) it can be closed by clicking on it.\r\n *\r\n * @prop {ActionType | ActionFn | false} imageClickAction\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {ActionType | ActionFn | false} bgClickAction\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {ActionType | ActionFn | false} tapAction\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {ActionType | ActionFn | false} doubleTapAction\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {number} preloaderDelay\r\n * Delay before the loading indicator will be displayed,\r\n * if image is loaded during it - the indicator will not be displayed at all. Can be zero.\r\n *\r\n * @prop {string} indexIndicatorSep\r\n * Used for slide count indicator (\"1 of 10 \").\r\n *\r\n * @prop {(options: PhotoSwipeOptions, pswp: PhotoSwipeBase) => Point} [getViewportSizeFn]\r\n * A function that should return slide viewport width and height, in format {x: 100, y: 100}.\r\n *\r\n * @prop {string} errorMsg\r\n * Message to display when the image wasn't able to load. If you need to display HTML - use contentErrorElement filter.\r\n *\r\n * @prop {[number, number]} preload\r\n * Lazy loading of nearby slides based on direction of movement. Should be an array with two integers,\r\n * first one - number of items to preload before the current image, second one - after the current image.\r\n * Two nearby images are always loaded.\r\n *\r\n * @prop {string} [mainClass]\r\n * Class that will be added to the root element of PhotoSwipe, may contain multiple separated by space.\r\n * Example on Styling page.\r\n *\r\n * @prop {HTMLElement} [appendToEl]\r\n * Element to which PhotoSwipe dialog will be appended when it opens.\r\n *\r\n * @prop {number} maxWidthToAnimate\r\n * Maximum width of image to animate, if initial rendered image width\r\n * is larger than this value - the opening/closing transition will be automatically disabled.\r\n *\r\n * @prop {string} [closeTitle]\r\n * Translating\r\n *\r\n * @prop {string} [zoomTitle]\r\n * Translating\r\n *\r\n * @prop {string} [arrowPrevTitle]\r\n * Translating\r\n *\r\n * @prop {string} [arrowNextTitle]\r\n * Translating\r\n *\r\n * @prop {'zoom' | 'fade' | 'none'} [showHideAnimationType]\r\n * To adjust opening or closing transition type use lightbox option `showHideAnimationType` (`String`).\r\n * It supports three values - `zoom` (default), `fade` (default if there is no thumbnail) and `none`.\r\n *\r\n * Animations are automatically disabled if user `(prefers-reduced-motion: reduce)`.\r\n *\r\n * @prop {number} index\r\n * Defines start slide index.\r\n *\r\n * @prop {(e: MouseEvent) => number} [getClickedIndexFn]\r\n *\r\n * @prop {boolean} [arrowPrev]\r\n * @prop {boolean} [arrowNext]\r\n * @prop {boolean} [zoom]\r\n * @prop {boolean} [close]\r\n * @prop {boolean} [counter]\r\n *\r\n * @prop {string} [arrowPrevSVG]\r\n * @prop {string} [arrowNextSVG]\r\n * @prop {string} [zoomSVG]\r\n * @prop {string} [closeSVG]\r\n * @prop {string} [counterSVG]\r\n *\r\n * @prop {string} [arrowPrevTitle]\r\n * @prop {string} [arrowNextTitle]\r\n * @prop {string} [zoomTitle]\r\n * @prop {string} [closeTitle]\r\n * @prop {string} [counterTitle]\r\n *\r\n * @prop {ZoomLevelOption} [initialZoomLevel]\r\n * @prop {ZoomLevelOption} [secondaryZoomLevel]\r\n * @prop {ZoomLevelOption} [maxZoomLevel]\r\n *\r\n * @prop {boolean} [mouseMovePan]\r\n * @prop {Point | null} [initialPointerPos]\r\n * @prop {boolean} [showHideOpacity]\r\n *\r\n * @prop {PhotoSwipeModuleOption} [pswpModule]\r\n * @prop {() => Promise<any>} [openPromise]\r\n * @prop {boolean} [preloadFirstSlide]\r\n * @prop {ElementProvider} [gallery]\r\n * @prop {string} [gallerySelector]\r\n * @prop {ElementProvider} [children]\r\n * @prop {string} [childSelector]\r\n * @prop {string | false} [thumbSelector]\r\n */\r\n\r\n/** @type {PreparedPhotoSwipeOptions} */\r\nconst defaultOptions = {\r\n  allowPanToNext: true,\r\n  spacing: 0.1,\r\n  loop: true,\r\n  pinchToClose: true,\r\n  closeOnVerticalDrag: true,\r\n  hideAnimationDuration: 333,\r\n  showAnimationDuration: 333,\r\n  zoomAnimationDuration: 333,\r\n  escKey: true,\r\n  arrowKeys: true,\r\n  returnFocus: true,\r\n  maxWidthToAnimate: 4000,\r\n  clickToCloseNonZoomable: true,\r\n  imageClickAction: 'zoom-or-close',\r\n  bgClickAction: 'close',\r\n  tapAction: 'toggle-controls',\r\n  doubleTapAction: 'zoom',\r\n  indexIndicatorSep: ' / ',\r\n  preloaderDelay: 2000,\r\n  bgOpacity: 0.8,\r\n\r\n  index: 0,\r\n  errorMsg: 'The image cannot be loaded',\r\n  preload: [1, 2],\r\n  easing: 'cubic-bezier(.4,0,.22,1)'\r\n};\r\n\r\n/**\r\n * PhotoSwipe Core\r\n */\r\nclass PhotoSwipe extends PhotoSwipeBase {\r\n  /**\r\n   * @param {PhotoSwipeOptions} [options]\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    this.options = this._prepareOptions(options || {});\r\n\r\n    /**\r\n     * offset of viewport relative to document\r\n     *\r\n     * @type {Point}\r\n     */\r\n    this.offset = { x: 0, y: 0 };\r\n\r\n    /**\r\n     * @type {Point}\r\n     * @private\r\n     */\r\n    this._prevViewportSize = { x: 0, y: 0 };\r\n\r\n    /**\r\n     * Size of scrollable PhotoSwipe viewport\r\n     *\r\n     * @type {Point}\r\n     */\r\n    this.viewportSize = { x: 0, y: 0 };\r\n\r\n    /**\r\n     * background (backdrop) opacity\r\n     */\r\n    this.bgOpacity = 1;\r\n    this.currIndex = 0;\r\n    this.potentialIndex = 0;\r\n    this.isOpen = false;\r\n    this.isDestroying = false;\r\n    this.hasMouse = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {SlideData}\r\n     */\r\n    this._initialItemData = {};\r\n    /** @type {Bounds | undefined} */\r\n    this._initialThumbBounds = undefined;\r\n\r\n    /** @type {HTMLDivElement | undefined} */\r\n    this.topBar = undefined;\r\n    /** @type {HTMLDivElement | undefined} */\r\n    this.element = undefined;\r\n    /** @type {HTMLDivElement | undefined} */\r\n    this.template = undefined;\r\n    /** @type {HTMLDivElement | undefined} */\r\n    this.container = undefined;\r\n    /** @type {HTMLElement | undefined} */\r\n    this.scrollWrap = undefined;\r\n    /** @type {Slide | undefined} */\r\n    this.currSlide = undefined;\r\n\r\n    this.events = new DOMEvents();\r\n    this.animations = new Animations();\r\n    this.mainScroll = new MainScroll(this);\r\n    this.gestures = new Gestures(this);\r\n    this.opener = new Opener(this);\r\n    this.keyboard = new Keyboard(this);\r\n    this.contentLoader = new ContentLoader(this);\r\n  }\r\n\r\n  /** @returns {boolean} */\r\n  init() {\r\n    if (this.isOpen || this.isDestroying) {\r\n      return false;\r\n    }\r\n\r\n    this.isOpen = true;\r\n    this.dispatch('init'); // legacy\r\n    this.dispatch('beforeOpen');\r\n\r\n    this._createMainStructure();\r\n\r\n    // add classes to the root element of PhotoSwipe\r\n    let rootClasses = 'pswp--open';\r\n    if (this.gestures.supportsTouch) {\r\n      rootClasses += ' pswp--touch';\r\n    }\r\n    if (this.options.mainClass) {\r\n      rootClasses += ' ' + this.options.mainClass;\r\n    }\r\n    if (this.element) {\r\n      this.element.className += ' ' + rootClasses;\r\n    }\r\n\r\n    this.currIndex = this.options.index || 0;\r\n    this.potentialIndex = this.currIndex;\r\n    this.dispatch('firstUpdate'); // starting index can be modified here\r\n\r\n    // initialize scroll wheel handler to block the scroll\r\n    this.scrollWheel = new ScrollWheel(this);\r\n\r\n    // sanitize index\r\n    if (Number.isNaN(this.currIndex)\r\n        || this.currIndex < 0\r\n        || this.currIndex >= this.getNumItems()) {\r\n      this.currIndex = 0;\r\n    }\r\n\r\n    if (!this.gestures.supportsTouch) {\r\n      // enable mouse features if no touch support detected\r\n      this.mouseDetected();\r\n    }\r\n\r\n    // causes forced synchronous layout\r\n    this.updateSize();\r\n\r\n    this.offset.y = window.pageYOffset;\r\n\r\n    this._initialItemData = this.getItemData(this.currIndex);\r\n    this.dispatch('gettingData', {\r\n      index: this.currIndex,\r\n      data: this._initialItemData,\r\n      slide: undefined\r\n    });\r\n\r\n    // *Layout* - calculate size and position of elements here\r\n    this._initialThumbBounds = this.getThumbBounds();\r\n    this.dispatch('initialLayout');\r\n\r\n    this.on('openingAnimationEnd', () => {\r\n      const { itemHolders } = this.mainScroll;\r\n\r\n      // Add content to the previous and next slide\r\n      if (itemHolders[0]) {\r\n        itemHolders[0].el.style.display = 'block';\r\n        this.setContent(itemHolders[0], this.currIndex - 1);\r\n      }\r\n      if (itemHolders[2]) {\r\n        itemHolders[2].el.style.display = 'block';\r\n        this.setContent(itemHolders[2], this.currIndex + 1);\r\n      }\r\n\r\n      this.appendHeavy();\r\n\r\n      this.contentLoader.updateLazy();\r\n\r\n      this.events.add(window, 'resize', this._handlePageResize.bind(this));\r\n      this.events.add(window, 'scroll', this._updatePageScrollOffset.bind(this));\r\n      this.dispatch('bindEvents');\r\n    });\r\n\r\n    // set content for center slide (first time)\r\n    if (this.mainScroll.itemHolders[1]) {\r\n      this.setContent(this.mainScroll.itemHolders[1], this.currIndex);\r\n    }\r\n    this.dispatch('change');\r\n\r\n    this.opener.open();\r\n\r\n    this.dispatch('afterInit');\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Get looped slide index\r\n   * (for example, -1 will return the last slide)\r\n   *\r\n   * @param {number} index\r\n   * @returns {number}\r\n   */\r\n  getLoopedIndex(index) {\r\n    const numSlides = this.getNumItems();\r\n\r\n    if (this.options.loop) {\r\n      if (index > numSlides - 1) {\r\n        index -= numSlides;\r\n      }\r\n\r\n      if (index < 0) {\r\n        index += numSlides;\r\n      }\r\n    }\r\n\r\n    return clamp(index, 0, numSlides - 1);\r\n  }\r\n\r\n  appendHeavy() {\r\n    this.mainScroll.itemHolders.forEach((itemHolder) => {\r\n      itemHolder.slide?.appendHeavy();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change the slide\r\n   * @param {number} index New index\r\n   */\r\n  goTo(index) {\r\n    this.mainScroll.moveIndexBy(\r\n      this.getLoopedIndex(index) - this.potentialIndex\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Go to the next slide.\r\n   */\r\n  next() {\r\n    this.goTo(this.potentialIndex + 1);\r\n  }\r\n\r\n  /**\r\n   * Go to the previous slide.\r\n   */\r\n  prev() {\r\n    this.goTo(this.potentialIndex - 1);\r\n  }\r\n\r\n  /**\r\n   * @see slide/slide.js zoomTo\r\n   *\r\n   * @param {Parameters<Slide['zoomTo']>} args\r\n   */\r\n  zoomTo(...args) {\r\n    this.currSlide?.zoomTo(...args);\r\n  }\r\n\r\n  /**\r\n   * @see slide/slide.js toggleZoom\r\n   */\r\n  toggleZoom() {\r\n    this.currSlide?.toggleZoom();\r\n  }\r\n\r\n  /**\r\n   * Close the gallery.\r\n   * After closing transition ends - destroy it\r\n   */\r\n  close() {\r\n    if (!this.opener.isOpen || this.isDestroying) {\r\n      return;\r\n    }\r\n\r\n    this.isDestroying = true;\r\n\r\n    this.dispatch('close');\r\n\r\n    this.events.removeAll();\r\n    this.opener.close();\r\n  }\r\n\r\n  /**\r\n   * Destroys the gallery:\r\n   * - instantly closes the gallery\r\n   * - unbinds events,\r\n   * - cleans intervals and timeouts\r\n   * - removes elements from DOM\r\n   */\r\n  destroy() {\r\n    if (!this.isDestroying) {\r\n      this.options.showHideAnimationType = 'none';\r\n      this.close();\r\n      return;\r\n    }\r\n\r\n    this.dispatch('destroy');\r\n\r\n    this._listeners = {};\r\n\r\n    if (this.scrollWrap) {\r\n      this.scrollWrap.ontouchmove = null;\r\n      this.scrollWrap.ontouchend = null;\r\n    }\r\n\r\n    this.element?.remove();\r\n\r\n    this.mainScroll.itemHolders.forEach((itemHolder) => {\r\n      itemHolder.slide?.destroy();\r\n    });\r\n\r\n    this.contentLoader.destroy();\r\n    this.events.removeAll();\r\n  }\r\n\r\n  /**\r\n   * Refresh/reload content of a slide by its index\r\n   *\r\n   * @param {number} slideIndex\r\n   */\r\n  refreshSlideContent(slideIndex) {\r\n    this.contentLoader.removeByIndex(slideIndex);\r\n    this.mainScroll.itemHolders.forEach((itemHolder, i) => {\r\n      let potentialHolderIndex = (this.currSlide?.index ?? 0) - 1 + i;\r\n      if (this.canLoop()) {\r\n        potentialHolderIndex = this.getLoopedIndex(potentialHolderIndex);\r\n      }\r\n      if (potentialHolderIndex === slideIndex) {\r\n        // set the new slide content\r\n        this.setContent(itemHolder, slideIndex, true);\r\n\r\n        // activate the new slide if it's current\r\n        if (i === 1) {\r\n          this.currSlide = itemHolder.slide;\r\n          itemHolder.slide?.setIsActive(true);\r\n        }\r\n      }\r\n    });\r\n\r\n    this.dispatch('change');\r\n  }\r\n\r\n\r\n  /**\r\n   * Set slide content\r\n   *\r\n   * @param {ItemHolder} holder mainScroll.itemHolders array item\r\n   * @param {number} index Slide index\r\n   * @param {boolean} [force] If content should be set even if index wasn't changed\r\n   */\r\n  setContent(holder, index, force) {\r\n    if (this.canLoop()) {\r\n      index = this.getLoopedIndex(index);\r\n    }\r\n\r\n    if (holder.slide) {\r\n      if (holder.slide.index === index && !force) {\r\n        // exit if holder already contains this slide\r\n        // this could be common when just three slides are used\r\n        return;\r\n      }\r\n\r\n      // destroy previous slide\r\n      holder.slide.destroy();\r\n      holder.slide = undefined;\r\n    }\r\n\r\n    // exit if no loop and index is out of bounds\r\n    if (!this.canLoop() && (index < 0 || index >= this.getNumItems())) {\r\n      return;\r\n    }\r\n\r\n    const itemData = this.getItemData(index);\r\n    holder.slide = new Slide(itemData, index, this);\r\n\r\n    // set current slide\r\n    if (index === this.currIndex) {\r\n      this.currSlide = holder.slide;\r\n    }\r\n\r\n    holder.slide.append(holder.el);\r\n  }\r\n\r\n  /** @returns {Point} */\r\n  getViewportCenterPoint() {\r\n    return {\r\n      x: this.viewportSize.x / 2,\r\n      y: this.viewportSize.y / 2\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Update size of all elements.\r\n   * Executed on init and on page resize.\r\n   *\r\n   * @param {boolean} [force] Update size even if size of viewport was not changed.\r\n   */\r\n  updateSize(force) {\r\n    // let item;\r\n    // let itemIndex;\r\n\r\n    if (this.isDestroying) {\r\n      // exit if PhotoSwipe is closed or closing\r\n      // (to avoid errors, as resize event might be delayed)\r\n      return;\r\n    }\r\n\r\n    //const newWidth = this.scrollWrap.clientWidth;\r\n    //const newHeight = this.scrollWrap.clientHeight;\r\n\r\n    const newViewportSize = getViewportSize(this.options, this);\r\n\r\n    if (!force && pointsEqual(newViewportSize, this._prevViewportSize)) {\r\n      // Exit if dimensions were not changed\r\n      return;\r\n    }\r\n\r\n    //this._prevViewportSize.x = newWidth;\r\n    //this._prevViewportSize.y = newHeight;\r\n    equalizePoints(this._prevViewportSize, newViewportSize);\r\n\r\n    this.dispatch('beforeResize');\r\n\r\n    equalizePoints(this.viewportSize, this._prevViewportSize);\r\n\r\n    this._updatePageScrollOffset();\r\n\r\n    this.dispatch('viewportSize');\r\n\r\n    // Resize slides only after opener animation is finished\r\n    // and don't re-calculate size on inital size update\r\n    this.mainScroll.resize(this.opener.isOpen);\r\n\r\n    if (!this.hasMouse && window.matchMedia('(any-hover: hover)').matches) {\r\n      this.mouseDetected();\r\n    }\r\n\r\n    this.dispatch('resize');\r\n  }\r\n\r\n  /**\r\n   * @param {number} opacity\r\n   */\r\n  applyBgOpacity(opacity) {\r\n    this.bgOpacity = Math.max(opacity, 0);\r\n    if (this.bg) {\r\n      this.bg.style.opacity = String(this.bgOpacity * this.options.bgOpacity);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Whether mouse is detected\r\n   */\r\n  mouseDetected() {\r\n    if (!this.hasMouse) {\r\n      this.hasMouse = true;\r\n      this.element?.classList.add('pswp--has_mouse');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Page resize event handler\r\n   *\r\n   * @private\r\n   */\r\n  _handlePageResize() {\r\n    this.updateSize();\r\n\r\n    // In iOS webview, if element size depends on document size,\r\n    // it'll be measured incorrectly in resize event\r\n    //\r\n    // https://bugs.webkit.org/show_bug.cgi?id=170595\r\n    // https://hackernoon.com/onresize-event-broken-in-mobile-safari-d8469027bf4d\r\n    if (/iPhone|iPad|iPod/i.test(window.navigator.userAgent)) {\r\n      setTimeout(() => {\r\n        this.updateSize();\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Page scroll offset is used\r\n   * to get correct coordinates\r\n   * relative to PhotoSwipe viewport.\r\n   *\r\n   * @private\r\n   */\r\n  _updatePageScrollOffset() {\r\n    this.setScrollOffset(0, window.pageYOffset);\r\n  }\r\n\r\n  /**\r\n   * @param {number} x\r\n   * @param {number} y\r\n   */\r\n  setScrollOffset(x, y) {\r\n    this.offset.x = x;\r\n    this.offset.y = y;\r\n    this.dispatch('updateScrollOffset');\r\n  }\r\n\r\n  /**\r\n   * Create main HTML structure of PhotoSwipe,\r\n   * and add it to DOM\r\n   *\r\n   * @private\r\n   */\r\n  _createMainStructure() {\r\n    // root DOM element of PhotoSwipe (.pswp)\r\n    this.element = createElement('pswp', 'div');\r\n    this.element.setAttribute('tabindex', '-1');\r\n    this.element.setAttribute('role', 'dialog');\r\n\r\n    // template is legacy prop\r\n    this.template = this.element;\r\n\r\n    // Background is added as a separate element,\r\n    // as animating opacity is faster than animating rgba()\r\n    this.bg = createElement('pswp__bg', 'div', this.element);\r\n    this.scrollWrap = createElement('pswp__scroll-wrap', 'section', this.element);\r\n    this.container = createElement('pswp__container', 'div', this.scrollWrap);\r\n\r\n    // aria pattern: carousel\r\n    this.scrollWrap.setAttribute('aria-roledescription', 'carousel');\r\n    this.container.setAttribute('aria-live', 'off');\r\n    this.container.setAttribute('id', 'pswp__items');\r\n\r\n    this.mainScroll.appendHolders();\r\n\r\n    this.ui = new UI(this);\r\n    this.ui.init();\r\n\r\n    // append to DOM\r\n    (this.options.appendToEl || document.body).appendChild(this.element);\r\n  }\r\n\r\n\r\n  /**\r\n   * Get position and dimensions of small thumbnail\r\n   *   {x:,y:,w:}\r\n   *\r\n   * Height is optional (calculated based on the large image)\r\n   *\r\n   * @returns {Bounds | undefined}\r\n   */\r\n  getThumbBounds() {\r\n    return getThumbBounds(\r\n      this.currIndex,\r\n      this.currSlide ? this.currSlide.data : this._initialItemData,\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * If the PhotoSwipe can have continuous loop\r\n   * @returns Boolean\r\n   */\r\n  canLoop() {\r\n    return (this.options.loop && this.getNumItems() > 2);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {PhotoSwipeOptions} options\r\n   * @returns {PreparedPhotoSwipeOptions}\r\n   */\r\n  _prepareOptions(options) {\r\n    if (window.matchMedia('(prefers-reduced-motion), (update: slow)').matches) {\r\n      options.showHideAnimationType = 'none';\r\n      options.zoomAnimationDuration = 0;\r\n    }\r\n\r\n    /** @type {PreparedPhotoSwipeOptions} */\r\n    return {\r\n      ...defaultOptions,\r\n      ...options\r\n    };\r\n  }\r\n}\r\n\r\nexport default PhotoSwipe;\r\n","<template>\n  <div :id=\"id\" class=\"gallery\">\n    <a\n      v-for=\"(image, key) in imagesData\"\n      class=\"gallery__image\"\n      :key=\"key\"\n      :href=\"image.largeURL\"\n      :data-pswp-width=\"image.width\"\n      :data-pswp-height=\"image.height\"\n      data-cropped=\"true\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      <!-- :style=\"`height: ${height}px`\"  -->\n      <img :src=\"image.thumbnailURL\" alt=\"\" />\n    </a>\n  </div>\n</template>\n\n<script>\nimport PhotoSwipeLightbox from \"photoswipe/lightbox\";\nimport PhotoSwipe from \"photoswipe\";\nimport \"photoswipe/style.css\";\nexport default {\n  props: {\n    images: { type: Array, required: true },\n    id: { type: String, required: true },\n    hasDownload: { type: Boolean, default: false },\n    height: { type: Number, default: 133 },\n  },\n  data() {\n    return {\n      imagesData: this.images,\n      lightbox: null,\n    };\n  },\n  computed: {\n    getMinHeight() {\n      return this.images.reduce(function (prev, curr) {\n        return prev.height < curr.height ? prev : curr;\n      }).height;\n    },\n  },\n  mounted() {\n    if (!this.lightbox) {\n      this.lightbox = new PhotoSwipeLightbox({\n        mainClass: \"gallery\",\n        gallery: \"#\" + this.id,\n        children: \"a\",\n        pswpModule: PhotoSwipe,\n        padding: { top: 60, bottom: 80, left: 0, right: 0 },\n      });\n\n      this.lightbox.on(\"uiRegister\", () => {\n        if (this.hasDownload) {\n          this.lightbox.pswp.ui.registerElement({\n            name: \"download-button\",\n            order: 8,\n            isButton: true,\n            tagName: \"a\",\n\n            // SVG with outline\n            html: {\n              isCustomSVG: true,\n              inner:\n                '<path d=\"M20.5 14.3 17.1 18V10h-2.2v7.9l-3.4-3.6L10 16l6 6.1 6-6.1ZM23 23H9v2h14Z\" id=\"gallery__icn-download\"/>',\n              outlineID: \"gallery__icn-download\",\n            },\n\n            // Or provide full svg:\n            // html: '<svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\" class=\"gallery__icn\"><path d=\"M20.5 14.3 17.1 18V10h-2.2v7.9l-3.4-3.6L10 16l6 6.1 6-6.1ZM23 23H9v2h14Z\" /></svg>',\n\n            // Or provide any other markup:\n            // html: '<i class=\"fa-solid fa-download\"></i>'\n\n            onInit: (el, pswp) => {\n              el.setAttribute(\"download\", \"\");\n              el.setAttribute(\"target\", \"_blank\");\n              el.setAttribute(\"rel\", \"noopener\");\n\n              pswp.on(\"change\", () => {\n                el.href = pswp.currSlide.data.src;\n              });\n            },\n          });\n        }\n\n        this.lightbox.pswp.ui.registerElement({\n          name: \"thumbsIndicator\",\n          className: \"gallery__thumbs-indicator\",\n          appendTo: \"wrapper\",\n          onInit: (el, pswp) => {\n            const thumbs = [];\n            let thumb;\n            let img;\n            let prevIndex = -1;\n\n            for (let i = 0; i < pswp.getNumItems(); i++) {\n              img = document.createElement(\"img\");\n              img.src = this.images[i].thumbnailURL;\n              thumb = document.createElement(\"div\");\n              thumb.className = \"gallery__thumb\";\n              thumb.appendChild(img);\n              thumbs.push(thumb);\n              el.appendChild(thumb);\n              thumb.onclick = (e) => {\n                if (e.target.closest(\".gallery__thumb\")) {\n                  pswp.goTo(thumbs.indexOf(e.target));\n                }\n              };\n            }\n\n            pswp.on(\"change\", () => {\n              if (prevIndex >= 0) {\n                thumbs[prevIndex].classList.remove(\"gallery__thumb_active\");\n              }\n              thumbs[pswp.currIndex].classList.add(\"gallery__thumb_active\");\n              prevIndex = pswp.currIndex;\n            });\n          },\n        });\n      });\n\n      this.lightbox.init();\n    }\n  },\n  unmounted() {\n    if (this.lightbox) {\n      this.lightbox.destroy();\n      this.lightbox = null;\n    }\n  },\n  methods: {\n    getRatio(width, height) {\n      return width / height;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.gallery {\n  //   display: flex;\n  //   flex-wrap: wrap;\n  //   gap: 1rem;\n\n  &__image {\n    display: flex;\n    justify-content: center;\n    overflow: hidden;\n    aspect-ratio: 1 / 1;\n\n    & img {\n      object-fit: cover;\n      width: 100%;\n    }\n  }\n\n  &__thumbs-indicator {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    gap: 1vw;\n\n    position: absolute;\n    bottom: 15px;\n    left: 0;\n    right: 0;\n  }\n  &__thumb {\n    flex: 0 1 auto;\n    max-width: 50px;\n    max-height: 50px;\n    aspect-ratio: 1 / 1;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n    cursor: pointer;\n\n    & img {\n      min-height: 100%;\n      min-width: 100%;\n      width: auto;\n      pointer-events: none;\n    }\n  }\n  &__thumb_active {\n    box-shadow: 0 0 0 2px white;\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./VGallery.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./VGallery.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./VGallery.vue?vue&type=template&id=e5aeebd4&\"\nimport script from \"./VGallery.vue?vue&type=script&lang=js&\"\nexport * from \"./VGallery.vue?vue&type=script&lang=js&\"\nimport style0 from \"./VGallery.vue?vue&type=style&index=0&id=e5aeebd4&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div>\n    <v-gallery\n      class=\"mb-48 gallery-view\"\n      :images=\"images\"\n      :height=\"100\"\n      id=\"gallery-2\"\n    />\n  </div>\n</template>\n\n<script>\nimport VGallery from \"@/components/Gallery/VGallery.vue\";\nexport default {\n  components: {\n    VGallery,\n  },\n  data() {\n    return {\n      images: [\n        {\n          largeURL:\n            \"https://cdn.photoswipe.com/photoswipe-demo-images/photos/1/img-2500.jpg\",\n          thumbnailURL:\n            \"https://cdn.photoswipe.com/photoswipe-demo-images/photos/1/img-200.jpg\",\n          width: 1875,\n          height: 2500,\n        },\n        {\n          largeURL:\n            \"https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-2500.jpg\",\n          thumbnailURL:\n            \"https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-200.jpg\",\n          width: 1669,\n          height: 2500,\n        },\n        {\n          largeURL:\n            \"https://cdn.photoswipe.com/photoswipe-demo-images/photos/5/img-2500.jpg\",\n          thumbnailURL:\n            \"https://cdn.photoswipe.com/photoswipe-demo-images/photos/5/img-200.jpg\",\n          width: 2500,\n          height: 1666,\n        },\n        {\n          largeURL:\n            \"https://cdn.photoswipe.com/photoswipe-demo-images/photos/6/img-2500.jpg\",\n          thumbnailURL:\n            \"https://cdn.photoswipe.com/photoswipe-demo-images/photos/6/img-200.jpg\",\n          width: 2500,\n          height: 1666,\n        },\n        {\n          largeURL:\n            \"https://cdn.photoswipe.com/photoswipe-demo-images/photos/7/img-2500.jpg\",\n          thumbnailURL:\n            \"https://cdn.photoswipe.com/photoswipe-demo-images/photos/7/img-200.jpg\",\n          width: 1875,\n          height: 2500,\n        },\n        {\n          largeURL:\n            \"https://cdn.photoswipe.com/photoswipe-demo-images/photos/8/img-2500.jpg\",\n          thumbnailURL:\n            \"https://cdn.photoswipe.com/photoswipe-demo-images/photos/8/img-200.jpg\",\n          width: 2500,\n          height: 1667,\n        },\n        {\n          largeURL:\n            \"https://cdn.photoswipe.com/photoswipe-demo-images/photos/9/img-2500.jpg\",\n          thumbnailURL:\n            \"https://cdn.photoswipe.com/photoswipe-demo-images/photos/9/img-200.jpg\",\n          width: 2500,\n          height: 1667,\n        },\n        {\n          largeURL:\n            \"https://cdn.photoswipe.com/photoswipe-demo-images/photos/10/img-2500.jpg\",\n          thumbnailURL:\n            \"https://cdn.photoswipe.com/photoswipe-demo-images/photos/10/img-200.jpg\",\n          width: 2000,\n          height: 2500,\n        },\n        {\n          largeURL:\n            \"https://cdn.photoswipe.com/photoswipe-demo-images/photos/11/img-2500.jpg\",\n          thumbnailURL:\n            \"https://cdn.photoswipe.com/photoswipe-demo-images/photos/11/img-200.jpg\",\n          width: 2000,\n          height: 2500,\n        },\n      ],\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import \"@/assets/styles/mixins\";\n\n.gallery-view {\n  @include cols(4);\n\n  @include sm-block {\n    @include cols(6);\n  }\n\n  @include md-block {\n    @include cols(8);\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GalleryView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GalleryView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GalleryView.vue?vue&type=template&id=29071ca4&\"\nimport script from \"./GalleryView.vue?vue&type=script&lang=js&\"\nexport * from \"./GalleryView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./GalleryView.vue?vue&type=style&index=0&id=29071ca4&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","images","staticRenderFns","id","_l","imagesData","image","key","largeURL","width","height","thumbnailURL","createElement","className","tagName","appendToEl","el","document","appendChild","toTransformString","x","y","scale","propValue","undefined","setWidthHeight","w","h","style","LOAD_STATE","IDLE","LOADING","LOADED","ERROR","specialKeyUsed","e","button","ctrlKey","metaKey","altKey","shiftKey","getElementsFromOption","option","legacySelector","parent","elements","Element","NodeList","Array","isArray","from","selector","querySelectorAll","isPswpClass","fn","prototype","goTo","isSafari","navigator","vendor","match","PhotoSwipeEvent","constructor","type","details","defaultPrevented","Object","assign","preventDefault","Eventable","_listeners","_filters","pswp","options","addFilter","name","priority","push","sort","f1","f2","removeFilter","filter","applyFilters","args","forEach","apply","on","off","listener","dispatch","event","call","Placeholder","imageSrc","container","element","imgEl","decoding","alt","src","setAttribute","setDisplayedSize","transformOrigin","transform","destroy","parentNode","remove","Content","itemData","instance","index","data","placeholder","slide","displayedImageWidth","displayedImageHeight","Number","isAttached","hasSlide","isDecoding","state","content","removePlaceholder","keepPlaceholder","setTimeout","load","isLazy","reload","usePlaceholder","placeholderEl","parentElement","prepend","placeholderSrc","msrc","isFirstSlide","isImageContent","loadImage","innerHTML","html","updateContentSize","imageElement","updateSrcsetSizes","srcset","complete","onLoaded","onload","onerror","onError","setSlide","isActive","heavyAppended","append","displayError","isError","isLoading","isInitialSizeUpdate","isZoomable","sizesWidth","dataset","largestUsedSize","parseInt","sizes","String","lazyLoad","errorMsgEl","innerText","errorMsg","supportsDecode","decode","catch","finally","appendImage","activate","holderElement","deactivate","getViewportSize","getViewportSizeFn","newViewportSize","documentElement","clientWidth","window","innerHeight","parsePaddingOption","prop","viewportSize","paddingValue","paddingFn","padding","legacyPropName","toUpperCase","slice","getPanAreaSize","MAX_IMAGE_WIDTH","ZoomLevel","panAreaSize","elementSize","fit","fill","vFill","initial","secondary","max","min","update","maxWidth","maxHeight","hRatio","vRatio","Math","_getInitial","_getSecondary","_getMax","zoomLevels","slideData","_parseZoomLevelOption","optionPrefix","optionName","optionValue","currZoomLevel","lazyLoadData","createContentFromData","zoomLevel","ceil","lazyLoadSlide","getItemData","PhotoSwipeBase","getNumItems","numItems","dataSource","length","items","_getGalleryDOMElements","gallery","dataSourceItem","_domElementToItemData","galleryElement","children","childSelector","linkEl","querySelector","pswpSrc","href","pswpSrcset","pswpWidth","pswpHeight","pswpType","thumbnailEl","currentSrc","getAttribute","pswpCropped","cropped","thumbCropped","PhotoSwipeLightbox","super","_uid","shouldOpen","_preloadedContent","onThumbnailsClick","bind","init","gallerySelector","addEventListener","onLine","initialPoint","clientX","clientY","clickedIndex","getClickedIndex","currentTarget","loadAndOpen","getClickedIndexFn","clickedTarget","target","childElements","clickedChildIndex","findIndex","child","contains","initialPointerPos","preload","promiseArray","pswpModuleType","pswpModule","Promise","resolve","Error","openPromise","preloadFirstSlide","uid","all","then","iterableModules","mainModule","_openPhotoswipe","module","default","keys","contentLoader","addToCache","removeEventListener","equalizePoints","p1","p2","roundPoint","p","round","getDistanceBetween","abs","sqrt","pointsEqual","clamp","val","setTransform","defaultCSSEasing","setTransitionStyle","duration","ease","transition","removeTransitionStyle","decodeImage","img","reject","supportsPassive","defineProperty","get","DOMEvents","_pool","add","passive","_toggleListener","removeAll","poolItem","unbind","skipPool","methodName","types","split","eType","eventOptions","PanBounds","center","_updateAxis","reset","axis","elSize","paddingProp","correctPan","panOffset","Slide","currIndex","currentResolution","pan","opener","isOpen","getContentBySlide","bounds","prevDisplayedWidth","prevDisplayedHeight","setIsActive","calculateSize","appendHeavy","zoomAndPanToInitial","applyCurrentZoomPan","appendHeavyNearby","mainScroll","isShifted","resize","panTo","force","scaleMultiplier","sizeChanged","getPlaceholderElement","zoomTo","destZoomLevel","centerPoint","transitionDuration","ignoreBounds","animations","stopAllPan","prevZoomLevel","setZoomLevel","calculateZoomToPanOffset","finishTransition","_setResolution","startTransition","isPan","getCurrentTransform","onComplete","easing","toggleZoom","zoomAnimationDuration","point","totalPanDistance","getViewportCenterPoint","zoomFactor","panX","panY","isPannable","Boolean","_applyZoomTransform","currSlide","zoom","newResolution","PAN_END_FRICTION","VERTICAL_DRAG_FRICTION","MIN_RATIO_TO_CLOSE","MIN_NEXT_SLIDE_SPEED","project","initialVelocity","decelerationRate","DragHandler","gestures","startPan","start","stopAll","change","prevP1","dragAxis","closeOnVerticalDrag","isMultitouch","_setPanWithFriction","bgOpacity","_getVerticalDragRatio","applyBgOpacity","mainScrollChanged","_panOrMoveMainScroll","end","velocity","indexDiff","mainScrollShiftDiff","getCurrSlideX","currentSlideVisibilityRatio","moveIndexBy","correctZoomPan","_finishPanGestureForAxis","panPos","restoreBgOpacity","projectedPosition","vDragRatio","projectedVDragRatio","close","correctedPanPosition","dampingRatio","initialBgOpacity","totalPanDist","startSpring","onUpdate","pos","animationProgressRatio","floor","delta","newMainScrollX","moveTo","newPan","allowPanToNext","currSlideMainScrollX","isLeftToRight","isRightToLeft","wasAtMinPanPosition","wasAtMaxPanPosition","potentialPan","customFriction","correctedPan","UPPER_ZOOM_FRICTION","LOWER_ZOOM_FRICTION","getZoomPointsCenter","ZoomHandler","_startPan","_startZoomPoint","_zoomPoint","_wasOverFitZoomLevel","_startZoomLevel","startP1","startP2","minZoomLevel","maxZoomLevel","pinchToClose","_calculatePanForZoomLevel","ignoreGesture","destinationZoomLevel","currZoomLevelNeedsChange","initialPan","destinationPan","panNeedsChange","naturalFrequency","now","newZoomLevel","didTapOnMainContent","closest","TapHandler","click","originalEvent","targetClassList","classList","isImageClick","isBackgroundClick","_doClickOrTapAction","tap","doubleTap","actionName","actionFullName","clickToCloseNonZoomable","toggle","AXIS_SWIPE_HYSTERISIS","DOUBLE_TAP_DELAY","MIN_TAP_DISTANCE","Gestures","prevP2","_lastStartP1","_intervalP1","_numActivePoints","_ongoingPointers","_touchEventEnabled","_pointerEventEnabled","PointerEvent","supportsTouch","maxTouchPoints","_intervalTime","_velocityCalculated","isDragging","isZooming","raf","_tapTimer","drag","tapHandler","events","scrollWrap","_onClick","_bindEvents","ontouchmove","ontouchend","pref","down","up","cancel","cancelEvent","onPointerDown","onPointerMove","onPointerUp","isMousePointer","pointerType","mouseDetected","_preventPointerEventBehaviour","_updatePoints","_clearTapTimer","_finishDrag","_updateStartPoints","_rafStopLoop","_rafRenderLoop","_calculateDragDirection","Date","_updateVelocity","_finishTap","_updatePrevPoints","requestAnimationFrame","time","_getVelocity","indexOf","tapDelay","doubleTapAction","clearTimeout","displacement","cancelAnimationFrame","pointerEvent","pointerIndex","ongoingPointer","pointerId","splice","_convertEventPosToPoint","touchEvent","touches","diff","axisToCheck","pageX","offset","pageY","identifier","stopPropagation","MAIN_SCROLL_END_FRICTION","MainScroll","slideWidth","_currPositionIndex","_prevPositionIndex","_containerShiftIndex","itemHolders","resizeSlides","newSlideWidth","spacing","slideWidthChanged","itemHolder","resetPosition","appendHolders","i","display","canBeSwiped","animate","velocityX","newIndex","potentialIndex","numSlides","canLoop","getLoopedIndex","distance","stopMainScroll","destinationX","isMainScroll","updateCurrItem","currDiff","currDistance","positionDifference","tempHolder","diffAbs","shift","setContent","pop","unshift","updateLazy","dragging","newSlideIndexOffset","KeyboardKeyCodesMap","Escape","z","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","Tab","getKeyboardEventKey","isKeySupported","Keyboard","_wasFocused","_focusRoot","_onFocusIn","_onKeyDown","lastActiveElement","activeElement","returnFocus","focus","keydownAction","isForward","keyCode","escKey","arrowKeys","template","DEFAULT_EASING","CSSAnimation","props","onFinish","_target","_onComplete","_finished","_onTransitionEnd","_helperTimeout","_finalizeAnimation","DEFAULT_NATURAL_FREQUENCY","DEFAULT_DAMPING_RATIO","SpringEaser","_dampingRatio","_naturalFrequency","_dampedFrequency","easeFrame","deltaPosition","deltaTime","coeff","naturalDumpingPow","E","dumpedFCos","cos","dumpedFSin","sin","SpringAnimation","_raf","easer","prevTime","animationLoop","Animations","activeAnimations","_start","isSpring","animation","stop","isPanRunning","some","ScrollWheel","_onWheel","deltaX","deltaY","wheelToZoom","deltaMode","addElementHTML","htmlData","isCustomSVG","svgData","out","join","size","outlineID","inner","UIElement","elementHTML","isButton","toLowerCase","title","ariaLabel","ariaText","onInit","onClick","onclick","appendTo","topBar","initArrowButton","isNextButton","loop","disabled","arrowPrev","order","arrowNext","closeButton","zoomButton","loadingIndicator","indicatorElement","isVisible","delayTimeout","toggleIndicatorClass","setIndicatorVisibility","visible","updatePreloaderVisibility","preloaderDelay","ui","counterIndicator","counterElement","indexIndicatorSep","setZoomedIn","isZoomedIn","UI","isRegistered","uiElementsData","_lastUpdatedZoomLevel","a","b","uiElementData","registerElement","_onZoomPanUpdate","elementData","isClosing","currZoomLevelDiff","potentialZoomLevel","imageClickAction","getBoundsByElement","thumbAreaRect","getBoundingClientRect","left","top","getCroppedBoundsByElement","imageWidth","imageHeight","fillZoomLevel","offsetX","offsetY","innerRect","getThumbBounds","thumbBounds","thumbnail","thumbSelector","matches","MIN_SLIDES_TO_CACHE","ContentLoader","limit","_cachedItems","loadSlideByIndex","initialIndex","getContentByIndex","removeByIndex","indexToRemove","item","removedItem","find","MIN_OPACITY","Opener","isClosed","isOpening","_duration","_useAnimation","_croppedZoom","_animateRootOpacity","_animateBgOpacity","_placeholder","_opacityElement","_cropContainer1","_cropContainer2","_thumbBounds","_prepareOpen","open","hideAnimationDuration","maxWidthToAnimate","_applyStartProps","showAnimationDuration","showHideAnimationType","showHideOpacity","_initialThumbBounds","_animateZoom","bg","opacity","overflow","_setClosedStateZoomPan","willChange","decoded","isDelaying","_initiate","setProperty","_animateToOpenState","_animateToClosedState","_onAnimationComplete","_animateTo","containerOnePanX","containerOnePanY","containerTwoPanX","containerTwoPanY","animProps","defaultOptions","bgClickAction","tapAction","PhotoSwipe","_prepareOptions","_prevViewportSize","isDestroying","hasMouse","_initialItemData","keyboard","_createMainStructure","rootClasses","mainClass","scrollWheel","isNaN","updateSize","pageYOffset","_handlePageResize","_updatePageScrollOffset","next","prev","refreshSlideContent","slideIndex","potentialHolderIndex","holder","matchMedia","test","userAgent","setScrollOffset","body","required","hasDownload","lightbox","computed","getMinHeight","reduce","curr","mounted","bottom","right","thumbs","thumb","prevIndex","unmounted","methods","getRatio","component","components","VGallery"],"sourceRoot":""}