{"version":3,"file":"js/ai.0688f93c.js","mappings":"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","sources":["webpack://free-design-system/./src/views/ai/AIView.vue","webpack://free-design-system/./src/components/AI/VAI.vue","webpack://free-design-system/src/components/AI/VAI.vue","webpack://free-design-system/./src/components/AI/VAI.vue?9d8f","webpack://free-design-system/./src/components/AI/VAI.vue?367a","webpack://free-design-system/src/views/ai/AIView.vue","webpack://free-design-system/./src/views/ai/AIView.vue?f9e2","webpack://free-design-system/./src/views/ai/AIView.vue?14c6"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('v-ai',{attrs:{\"width\":400,\"height\":400}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('canvas',{ref:\"canvasAI\",style:(`width: ${_vm.width}px; height=${_vm.height}px; border: 1px solid #42a5f0`),attrs:{\"width\":_vm.width,\"height\":_vm.height},on:{\"click\":_vm.clickCell}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <canvas\n      ref=\"canvasAI\"\n      :width=\"width\"\n      :height=\"height\"\n      :style=\"`width: ${width}px; height=${height}px; border: 1px solid #42a5f0`\"\n      @click=\"clickCell\"\n    ></canvas>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    width: {\n      type: Number,\n      default: 100,\n    },\n    height: {\n      type: Number,\n      default: 100,\n    },\n  },\n  data() {\n    return {\n      ctx: null,\n      cellWidth: this.width / 10,\n      cellHeight: this.height / 10,\n      fps: 60,\n      timer: null,\n      cells: [],\n    };\n  },\n  methods: {\n    fill({ x, y, color }) {\n      this.ctx.fillStyle = color;\n      this.ctx.beginPath();\n      this.ctx.arc(x, y, this.cellWidth / 2, 0, this.cellWidth * Math.PI);\n      this.ctx.fill();\n    },\n    createCell({ x, y, color, mvX = 0, mvY = 0 }) {\n      let newX = x,\n        newY = y;\n\n      if (mvX) {\n        newX = x + mvX;\n      }\n\n      if (mvY) {\n        newY = y + mvY;\n      }\n\n      this.fill({ x: newX, y: newY, color });\n    },\n    checkBorderCollision(coordX, coordY) {\n      if (coordX > this.width - this.cellWidth / 2) {\n        return \"x\";\n      }\n      if (coordX < this.cellWidth / 2) {\n        return \"x\";\n      }\n      if (coordY > this.height - this.cellHeight / 2) {\n        return \"y\";\n      }\n      if (coordY < this.cellHeight / 2) {\n        return \"y\";\n      }\n      return false;\n    },\n    checkCellCollision(cell1, cell2) {\n      return (\n        Math.sqrt(\n          Math.pow(cell2.x - cell1.x, 2) + Math.pow(cell2.y - cell1.y, 2)\n        ) -\n          this.cellWidth >\n        0\n      );\n    },\n    clickCell($event) {\n      const rect = this.$refs.canvasAI.getBoundingClientRect();\n      const canvasCoords = {\n        left: rect.left,\n        top: rect.top,\n      };\n      const x = $event.x - canvasCoords.left;\n      const y = $event.y - canvasCoords.top;\n      const newCell = {\n        x,\n        y,\n        color: \"#888888\",\n        mvX: Math.round(Math.random() * 10 - 5),\n        mvY: Math.round(Math.random() * 10 - 5),\n      };\n\n      if (x < this.cellWidth / 2 || x >= this.width - this.cellWidth / 2)\n        return false;\n      if (y < this.cellHeight / 2 || y >= this.height - this.cellHeight / 2)\n        return false;\n\n      this.createCell(newCell);\n      this.cells.push(newCell);\n    },\n    renderCell(cell) {\n      if (this.checkBorderCollision(cell.x, cell.y) === \"x\") {\n        cell.mvX = cell.mvX * -1;\n      } else if (this.checkBorderCollision(cell.x, cell.y) === \"y\") {\n        cell.mvY = cell.mvY * -1;\n      }\n      cell.x += cell.mvX;\n      cell.y += cell.mvY;\n\n      if (this.cells.length > 1) {\n        for (let i = 0; i < this.cells.length; i++) {\n          for (let j = 0; j < this.cells.length; j++) {\n            if (this.cells[i] === this.cells[j]) continue;\n            if (!this.checkCellCollision(this.cells[i], this.cells[j])) {\n              this.cells[i].color = \"red\";\n              this.cells[j].color = \"blue\";\n              this.cells[i].mvX = this.cells[i].mvX * -1;\n              this.cells[i].mvY = this.cells[i].mvY * -1;\n            }\n          }\n        }\n      }\n\n      this.fill(cell);\n    },\n    render() {\n      this.timer = setTimeout(() => {\n        this.ctx.fillStyle = \"#fff\";\n        this.ctx.fillRect(0, 0, this.width, this.height);\n\n        this.cells.forEach((cell) => {\n          this.renderCell(cell);\n        });\n\n        this.render();\n      }, 1000 / this.fps);\n    },\n  },\n  mounted() {\n    this.ctx = this.$refs.canvasAI.getContext(\"2d\");\n    this.render();\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./VAI.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./VAI.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./VAI.vue?vue&type=template&id=1afed1f3&scoped=true&\"\nimport script from \"./VAI.vue?vue&type=script&lang=js&\"\nexport * from \"./VAI.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1afed1f3\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div>\n    <v-ai :width=\"400\" :height=\"400\" />\n  </div>\n</template>\n\n<script>\nimport VAi from \"@/components/AI/VAI\";\n\nexport default {\n  components: {\n    VAi,\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./AIView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./AIView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AIView.vue?vue&type=template&id=5558b437&scoped=true&\"\nimport script from \"./AIView.vue?vue&type=script&lang=js&\"\nexport * from \"./AIView.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5558b437\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","attrs","staticRenderFns","ref","style","width","height","on","clickCell","props","type","Number","default","data","ctx","cellWidth","cellHeight","fps","timer","cells","methods","fill","x","y","color","fillStyle","beginPath","arc","Math","PI","createCell","mvX","mvY","newX","newY","checkBorderCollision","coordX","coordY","checkCellCollision","cell1","cell2","sqrt","pow","$event","rect","$refs","canvasAI","getBoundingClientRect","canvasCoords","left","top","newCell","round","random","push","renderCell","cell","length","i","j","setTimeout","fillRect","forEach","mounted","getContext","component","components","VAi"],"sourceRoot":""}